{"version":3,"sources":["webpack://Ae/webpack/universalModuleDefinition","webpack://Ae/webpack/bootstrap","webpack://Ae/./node_modules/@babel/runtime/regenerator/index.js","webpack://Ae/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://Ae/./node_modules/@babel/runtime/helpers/asyncToGenerator.js","webpack://Ae/./node_modules/ramda/src/merge.js","webpack://Ae/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://Ae/external {\"commonjs\":\"@stamp/required\",\"commonjs2\":\"@stamp/required\"}","webpack://Ae/external {\"commonjs\":\"bignumber.js\",\"commonjs2\":\"bignumber.js\"}","webpack://Ae/./node_modules/ramda/src/head.js","webpack://Ae/./node_modules/ramda/src/internal/_curry2.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://Ae/./node_modules/@babel/runtime/helpers/typeof.js","webpack://Ae/external {\"commonjs\":\"@stamp/it\",\"commonjs2\":\"@stamp/it\"}","webpack://Ae/./node_modules/ramda/src/internal/_curry1.js","webpack://Ae/external {\"commonjs\":\"joi-browser\",\"commonjs2\":\"joi-browser\"}","webpack://Ae/./node_modules/ramda/src/keys.js","webpack://Ae/./node_modules/ramda/src/path.js","webpack://Ae/./node_modules/ramda/src/fromPairs.js","webpack://Ae/./node_modules/ramda/src/contains.js","webpack://Ae/external {\"commonjs\":\"axios\",\"commonjs2\":\"axios\"}","webpack://Ae/./node_modules/ramda/src/internal/_has.js","webpack://Ae/./node_modules/ramda/src/join.js","webpack://Ae/./node_modules/ramda/src/toString.js","webpack://Ae/./node_modules/ramda/src/type.js","webpack://Ae/./node_modules/ramda/src/pluck.js","webpack://Ae/./node_modules/ramda/src/internal/_dispatchable.js","webpack://Ae/./node_modules/ramda/src/internal/_xfBase.js","webpack://Ae/external {\"commonjs\":\"tweetnacl\",\"commonjs2\":\"tweetnacl\"}","webpack://Ae/./node_modules/ramda/src/mapObjIndexed.js","webpack://Ae/./node_modules/ramda/src/prop.js","webpack://Ae/./node_modules/ramda/src/last.js","webpack://Ae/external {\"commonjs\":\"rlp\",\"commonjs2\":\"rlp\"}","webpack://Ae/./node_modules/ramda/src/internal/_reduce.js","webpack://Ae/./node_modules/ramda/src/internal/_curry3.js","webpack://Ae/./node_modules/ramda/src/reject.js","webpack://Ae/./node_modules/ramda/src/isNil.js","webpack://Ae/./node_modules/ramda/src/values.js","webpack://Ae/./node_modules/ramda/src/pick.js","webpack://Ae/./node_modules/ramda/src/internal/_includes.js","webpack://Ae/./node_modules/ramda/src/internal/_isPlaceholder.js","webpack://Ae/./node_modules/ramda/src/curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_arity.js","webpack://Ae/./node_modules/ramda/src/flatten.js","webpack://Ae/external {\"commonjs\":\"@aeternity/bip39\",\"commonjs2\":\"@aeternity/bip39\"}","webpack://Ae/./node_modules/ramda/src/internal/_curryN.js","webpack://Ae/./node_modules/ramda/src/internal/_isArray.js","webpack://Ae/./node_modules/ramda/src/invoker.js","webpack://Ae/./node_modules/ramda/src/flip.js","webpack://Ae/./node_modules/ramda/src/curry.js","webpack://Ae/external {\"commonjs\":\"bs58check\",\"commonjs2\":\"bs58check\"}","webpack://Ae/./node_modules/ramda/src/toUpper.js","webpack://Ae/./node_modules/ramda/src/defaultTo.js","webpack://Ae/./node_modules/ramda/src/toPairs.js","webpack://Ae/./node_modules/ramda/src/mergeDeepRight.js","webpack://Ae/./node_modules/ramda/src/groupBy.js","webpack://Ae/./node_modules/ramda/src/identity.js","webpack://Ae/./node_modules/ramda/src/indexBy.js","webpack://Ae/external {\"commonjs\":\"tweetnacl-auth\",\"commonjs2\":\"tweetnacl-auth\"}","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://Ae/./node_modules/ramda/src/internal/_includesWith.js","webpack://Ae/./node_modules/ramda/src/internal/_objectIs.js","webpack://Ae/./node_modules/ramda/src/internal/_isObject.js","webpack://Ae/./node_modules/ramda/src/internal/_isArrayLike.js","webpack://Ae/./node_modules/ramda/src/internal/_isString.js","webpack://Ae/./node_modules/ramda/src/internal/_map.js","webpack://Ae/./node_modules/ramda/src/internal/_objectAssign.js","webpack://Ae/./node_modules/ramda/src/nth.js","webpack://Ae/./node_modules/ramda/src/internal/_checkForMethod.js","webpack://Ae/./node_modules/ramda/src/reduceBy.js","webpack://Ae/./node_modules/ramda/src/slice.js","webpack://Ae/./node_modules/ramda/src/internal/_reduced.js","webpack://Ae/external {\"commonjs\":\"blakejs\",\"commonjs2\":\"blakejs\"}","webpack://Ae/external {\"commonjs\":\"aes-js\",\"commonjs2\":\"aes-js\"}","webpack://Ae/external {\"commonjs\":\"sha.js\",\"commonjs2\":\"sha.js\"}","webpack://Ae/./node_modules/ramda/src/without.js","webpack://Ae/./node_modules/ramda/src/uniqWith.js","webpack://Ae/./node_modules/ramda/src/identical.js","webpack://Ae/./node_modules/ramda/src/toLower.js","webpack://Ae/./node_modules/ramda/src/difference.js","webpack://Ae/./node_modules/ramda/src/mergeAll.js","webpack://Ae/./node_modules/ramda/src/assoc.js","webpack://Ae/./node_modules/ramda/src/has.js","webpack://Ae/./node_modules/ramda/src/drop.js","webpack://Ae/./node_modules/ramda/src/dropLast.js","webpack://Ae/./node_modules/ramda/src/zipObj.js","webpack://Ae/./node_modules/@babel/runtime/helpers/toArray.js","webpack://Ae/external {\"commonjs\":\"websocket\",\"commonjs2\":\"websocket\"}","webpack://Ae/external \"events\"","webpack://Ae/./node_modules/ramda/src/once.js","webpack://Ae/./node_modules/ramda/src/pickBy.js","webpack://Ae/./node_modules/ramda/src/reduce.js","webpack://Ae/external {\"commonjs\":\"bip32-path\",\"commonjs2\":\"bip32-path\"}","webpack://Ae/./node_modules/uuid/v4.js","webpack://Ae/./node_modules/ramda/src/call.js","webpack://Ae/./node_modules/ramda/src/find.js","webpack://Ae/./node_modules/regenerator-runtime/runtime.js","webpack://Ae/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://Ae/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://Ae/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://Ae/./node_modules/ramda/src/internal/_indexOf.js","webpack://Ae/./node_modules/ramda/src/equals.js","webpack://Ae/./node_modules/ramda/src/internal/_equals.js","webpack://Ae/./node_modules/ramda/src/internal/_arrayFromIterator.js","webpack://Ae/./node_modules/ramda/src/internal/_functionName.js","webpack://Ae/./node_modules/ramda/src/internal/_isArguments.js","webpack://Ae/./node_modules/ramda/src/internal/_complement.js","webpack://Ae/./node_modules/ramda/src/filter.js","webpack://Ae/./node_modules/ramda/src/internal/_isTransformer.js","webpack://Ae/./node_modules/ramda/src/internal/_filter.js","webpack://Ae/./node_modules/ramda/src/internal/_xwrap.js","webpack://Ae/./node_modules/ramda/src/bind.js","webpack://Ae/./node_modules/ramda/src/internal/_xfilter.js","webpack://Ae/./node_modules/ramda/src/internal/_makeFlat.js","webpack://Ae/./node_modules/ramda/src/internal/_isFunction.js","webpack://Ae/./node_modules/ramda/src/internal/_toString.js","webpack://Ae/./node_modules/ramda/src/internal/_quote.js","webpack://Ae/./node_modules/ramda/src/internal/_toISOString.js","webpack://Ae/./node_modules/ramda/src/internal/_Set.js","webpack://Ae/./node_modules/ramda/src/mergeDeepWithKey.js","webpack://Ae/./node_modules/ramda/src/mergeWithKey.js","webpack://Ae/./node_modules/ramda/src/internal/_xreduceBy.js","webpack://Ae/./node_modules/ramda/src/map.js","webpack://Ae/./node_modules/ramda/src/internal/_xmap.js","webpack://Ae/./node_modules/ramda/src/internal/_identity.js","webpack://Ae/./node_modules/ramda/src/hasPath.js","webpack://Ae/./node_modules/ramda/src/internal/_xdrop.js","webpack://Ae/./node_modules/ramda/src/internal/_dropLast.js","webpack://Ae/./node_modules/ramda/src/take.js","webpack://Ae/./node_modules/ramda/src/internal/_xtake.js","webpack://Ae/./node_modules/ramda/src/internal/_xdropLast.js","webpack://Ae/./node_modules/uuid/lib/rng.js","webpack://Ae/external \"crypto\"","webpack://Ae/./node_modules/uuid/lib/bytesToUuid.js","webpack://Ae/./node_modules/ramda/src/internal/_xfind.js","webpack://Ae/./es/utils/bytes.js","webpack://Ae/./es/tx/builder/schema.js","webpack://Ae/./es/tx/builder/helpers.js","webpack://Ae/./es/utils/crypto.js","webpack://Ae/./es/utils/mptree.js","webpack://Ae/./es/tx/builder/index.js","webpack://Ae/./es/utils/hd-wallet.js","webpack://Ae/./es/tx/index.js","webpack://Ae/./es/oracle/index.js","webpack://Ae/./es/chain/index.js","webpack://Ae/./es/account/index.js","webpack://Ae/./es/ae/index.js","webpack://Ae/./es/oracle/node.js","webpack://Ae/./es/utils/amount-formatter.js","webpack://Ae/./es/utils/async-init.js","webpack://Ae/./es/utils/json-big.js","webpack://Ae/./es/utils/string.js","webpack://Ae/./es/utils/swagger.js","webpack://Ae/./es/utils/semver-satisfies.js","webpack://Ae/./es/node.js","webpack://Ae/./es/node-pool/helpers.js","webpack://Ae/./es/node-pool/index.js","webpack://Ae/./es/tx/validator.js","webpack://Ae/./es/chain/node.js","webpack://Ae/./es/tx/tx.js","webpack://Ae/./es/account/memory.js","webpack://Ae/./es/account/selector.js","webpack://Ae/./es/accounts.js","webpack://Ae/./es/ae/aens.js","webpack://Ae/./es/utils/http.js","webpack://Ae/./es/contract/index.js","webpack://Ae/./es/contract/compiler.js","webpack://Ae/./es/contract/aci/transformation.js","webpack://Ae/./es/contract/aci/helpers.js","webpack://Ae/./es/contract/aci/index.js","webpack://Ae/./es/ae/contract.js","webpack://Ae/./es/rpc/server.js","webpack://Ae/./es/ae/wallet.js","webpack://Ae/./es/rpc/client.js","webpack://Ae/./es/ae/oracle.js","webpack://Ae/./es/ae/aepp.js","webpack://Ae/./es/channel/internal.js","webpack://Ae/./es/channel/handlers.js","webpack://Ae/./es/channel/index.js","webpack://Ae/./es/ae/universal.js","webpack://Ae/./es/index.js"],"names":["root","factory","exports","module","require","define","amd","undefined","global","__WEBPACK_EXTERNAL_MODULE__5__","__WEBPACK_EXTERNAL_MODULE__6__","__WEBPACK_EXTERNAL_MODULE__11__","__WEBPACK_EXTERNAL_MODULE__13__","__WEBPACK_EXTERNAL_MODULE__18__","__WEBPACK_EXTERNAL_MODULE__26__","__WEBPACK_EXTERNAL_MODULE__30__","__WEBPACK_EXTERNAL_MODULE__42__","__WEBPACK_EXTERNAL_MODULE__48__","__WEBPACK_EXTERNAL_MODULE__56__","__WEBPACK_EXTERNAL_MODULE__72__","__WEBPACK_EXTERNAL_MODULE__73__","__WEBPACK_EXTERNAL_MODULE__74__","__WEBPACK_EXTERNAL_MODULE__87__","__WEBPACK_EXTERNAL_MODULE__92__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","obj","configurable","writable","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","fn","self","this","args","arguments","apply","err","_objectAssign","merge","_curry2","arrayWithHoles","iterableToArrayLimit","nonIterableRest","arr","head","nth","_curry1","_isPlaceholder","f2","a","b","length","_b","_a","arrayWithoutHoles","iterableToArray","nonIterableSpread","_typeof2","iterator","constructor","_typeof","f1","_has","_isArguments","hasEnumBug","toString","propertyIsEnumerable","nonEnumerableProps","hasArgsEnumBug","contains","list","item","idx","keys","prop","nIdx","ks","checkArgsLength","path","paths","val","fromPairs","pairs","result","_includes","join","invoker","_toString","type","slice","map","pluck","_isArray","_isTransformer","methodNames","xf","Array","pop","transducer","init","_reduce","mapObjIndexed","acc","last","_isArrayLike","_xwrap","_iterableReduce","iter","step","next","_methodReduce","methodName","symIterator","len","_arrayReduce","reduce","TypeError","f3","_c","_complement","filter","pred","filterable","isNil","x","values","props","vals","pick","names","_indexOf","_arity","_curryN","curryN","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","Error","flatten","_makeFlat","received","combined","argsIdx","left","combinedIdx","isArray","_isFunction","arity","method","target","flip","curry","toUpper","defaultTo","v","toPairs","mergeDeepWithKey","mergeDeepRight","lObj","rObj","k","lVal","rVal","_checkForMethod","groupBy","reduceBy","push","identity","indexBy","elem","from","is","_isString","nodeType","functor","assign","output","source","nextKey","offset","charAt","methodname","_dispatchable","valueFn","valueAcc","keyFn","elt","_curry3","fromIndex","toIndex","without","xs","_includesWith","uniqWith","_objectIs","identical","toLower","_Set","difference","first","second","out","firstLen","secondLen","toFilterOut","add","mergeAll","concat","assoc","hasPath","has","_xdrop","drop","Math","max","Infinity","_dropLast","dropLast","zipObj","min","once","called","pickBy","test","rng","bytesToUuid","options","buf","rnds","random","ii","find","runtime","Op","hasOwn","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","GenStateSuspendedStart","GenStateExecuting","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","GenStateSuspendedYield","makeInvokeMethod","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","invoke","__await","unwrapped","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","reverse","skipTempReset","prev","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_arr","_n","_d","_e","_s","_i","arr2","equals","inf","indexOf","_equals","_arrayFromIterator","_functionName","_uniqContentEquals","aIterator","bIterator","stackA","stackB","eq","aItem","typeA","valueOf","message","ignoreCase","multiline","sticky","unicode","size","entries","keysA","extendedStackA","extendedStackB","f","match","String","_filter","_isObject","_xfilter","XWrap","thisObj","_xfBase","XFilter","input","recursive","flatt","jlen","j","ilen","_map","_quote","_toISOString","seen","recur","y","mapPairs","sort","NaN","repr","replace","pad","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","_nativeSet","Set","_items","hasOrAdd","shouldAdd","set","prevSize","bIdx","mergeWithKey","XReduceBy","inputs","_xreduceBy","_xmap","XMap","_path","XDrop","take","_xtake","_reduced","XTake","ret","XDropLast","pos","full","store","_xdropLast","crypto","randomBytes","byteToHex","substr","bth","XFind","found","_xfind","leftPad","inputBuffer","fill","fillArray","Uint8Array","Buffer","rightPad","bigNumberToByteArray","hexString","toBytes","big","Number","isInteger","BigNumber","isBigNumber","VSN","OBJECT_TAG_SIGNED_TRANSACTION","TX_FIELD","prefix","TX_SCHEMA_FIELD","schema","objectId","MIN_GAS_PRICE","TX_TYPE","account","signed","spend","nameClaim","namePreClaim","nameUpdate","nameRevoke","nameTransfer","contract","contractCreate","contractCall","contractCallResult","oracleRegister","oracleExtend","oracleQuery","oracleResponse","channelCreate","channelCloseMutual","channelCloseSolo","channelSlash","channelDeposit","channelWithdraw","channelSettle","channelOffChain","channel","channelSnapshotSolo","channelOffChainUpdateTransfer","channelOffChainUpdateDeposit","channelOffChainUpdateWithdrawal","channelOffChainCreateContract","channelOffChainCallContract","proofOfInclusion","stateTrees","merklePatriciaTree","merklePatriciaTreeValue","contractsTree","contractCallsTree","channelsTree","nameserviceTree","oraclesTree","accountsTree","gaAttach","gaMeta","sophiaByteCode","VM_VERSIONS","ABI_VERSIONS","PROTOCOL_VM_ABI","vmVersion","abiVersion","OBJECT_ID_TX_TYPE","FIELD_TYPES","int","id","ids","string","binary","rlpBinary","rlpBinaries","rawBinary","bool","hex","signatures","pointers","offChainUpdates","callStack","mptree","callReturnType","ctVersion","sophiaCodeTypeInfo","payload","DEFAULT_FEE","TX_FEE_BASE_GAS","txType","TX_FEE_OTHER_GAS","txSize","relativeTtl","times","plus","ceil","floor","PREFIX_ID_TAG","ID_TAG_PREFIX","VALIDATION_ERROR","msg","VALIDATION_MESSAGE","isMinusValue","BASE_TX","ACCOUNT_TX","CONTRACT_BYTE_CODE_MINERVA","CONTRACT_BYTE_CODE_ROMA","ACCOUNT_TX_2","SPEND_TX","SIGNED_TX","NAME_PRE_CLAIM_TX","NAME_CLAIM_TX","NAME_UPDATE_TX","NAME_TRANSFER_TX","NAME_REVOKE_TX","CONTRACT_TX","GA_ATTACH_TX","GA_META_TX","CONTRACT_CREATE_TX","CONTRACT_CALL_TX","CONTRACT_CALL_RESULT_TX","ORACLE_REGISTER_TX","ORACLE_EXTEND_TX","ORACLE_QUERY_TX","ORACLE_RESPOND_TX","CHANNEL_CREATE_TX","CHANNEL_DEPOSIT_TX","CHANNEL_WITHDRAW_TX","CHANNEL_CLOSE_MUTUAL_TX","CHANNEL_CLOSE_SOLO_TX","CHANNEL_SLASH_TX","CHANNEL_SETTLE_TX","CHANNEL_OFFCHAIN_TX","CHANNEL_OFFCHAIN_TX_2","CHANNEL_TX","CHANNEL_TX_2","CHANNEL_SNAPSHOT_SOLO_TX","CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX","CHANNEL_OFFCHAIN_CALL_CONTRACT_TX","CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX","CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX","CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX","PROOF_OF_INCLUSION_TX","mptrees","STATE_TREES_TX","MERKLE_PATRICIA_TREE_TX","MERKLE_PATRICIA_TREE_VALUE_TX","CONTRACTS_TREE_TX","CONTRACT_CALLS_TREE_TX","CHANNELS_TREE_TX","NAMESERVICE_TREE_TX","ORACLES_TREE_TX","ACCOUNTS_TREE_TX","TX_SERIALIZATION_SCHEMA","1","2","TX_DESERIALIZATION_SCHEMA","ERROR_TYPE","VERIFICATION_FIELD","verificationFn","VALIDATORS","ERRORS","invalidSignature","txKey","insufficientFee","expiredTTL","insufficientBalanceForAmountFee","insufficientBalanceForAmount","nonceUsed","nonceHigh","minGasPrice","vmAndAbiVersion","SIGNATURE_VERIFICATION_SCHEMA","CONTRACT_VERIFICATION_SCHEMA","consensusProtocolVersion","JSON","stringify","BASE_VERIFICATION_SCHEMA","minFee","height","balance","accountNonce","createSalt","salt","base64Types","buildContractId","ownerId","nonce","encode","hash","decode","buildHash","data","oracleQueryId","senderId","oracleId","nonceBE","alloc","formatSalt","padStart","commitmentHash","encodeBase58Check","nameId","split","includes","decodeBase64Check","assertedType","decodeBase58Check","encodeBase64Check","writeId","hashId","idTag","readId","tag","readUIntBE","writeInt","readInt","buildPointers","readPointers","Ecb","aesjs","ModeOfOperation","ecb","isBase64","str","index","ADDRESS_FORMAT","sophia","api","raw","formatAddress","format","address","decodeNode","isAddressValid","isValid","e","addressToHex","base58CheckAddress","addressFromDecimal","decimalAddress","aeEncodeKey","blake2b","allocUnsafe","labels","sha256hash","shajs","update","digest","MAX_SAFE_INTEGER","buffer","checksum","checkSumFn","newChecksum","decodeRaw","bs58check","hexStringToByte","parseInt","encodeUnsigned","writeUInt32BE","findIndex","encodeContractAddress","owner","publicKey","generateKeyPairFromSecret","secret","nacl","sign","keyPair","fromSecretKey","generateKeyPair","publicBuffer","secretBuffer","secretKey","encryptPublicKey","password","binaryKey","encryptKey","encryptPrivateKey","binaryData","hashedPasswordBytes","encrypt","decryptKey","encrypted","encryptedBytes","aesEcb","decrypt","privateKey","detached","verify","signature","prepareTx","personalMessageToBinary","signPersonalMessage","verifyPersonalMessage","pubKeyAddress","generateSaveWallet","decryptPrivateKey","decryptPubKey","forceError","RegExp","decodeTx","txHash","RLP","encodeTx","txData","encodedTx","isValidKeypair","envKeypair","env","force","keypair","rlp","OBJECT_TAGS","CHANNEL_OFFCHAIN_UPDATE_TRANSFER","objectTag","pretty","readIntBE","3","4","5","6","readSignatures","deserializeOffChainUpdate","opts","prettyTags","version","to","amount","readOffChainTXUpdates","updates","deserialize","tx","initiator","initiatorAmount","responder","responderAmount","channelReserve","lockPeriod","ttl","fee","channelId","round","rootHash","nodes","node","serialize","tree","mptHash","ORACLE_TTL_TYPES","delta","block","getOracleRelativeTtl","params","calculateMinFee","gas","multiplier","actualFee","buildFee","expected","buildTx","rlpEncoded","calculateFee","showWarning","console","warn","gt","validateParams","excludeKeys","assert","valid","lt","gte","validateField","buildRawTx","oracleTtlType","oracleTtlValue","queryTtlType","queryTtlValue","responseTtlType","responseTtlValue","transformParams","fieldType","mpt","serializeField","unpackRawTx","vm","abi","unpackTx","funHash","fnName","argType","outType","deserializeField","txObject","fromRlpBinary","objId","vsn","buildTxHash","rawTx","ED25519_CURVE","HARDENED_OFFSET","toHex","derivePathFromKey","segments","fromString","toPathArray","segment","parentKey","deriveChild","getMasterKeyFromSeed","seed","I","hmac","chainCode","indexBuffer","getSaveHDWalletAccounts","saveHDWallet","accountCount","walletKey","_","formatAccount","fromSeed","generateSaveHDWallet","mnemonic","validateMnemonic","masterKey","derivePathFromSeed","mnemonicToSeed","generateMnemonic","genMnemonic","Tx","stampit","deepConf","Ae","methods","required","spendTx","namePreclaimTx","nameClaimTx","nameTransferTx","nameUpdateTx","nameRevokeTx","contractCreateTx","contractCallTx","oracleRegisterTx","oracleExtendTx","oraclePostQueryTx","oracleRespondTx","getAccountNonce","channelCloseSoloTx","channelSlashTx","channelSettleTx","channelSnapshotSoloTx","getVmVersion","prepareTxParams","OracleBase","Contract","getOracle","getOracleQueries","getOracleQuery","Chain","Oracle","compose","deepProps","defaults","waitMined","statics","sendTransaction","awaitHeight","topBlock","poll","getTxInfo","mempool","txDryRun","getAccount","DEFAULT_NETWORK_ID","opt","networkId","getNetworkId","rlpBinaryTx","Crypto","txWithNetworkId","Account","signTransaction","selectedNode","recipientId","send","percentage","excludeFee","requestTransferAmount","TxBuilder","minus","transferFunds","destroyInstance","getOracleByPubkey","getOracleQueriesByPubkey","queryId","getOracleQueryByPubkeyAndQueryId","OracleNodeAPI","prefixes","magnitude","getNearestPrefix","exponent","abs","getLowerBoundPrefix","shiftedBy","precision","asyncInit","stamp","instance","deepConfiguration","AsyncInit","initializers","at","ch","text","_options","escapee","number","white","array","composers","composables","gap","indent","rep","escapable","meta","quote","lastIndex","charCodeAt","replacer","space","holder","partial","mind","toJSON","isFinite","parse","uffff","fromCharCode","strict","word","reviver","walk","snakeToPascal","pascalToSnake","expandPath","replacements","lookupType","spec","types","conformTypes","integer","properties","pascalizeKeys","missing","extendingErrorPath","conform","items","$ref","allOf","conformDispatch","httpConfig","headers","transformResponse","JsonBig","transformRequest","httpClients","config","url","axios","post","classifyParameters","parameters","req","query","body","pathArgs","queryArgs","bodyArgs","pascalizeParameters","traverseKeys","snakizeKeys","operationSignature","assertOne","coll","destructureClientError","response","status","reason","toUpperCase","Swagger","swag","axiosConfig","definitions","definition","errorHandler","operationId","description","toLowerCase","pascalized","optNames","indexedParameters","client","debug","log","conformed","expandedPath","axiosError","fullResponse","defineProperties","operation","op","urlFor","basePath","txEncoding","debugSwagger","geVersion","ltVersion","versionComponents","geComponents","ltComponents","base","toNumber","components","pow","vNumber","geNumber","ltNumber","remoteSwag","loader","internalUrl","tags","protocols","getCurrentKeyBlock","effectiveAtHeight","Node","handler","getNodeInfo","nodeNetworkId","getConsensusProtocolVersion","forceCompatibility","getStatus","revision","nodeRevision","genesisHash","genesisKeyBlockHash","semverSatisfies","NODE_GE_VERSION","NODE_LT_VERSION","prepareNodeObject","NodePool","pool","Map","validateNodes","selectNode","addNode","propertyDescriptors","currentNode","getterForCurrentNode","nodeInstance","select","isNodeConnected","getNodesInPool","nodeProps","ownerPublicKey","lte","gasPrice","supportedProtocol","txProtocol","resolveDataForBase","chain","accountBalance","getAccountByPubkey","getCurrentKeyBlockHeight","verifySchema","validatorKey","unpackedTx","rlpEncodedTx","verifyTx","validation","getOwnerPublicKey","resolvedData","signatureVerification","baseVerification","customVerification","TransactionValidator","unpackAndVerify","verifyTxBeforeSend","code","errorData","postTransaction","getAccountByPubkeyAndHeight","getAccountByPubkeyAndHash","formatBalance","getTransactionByHash","pause","duration","setTimeout","h","probe","current","interval","attempts","getTopBlock","top","th","blockHeight","blocks","getTransactionInfoByHash","res","callInfo","getPendingTransactions","getCurrentGeneration","hashOrHeight","getGenerationByHash","getGenerationByHeight","getMicroBlockTransactionsByHash","transactions","getKeyBlockByHash","getKeyBlockByHeight","getMicroBlockHeaderByHash","txs","accounts","dryRunTxs","contractId","getContractCode","getNameEntryByName","ChainNode","getGeneration","getMicroBlockHeader","getMicroBlockTransactions","getKeyBlock","getContractByteCode","getName","nativeMode","postSpend","accountId","commitmentId","postNamePreclaim","nameSalt","postNameClaim","postNameTransfer","nameTtl","clientTtl","postNameUpdate","postNameRevoke","deposit","callData","postContractCreate","callerId","postContractCall","queryFormat","responseFormat","queryFee","oracleTtl","postOracleRegister","postOracleExtend","responseTtl","queryTtl","postOracleQuery","postOracleRespond","fromId","poi","postChannelCloseSolo","postChannelSlash","initiatorAmountFinal","responderAmountFinal","postChannelSettle","postChannelSnapshotSolo","calculateTtl","relative","absoluteTtl","Transaction","protocolForTX","secrets","WeakMap","MemoryAccount","pub","priv","isBuffer","pubBuffer","validateKeyPair","setSecret","onAccount","signWith","Selector","selectAccount","Accounts","all","process","addAccount","_acc","removeAccount","setKeypair","addresses","classify","ak","ok","klass","freeze","aensUpdate","aensQuery","transfer","aensTransfer","revoke","aensRevoke","claimTx","_salt","preclaimTx","claim","aensClaim","Aens","aensPreclaim","processResponse","baseUrl","put","statusText","Http","changeBaseUrl","newUrl","ContractBase","contractEncodeCallDataAPI","contractDecodeDataAPI","compileContractAPI","contractGetACI","setCompilerUrl","getCompilerVersion","contractDecodeCallResultAPI","http","isInit","calldata","bytecode","callValue","callResult","compilerVersion","checkCompatibility","COMPILER_GE_VERSION","COMPILER_LT_VERSION","ContractCompilerAPI","compilerUrl","contractDecodeCallDataByCodeAPI","contractDecodeCallDataBySourceAPI","SOPHIA_TYPES","linkTypeDefs","bindings","typeDef","aciType","typedef","vars","baseType","generic","varianValue","variant","el","injectVars","readType","contractName","transform","tuple","option","bytes","optionV","transformMap","transformVariant","variantArgs","transformDecodedData","aci","skipTransformDecoded","addressPrefix","keyT","valueT","variantType","genericMap","getJoiErrorMsg","errors","label","JoiBinary","Joi","extend","joi","any","pre","convert","rules","validate","createError","validateArguments","validationSchema","ordered","prepareSchema","alternatives","g","or","regex","bufferCheck","abortEarly","getFunctionACI","functions","type_defs","buildContractMethods","aciArgs","stateful","parseArguments","deploy","callStatic","prepareArgsForEncode","contractAddress","defaultOptions","skipArgsConvert","interface","compiled","deployInfo","setOptions","compile","fnACI","contractCallStatic","returns","decodedResult","contractDeploy","transaction","createdAt","contractCompile","getContractInstance","returnValue","decodedError","dryRunAccount","contractEncodeCall","dryRunContractTx","dryRunAmount","pubKey","results","callObj","returnType","handleCallError","contractDecodeData","initState","encodeCall","deployStatic","ContractAPI","ContractACI","ContractWithCompiler","origin","jsonrpc","session","rpcMethods","rpcSessions","postMessage","RpcServer","window","receive","addEventListener","destroyServer","removeEventListener","createSession","uuid","hello","handlers","Rpc","deepProperties","Wallet","onTx","onChain","onContract","rpc","RpcClient","callbacks","parent","sequence","destroyClient","getOracleObject","oracle","queries","oracleQueries","postQuery","postQueryToOracle","respondToQuery","extendOracle","extendOracleTtl","getQuery","getQueryObject","respond","pollForResponse","pollForQueryResponse","emptyResponse","registerOracle","Aepp","PING_TIMEOUT_MS","PONG_TIMEOUT_MS","fsm","websockets","eventEmitters","messageQueue","messageQueueLocked","actionQueue","actionQueueLocked","rpcCallbacks","pingTimeoutId","pongTimeoutId","channelURL","paramString","encodeURIComponent","emit","enterState","nextState","enter","dequeueAction","changeStatus","newStatus","changeState","newState","JSONBig","enqueueAction","guard","action","locked","queue","handleMessage","dequeueMessage","remaining","ping","clearTimeout","disconnect","onMessage","callback","channel_id","details","wrapCallErrorMessage","close","WebSocket","fireOnce","original","ws","W3CWebSocket","initialize","channelOptions","optionsKeys","wsUrl","protocol","awaitingConnection","EventEmitter","onopen","onclose","onmessage","encodeRlpTx","appendSignature","signFn","signedTx","handleUnexpectedMessage","wsMessage","channelOpen","event","channel_accept","funding_created","awaitingChannelCreateTx","awaitingOpenConfirmation","channelClosed","role","awaitingOnChainTx","signed_tx","awaitingBlockInclusion","own_funding_locked","funding_locked","awaitingInitialState","awaitingTxSignRequest","awaitingOffChainTx","awaitingOffChainUpdate","accepted","awaitingUpdateConflict","awaitingShutdownTx","awaitingShutdownOnChainTx","awaitingLeave","awaitingWithdrawTx","awaitingWithdrawCompletion","onOnChainTx","own_withdraw_locked","onOwnWithdrawLocked","withdraw_locked","onWithdrawLocked","awaitingDepositTx","awaitingDepositCompletion","own_deposit_locked","onOwnDepositLocked","deposit_locked","onDepositLocked","awaitingNewContractTx","awaitingNewContractCompletion","awaitingCallContractUpdateTx","awaitingCallContractCompletion","awaitingCallsPruned","channels","snakeToPascalObjKeys","contracts","call_data","contract_id","abi_version","caller","caller_id","pubkey","Channel","on","channelStatus","balances","leave","shutdown","sendMessage","recipient","withdraw","createContract","vm_version","callContract","callContractStatic","getContractCall","getContractState","channelDisconnect","cleanContractCalls","Universal"],"mappings":"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","file":"aepp-sdk.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@stamp/required\"), require(\"bignumber.js\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([, , , , , , , , , , , , , , ], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Ae\"] = factory(require(\"@stamp/required\"), require(\"bignumber.js\"), require(\"@stamp/it\"), require(\"joi-browser\"), require(\"axios\"), require(\"tweetnacl\"), require(\"rlp\"), require(\"@aeternity/bip39\"), require(\"bs58check\"), require(\"tweetnacl-auth\"), require(\"blakejs\"), require(\"aes-js\"), require(\"sha.js\"), require(\"websocket\"), require(\"bip32-path\"));\n\telse\n\t\troot[\"Ae\"] = factory(root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined], root[undefined]);\n})(global, function(__WEBPACK_EXTERNAL_MODULE__5__, __WEBPACK_EXTERNAL_MODULE__6__, __WEBPACK_EXTERNAL_MODULE__11__, __WEBPACK_EXTERNAL_MODULE__13__, __WEBPACK_EXTERNAL_MODULE__18__, __WEBPACK_EXTERNAL_MODULE__26__, __WEBPACK_EXTERNAL_MODULE__30__, __WEBPACK_EXTERNAL_MODULE__42__, __WEBPACK_EXTERNAL_MODULE__48__, __WEBPACK_EXTERNAL_MODULE__56__, __WEBPACK_EXTERNAL_MODULE__72__, __WEBPACK_EXTERNAL_MODULE__73__, __WEBPACK_EXTERNAL_MODULE__74__, __WEBPACK_EXTERNAL_MODULE__87__, __WEBPACK_EXTERNAL_MODULE__92__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 135);\n","module.exports = require(\"regenerator-runtime\");\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Create a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects,\n * the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> {k: v} -> {k: v}\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeRight, R.mergeDeepRight, R.mergeWith, R.mergeWithKey\n * @deprecated\n * @example\n *\n *      R.merge({ 'name': 'fred', 'age': 10 }, { 'age': 40 });\n *      //=> { 'name': 'fred', 'age': 40 }\n *\n *      const withDefaults = R.merge({x: 0, y: 0});\n *      withDefaults({y: 2}); //=> {x: 0, y: 2}\n * @symb R.merge(a, b) = {...a, ...b}\n */\n\n\nvar merge = /*#__PURE__*/_curry2(function merge(l, r) {\n  return _objectAssign({}, l, r);\n});\nmodule.exports = merge;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__5__;","module.exports = __WEBPACK_EXTERNAL_MODULE__6__;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the first element of the given list or string. In some libraries\n * this function is named `first`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {Array|String} list\n * @return {*}\n * @see R.tail, R.init, R.last\n * @example\n *\n *      R.head(['fi', 'fo', 'fum']); //=> 'fi'\n *      R.head([]); //=> undefined\n *\n *      R.head('abc'); //=> 'a'\n *      R.head(''); //=> ''\n */\n\n\nvar head = /*#__PURE__*/nth(0);\nmodule.exports = head;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal two-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry2(fn) {\n  return function f2(a, b) {\n    switch (arguments.length) {\n      case 0:\n        return f2;\n      case 1:\n        return _isPlaceholder(a) ? f2 : _curry1(function (_b) {\n          return fn(a, _b);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f2 : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b);\n        }) : fn(a, b);\n    }\n  };\n}\nmodule.exports = _curry2;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","module.exports = __WEBPACK_EXTERNAL_MODULE__11__;","var _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal one-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry1(fn) {\n  return function f1(a) {\n    if (arguments.length === 0 || _isPlaceholder(a)) {\n      return f1;\n    } else {\n      return fn.apply(this, arguments);\n    }\n  };\n}\nmodule.exports = _curry1;","module.exports = __WEBPACK_EXTERNAL_MODULE__13__;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _isArguments = /*#__PURE__*/require('./internal/_isArguments');\n\n// cover IE < 9 keys issues\n\n\nvar hasEnumBug = ! /*#__PURE__*/{ toString: null }.propertyIsEnumerable('toString');\nvar nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString', 'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];\n// Safari bug\nvar hasArgsEnumBug = /*#__PURE__*/function () {\n  'use strict';\n\n  return arguments.propertyIsEnumerable('length');\n}();\n\nvar contains = function contains(list, item) {\n  var idx = 0;\n  while (idx < list.length) {\n    if (list[idx] === item) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n};\n\n/**\n * Returns a list containing the names of all the enumerable own properties of\n * the supplied object.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [k]\n * @param {Object} obj The object to extract properties from\n * @return {Array} An array of the object's own properties.\n * @see R.keysIn, R.values\n * @example\n *\n *      R.keys({a: 1, b: 2, c: 3}); //=> ['a', 'b', 'c']\n */\nvar keys = typeof Object.keys === 'function' && !hasArgsEnumBug ? /*#__PURE__*/_curry1(function keys(obj) {\n  return Object(obj) !== obj ? [] : Object.keys(obj);\n}) : /*#__PURE__*/_curry1(function keys(obj) {\n  if (Object(obj) !== obj) {\n    return [];\n  }\n  var prop, nIdx;\n  var ks = [];\n  var checkArgsLength = hasArgsEnumBug && _isArguments(obj);\n  for (prop in obj) {\n    if (_has(prop, obj) && (!checkArgsLength || prop !== 'length')) {\n      ks[ks.length] = prop;\n    }\n  }\n  if (hasEnumBug) {\n    nIdx = nonEnumerableProps.length - 1;\n    while (nIdx >= 0) {\n      prop = nonEnumerableProps[nIdx];\n      if (_has(prop, obj) && !contains(ks, prop)) {\n        ks[ks.length] = prop;\n      }\n      nIdx -= 1;\n    }\n  }\n  return ks;\n});\nmodule.exports = keys;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Retrieve the value at a given path.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> a | Undefined\n * @param {Array} path The path to use.\n * @param {Object} obj The object to retrieve the nested property from.\n * @return {*} The data at `path`.\n * @see R.prop\n * @example\n *\n *      R.path(['a', 'b'], {a: {b: 2}}); //=> 2\n *      R.path(['a', 'b'], {c: {b: 2}}); //=> undefined\n */\n\n\nvar path = /*#__PURE__*/_curry2(function path(paths, obj) {\n  var val = obj;\n  var idx = 0;\n  while (idx < paths.length) {\n    if (val == null) {\n      return;\n    }\n    val = val[paths[idx]];\n    idx += 1;\n  }\n  return val;\n});\nmodule.exports = path;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Creates a new object from a list key-value pairs. If a key appears in\n * multiple pairs, the rightmost pair is included in the object.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [[k,v]] -> {k: v}\n * @param {Array} pairs An array of two-element arrays that will be the keys and values of the output object.\n * @return {Object} The object made by pairing up `keys` and `values`.\n * @see R.toPairs, R.pair\n * @example\n *\n *      R.fromPairs([['a', 1], ['b', 2], ['c', 3]]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar fromPairs = /*#__PURE__*/_curry1(function fromPairs(pairs) {\n  var result = {};\n  var idx = 0;\n  while (idx < pairs.length) {\n    result[pairs[idx][0]] = pairs[idx][1];\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = fromPairs;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns `true` if the specified value is equal, in [`R.equals`](#equals)\n * terms, to at least one element of the given list; `false` otherwise.\n * Works also with strings.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig a -> [a] -> Boolean\n * @param {Object} a The item to compare against.\n * @param {Array} list The array to consider.\n * @return {Boolean} `true` if an equivalent item is in the list, `false` otherwise.\n * @see R.includes\n * @deprecated since v0.26.0\n * @example\n *\n *      R.contains(3, [1, 2, 3]); //=> true\n *      R.contains(4, [1, 2, 3]); //=> false\n *      R.contains({ name: 'Fred' }, [{ name: 'Fred' }]); //=> true\n *      R.contains([42], [[42]]); //=> true\n *      R.contains('ba', 'banana'); //=>true\n */\n\n\nvar contains = /*#__PURE__*/_curry2(_includes);\nmodule.exports = contains;","module.exports = __WEBPACK_EXTERNAL_MODULE__18__;","function _has(prop, obj) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\nmodule.exports = _has;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * Returns a string made by inserting the `separator` between each element and\n * concatenating all the elements into a single string.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig String -> [a] -> String\n * @param {Number|String} separator The string used to separate the elements.\n * @param {Array} xs The elements to join into a string.\n * @return {String} str The string made by concatenating `xs` with `separator`.\n * @see R.split\n * @example\n *\n *      const spacer = R.join(' ');\n *      spacer(['a', 2, 3.4]);   //=> 'a 2 3.4'\n *      R.join('|', [1, 2, 3]);    //=> '1|2|3'\n */\n\n\nvar join = /*#__PURE__*/invoker(1, 'join');\nmodule.exports = join;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _toString = /*#__PURE__*/require('./internal/_toString');\n\n/**\n * Returns the string representation of the given value. `eval`'ing the output\n * should result in a value equivalent to the input value. Many of the built-in\n * `toString` methods do not satisfy this requirement.\n *\n * If the given value is an `[object Object]` with a `toString` method other\n * than `Object.prototype.toString`, this method is invoked with no arguments\n * to produce the return value. This means user-defined constructor functions\n * can provide a suitable `toString` method. For example:\n *\n *     function Point(x, y) {\n *       this.x = x;\n *       this.y = y;\n *     }\n *\n *     Point.prototype.toString = function() {\n *       return 'new Point(' + this.x + ', ' + this.y + ')';\n *     };\n *\n *     R.toString(new Point(1, 2)); //=> 'new Point(1, 2)'\n *\n * @func\n * @memberOf R\n * @since v0.14.0\n * @category String\n * @sig * -> String\n * @param {*} val\n * @return {String}\n * @example\n *\n *      R.toString(42); //=> '42'\n *      R.toString('abc'); //=> '\"abc\"'\n *      R.toString([1, 2, 3]); //=> '[1, 2, 3]'\n *      R.toString({foo: 1, bar: 2, baz: 3}); //=> '{\"bar\": 2, \"baz\": 3, \"foo\": 1}'\n *      R.toString(new Date('2001-02-03T04:05:06Z')); //=> 'new Date(\"2001-02-03T04:05:06.000Z\")'\n */\n\n\nvar toString = /*#__PURE__*/_curry1(function toString(val) {\n  return _toString(val, []);\n});\nmodule.exports = toString;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Gives a single-word string description of the (native) type of a value,\n * returning such answers as 'Object', 'Number', 'Array', or 'Null'. Does not\n * attempt to distinguish user Object types any further, reporting them all as\n * 'Object'.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Type\n * @sig (* -> {*}) -> String\n * @param {*} val The value to test\n * @return {String}\n * @example\n *\n *      R.type({}); //=> \"Object\"\n *      R.type(1); //=> \"Number\"\n *      R.type(false); //=> \"Boolean\"\n *      R.type('s'); //=> \"String\"\n *      R.type(null); //=> \"Null\"\n *      R.type([]); //=> \"Array\"\n *      R.type(/[A-z]/); //=> \"RegExp\"\n *      R.type(() => {}); //=> \"Function\"\n *      R.type(undefined); //=> \"Undefined\"\n */\n\n\nvar type = /*#__PURE__*/_curry1(function type(val) {\n  return val === null ? 'Null' : val === undefined ? 'Undefined' : Object.prototype.toString.call(val).slice(8, -1);\n});\nmodule.exports = type;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar map = /*#__PURE__*/require('./map');\n\nvar prop = /*#__PURE__*/require('./prop');\n\n/**\n * Returns a new list by plucking the same named property off all objects in\n * the list supplied.\n *\n * `pluck` will work on\n * any [functor](https://github.com/fantasyland/fantasy-land#functor) in\n * addition to arrays, as it is equivalent to `R.map(R.prop(k), f)`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => k -> f {k: v} -> f v\n * @param {Number|String} key The key name to pluck off of each object.\n * @param {Array} f The array or functor to consider.\n * @return {Array} The list of values for the given key.\n * @see R.props\n * @example\n *\n *      var getAges = R.pluck('age');\n *      getAges([{name: 'fred', age: 29}, {name: 'wilma', age: 27}]); //=> [29, 27]\n *\n *      R.pluck(0, [[1, 2], [3, 4]]);               //=> [1, 3]\n *      R.pluck('val', {a: {val: 3}, b: {val: 5}}); //=> {a: 3, b: 5}\n * @symb R.pluck('x', [{x: 1, y: 2}, {x: 3, y: 4}, {x: 5, y: 6}]) = [1, 3, 5]\n * @symb R.pluck(0, [[1, 2], [3, 4], [5, 6]]) = [1, 3, 5]\n */\n\n\nvar pluck = /*#__PURE__*/_curry2(function pluck(p, list) {\n  return map(prop(p), list);\n});\nmodule.exports = pluck;","var _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isTransformer = /*#__PURE__*/require('./_isTransformer');\n\n/**\n * Returns a function that dispatches with different strategies based on the\n * object in list position (last argument). If it is an array, executes [fn].\n * Otherwise, if it has a function with one of the given method names, it will\n * execute that function (functor case). Otherwise, if it is a transformer,\n * uses transducer [xf] to return a new transformer (transducer case).\n * Otherwise, it will default to executing [fn].\n *\n * @private\n * @param {Array} methodNames properties to check for a custom implementation\n * @param {Function} xf transducer to initialize if object is transformer\n * @param {Function} fn default ramda implementation\n * @return {Function} A function that dispatches on object in list position\n */\n\n\nfunction _dispatchable(methodNames, xf, fn) {\n  return function () {\n    if (arguments.length === 0) {\n      return fn();\n    }\n    var args = Array.prototype.slice.call(arguments, 0);\n    var obj = args.pop();\n    if (!_isArray(obj)) {\n      var idx = 0;\n      while (idx < methodNames.length) {\n        if (typeof obj[methodNames[idx]] === 'function') {\n          return obj[methodNames[idx]].apply(obj, args);\n        }\n        idx += 1;\n      }\n      if (_isTransformer(obj)) {\n        var transducer = xf.apply(null, args);\n        return transducer(obj);\n      }\n    }\n    return fn.apply(this, arguments);\n  };\n}\nmodule.exports = _dispatchable;","module.exports = {\n  init: function () {\n    return this.xf['@@transducer/init']();\n  },\n  result: function (result) {\n    return this.xf['@@transducer/result'](result);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__26__;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * An Object-specific version of [`map`](#map). The function is applied to three\n * arguments: *(value, key, obj)*. If only the value is significant, use\n * [`map`](#map) instead.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Object\n * @sig ((*, String, Object) -> *) -> Object -> Object\n * @param {Function} fn\n * @param {Object} obj\n * @return {Object}\n * @see R.map\n * @example\n *\n *      const xyz = { x: 1, y: 2, z: 3 };\n *      const prependKeyAndDouble = (num, key, obj) => key + (num * 2);\n *\n *      R.mapObjIndexed(prependKeyAndDouble, xyz); //=> { x: 'x2', y: 'y4', z: 'z6' }\n */\n\n\nvar mapObjIndexed = /*#__PURE__*/_curry2(function mapObjIndexed(fn, obj) {\n  return _reduce(function (acc, key) {\n    acc[key] = fn(obj[key], key, obj);\n    return acc;\n  }, {}, keys(obj));\n});\nmodule.exports = mapObjIndexed;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar path = /*#__PURE__*/require('./path');\n\n/**\n * Returns a function that when supplied an object returns the indicated\n * property of that object, if it exists.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig s -> {s: a} -> a | Undefined\n * @param {String} p The property name\n * @param {Object} obj The object to query\n * @return {*} The value at `obj.p`.\n * @see R.path\n * @example\n *\n *      R.prop('x', {x: 100}); //=> 100\n *      R.prop('x', {}); //=> undefined\n *      R.compose(R.inc, R.prop('x'))({ x: 3 }) //=> 4\n */\n\nvar prop = /*#__PURE__*/_curry2(function prop(p, obj) {\n  return path([p], obj);\n});\nmodule.exports = prop;","var nth = /*#__PURE__*/require('./nth');\n\n/**\n * Returns the last element of the given list or string.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig [a] -> a | Undefined\n * @sig String -> String\n * @param {*} list\n * @return {*}\n * @see R.init, R.head, R.tail\n * @example\n *\n *      R.last(['fi', 'fo', 'fum']); //=> 'fum'\n *      R.last([]); //=> undefined\n *\n *      R.last('abc'); //=> 'c'\n *      R.last(''); //=> ''\n */\n\n\nvar last = /*#__PURE__*/nth(-1);\nmodule.exports = last;","module.exports = __WEBPACK_EXTERNAL_MODULE__30__;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\nvar _xwrap = /*#__PURE__*/require('./_xwrap');\n\nvar bind = /*#__PURE__*/require('../bind');\n\nfunction _arrayReduce(xf, acc, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    acc = xf['@@transducer/step'](acc, list[idx]);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    idx += 1;\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _iterableReduce(xf, acc, iter) {\n  var step = iter.next();\n  while (!step.done) {\n    acc = xf['@@transducer/step'](acc, step.value);\n    if (acc && acc['@@transducer/reduced']) {\n      acc = acc['@@transducer/value'];\n      break;\n    }\n    step = iter.next();\n  }\n  return xf['@@transducer/result'](acc);\n}\n\nfunction _methodReduce(xf, acc, obj, methodName) {\n  return xf['@@transducer/result'](obj[methodName](bind(xf['@@transducer/step'], xf), acc));\n}\n\nvar symIterator = typeof Symbol !== 'undefined' ? Symbol.iterator : '@@iterator';\n\nfunction _reduce(fn, acc, list) {\n  if (typeof fn === 'function') {\n    fn = _xwrap(fn);\n  }\n  if (_isArrayLike(list)) {\n    return _arrayReduce(fn, acc, list);\n  }\n  if (typeof list['fantasy-land/reduce'] === 'function') {\n    return _methodReduce(fn, acc, list, 'fantasy-land/reduce');\n  }\n  if (list[symIterator] != null) {\n    return _iterableReduce(fn, acc, list[symIterator]());\n  }\n  if (typeof list.next === 'function') {\n    return _iterableReduce(fn, acc, list);\n  }\n  if (typeof list.reduce === 'function') {\n    return _methodReduce(fn, acc, list, 'reduce');\n  }\n\n  throw new TypeError('reduce: list must be array or iterable');\n}\nmodule.exports = _reduce;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Optimized internal three-arity curry function.\n *\n * @private\n * @category Function\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curry3(fn) {\n  return function f3(a, b, c) {\n    switch (arguments.length) {\n      case 0:\n        return f3;\n      case 1:\n        return _isPlaceholder(a) ? f3 : _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        });\n      case 2:\n        return _isPlaceholder(a) && _isPlaceholder(b) ? f3 : _isPlaceholder(a) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _curry1(function (_c) {\n          return fn(a, b, _c);\n        });\n      default:\n        return _isPlaceholder(a) && _isPlaceholder(b) && _isPlaceholder(c) ? f3 : _isPlaceholder(a) && _isPlaceholder(b) ? _curry2(function (_a, _b) {\n          return fn(_a, _b, c);\n        }) : _isPlaceholder(a) && _isPlaceholder(c) ? _curry2(function (_a, _c) {\n          return fn(_a, b, _c);\n        }) : _isPlaceholder(b) && _isPlaceholder(c) ? _curry2(function (_b, _c) {\n          return fn(a, _b, _c);\n        }) : _isPlaceholder(a) ? _curry1(function (_a) {\n          return fn(_a, b, c);\n        }) : _isPlaceholder(b) ? _curry1(function (_b) {\n          return fn(a, _b, c);\n        }) : _isPlaceholder(c) ? _curry1(function (_c) {\n          return fn(a, b, _c);\n        }) : fn(a, b, c);\n    }\n  };\n}\nmodule.exports = _curry3;","var _complement = /*#__PURE__*/require('./internal/_complement');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar filter = /*#__PURE__*/require('./filter');\n\n/**\n * The complement of [`filter`](#filter).\n *\n * Acts as a transducer if a transformer is given in list position. Filterable\n * objects include plain objects or any object that has a filter method such\n * as `Array`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array}\n * @see R.filter, R.transduce, R.addIndex\n * @example\n *\n *      const isOdd = (n) => n % 2 === 1;\n *\n *      R.reject(isOdd, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.reject(isOdd, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar reject = /*#__PURE__*/_curry2(function reject(pred, filterable) {\n  return filter(_complement(pred), filterable);\n});\nmodule.exports = reject;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Checks if the input value is `null` or `undefined`.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Type\n * @sig * -> Boolean\n * @param {*} x The value to test.\n * @return {Boolean} `true` if `x` is `undefined` or `null`, otherwise `false`.\n * @example\n *\n *      R.isNil(null); //=> true\n *      R.isNil(undefined); //=> true\n *      R.isNil(0); //=> false\n *      R.isNil([]); //=> false\n */\n\n\nvar isNil = /*#__PURE__*/_curry1(function isNil(x) {\n  return x == null;\n});\nmodule.exports = isNil;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Returns a list of all the enumerable own properties of the supplied object.\n * Note that the order of the output array is not guaranteed across different\n * JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig {k: v} -> [v]\n * @param {Object} obj The object to extract values from\n * @return {Array} An array of the values of the object's own properties.\n * @see R.valuesIn, R.keys\n * @example\n *\n *      R.values({a: 1, b: 2, c: 3}); //=> [1, 2, 3]\n */\n\n\nvar values = /*#__PURE__*/_curry1(function values(obj) {\n  var props = keys(obj);\n  var len = props.length;\n  var vals = [];\n  var idx = 0;\n  while (idx < len) {\n    vals[idx] = obj[props[idx]];\n    idx += 1;\n  }\n  return vals;\n});\nmodule.exports = values;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys specified. If\n * the key does not exist, the property is ignored.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Object\n * @sig [k] -> {k: v} -> {k: v}\n * @param {Array} names an array of String property names to copy onto a new object\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties from `names` on it.\n * @see R.omit, R.props\n * @example\n *\n *      R.pick(['a', 'd'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1, d: 4}\n *      R.pick(['a', 'e', 'f'], {a: 1, b: 2, c: 3, d: 4}); //=> {a: 1}\n */\n\n\nvar pick = /*#__PURE__*/_curry2(function pick(names, obj) {\n  var result = {};\n  var idx = 0;\n  while (idx < names.length) {\n    if (names[idx] in obj) {\n      result[names[idx]] = obj[names[idx]];\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = pick;","var _indexOf = /*#__PURE__*/require('./_indexOf');\n\nfunction _includes(a, list) {\n  return _indexOf(list, a, 0) >= 0;\n}\nmodule.exports = _includes;","function _isPlaceholder(a) {\n       return a != null && typeof a === 'object' && a['@@functional/placeholder'] === true;\n}\nmodule.exports = _isPlaceholder;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _curryN = /*#__PURE__*/require('./internal/_curryN');\n\n/**\n * Returns a curried equivalent of the provided function, with the specified\n * arity. The curried function has two unusual capabilities. First, its\n * arguments needn't be provided one at a time. If `g` is `R.curryN(3, f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.5.0\n * @category Function\n * @sig Number -> (* -> a) -> (* -> a)\n * @param {Number} length The arity for the returned function.\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curry\n * @example\n *\n *      const sumArgs = (...args) => R.sum(args);\n *\n *      const curriedAddFourNumbers = R.curryN(4, sumArgs);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curryN = /*#__PURE__*/_curry2(function curryN(length, fn) {\n  if (length === 1) {\n    return _curry1(fn);\n  }\n  return _arity(length, _curryN(length, [], fn));\n});\nmodule.exports = curryN;","function _arity(n, fn) {\n  /* eslint-disable no-unused-vars */\n  switch (n) {\n    case 0:\n      return function () {\n        return fn.apply(this, arguments);\n      };\n    case 1:\n      return function (a0) {\n        return fn.apply(this, arguments);\n      };\n    case 2:\n      return function (a0, a1) {\n        return fn.apply(this, arguments);\n      };\n    case 3:\n      return function (a0, a1, a2) {\n        return fn.apply(this, arguments);\n      };\n    case 4:\n      return function (a0, a1, a2, a3) {\n        return fn.apply(this, arguments);\n      };\n    case 5:\n      return function (a0, a1, a2, a3, a4) {\n        return fn.apply(this, arguments);\n      };\n    case 6:\n      return function (a0, a1, a2, a3, a4, a5) {\n        return fn.apply(this, arguments);\n      };\n    case 7:\n      return function (a0, a1, a2, a3, a4, a5, a6) {\n        return fn.apply(this, arguments);\n      };\n    case 8:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7) {\n        return fn.apply(this, arguments);\n      };\n    case 9:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n        return fn.apply(this, arguments);\n      };\n    case 10:\n      return function (a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {\n        return fn.apply(this, arguments);\n      };\n    default:\n      throw new Error('First argument to _arity must be a non-negative integer no greater than ten');\n  }\n}\nmodule.exports = _arity;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _makeFlat = /*#__PURE__*/require('./internal/_makeFlat');\n\n/**\n * Returns a new list by pulling every item out of it (and all its sub-arrays)\n * and putting them in a new array, depth-first.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig [a] -> [b]\n * @param {Array} list The array to consider.\n * @return {Array} The flattened list.\n * @see R.unnest\n * @example\n *\n *      R.flatten([1, 2, [3, 4], 5, [6, [7, 8, [9, [10, 11], 12]]]]);\n *      //=> [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n */\n\n\nvar flatten = /*#__PURE__*/_curry1( /*#__PURE__*/_makeFlat(true));\nmodule.exports = flatten;","module.exports = __WEBPACK_EXTERNAL_MODULE__42__;","var _arity = /*#__PURE__*/require('./_arity');\n\nvar _isPlaceholder = /*#__PURE__*/require('./_isPlaceholder');\n\n/**\n * Internal curryN function.\n *\n * @private\n * @category Function\n * @param {Number} length The arity of the curried function.\n * @param {Array} received An array of arguments received thus far.\n * @param {Function} fn The function to curry.\n * @return {Function} The curried function.\n */\n\n\nfunction _curryN(length, received, fn) {\n  return function () {\n    var combined = [];\n    var argsIdx = 0;\n    var left = length;\n    var combinedIdx = 0;\n    while (combinedIdx < received.length || argsIdx < arguments.length) {\n      var result;\n      if (combinedIdx < received.length && (!_isPlaceholder(received[combinedIdx]) || argsIdx >= arguments.length)) {\n        result = received[combinedIdx];\n      } else {\n        result = arguments[argsIdx];\n        argsIdx += 1;\n      }\n      combined[combinedIdx] = result;\n      if (!_isPlaceholder(result)) {\n        left -= 1;\n      }\n      combinedIdx += 1;\n    }\n    return left <= 0 ? fn.apply(this, combined) : _arity(left, _curryN(length, combined, fn));\n  };\n}\nmodule.exports = _curryN;","/**\n * Tests whether or not an object is an array.\n *\n * @private\n * @param {*} val The object to test.\n * @return {Boolean} `true` if `val` is an array, `false` otherwise.\n * @example\n *\n *      _isArray([]); //=> true\n *      _isArray(null); //=> false\n *      _isArray({}); //=> false\n */\nmodule.exports = Array.isArray || function _isArray(val) {\n  return val != null && val.length >= 0 && Object.prototype.toString.call(val) === '[object Array]';\n};","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isFunction = /*#__PURE__*/require('./internal/_isFunction');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar toString = /*#__PURE__*/require('./toString');\n\n/**\n * Turns a named method with a specified arity into a function that can be\n * called directly supplied with arguments and a target object.\n *\n * The returned function is curried and accepts `arity + 1` parameters where\n * the final parameter is the target object.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig Number -> String -> (a -> b -> ... -> n -> Object -> *)\n * @param {Number} arity Number of arguments the returned function should take\n *        before the target object.\n * @param {String} method Name of the method to call.\n * @return {Function} A new curried function.\n * @see R.construct\n * @example\n *\n *      const sliceFrom = R.invoker(1, 'slice');\n *      sliceFrom(6, 'abcdefghijklm'); //=> 'ghijklm'\n *      const sliceFrom6 = R.invoker(2, 'slice')(6);\n *      sliceFrom6(8, 'abcdefghijklm'); //=> 'gh'\n * @symb R.invoker(0, 'method')(o) = o['method']()\n * @symb R.invoker(1, 'method')(a, o) = o['method'](a)\n * @symb R.invoker(2, 'method')(a, b, o) = o['method'](a, b)\n */\n\n\nvar invoker = /*#__PURE__*/_curry2(function invoker(arity, method) {\n  return curryN(arity + 1, function () {\n    var target = arguments[arity];\n    if (target != null && _isFunction(target[method])) {\n      return target[method].apply(target, Array.prototype.slice.call(arguments, 0, arity));\n    }\n    throw new TypeError(toString(target) + ' does not have a method named \"' + method + '\"');\n  });\n});\nmodule.exports = invoker;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a new function much like the supplied one, except that the first two\n * arguments' order is reversed.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig ((a, b, c, ...) -> z) -> (b -> a -> c -> ... -> z)\n * @param {Function} fn The function to invoke with its first two parameters reversed.\n * @return {*} The result of invoking `fn` with its first two parameters' order reversed.\n * @example\n *\n *      const mergeThree = (a, b, c) => [].concat(a, b, c);\n *\n *      mergeThree(1, 2, 3); //=> [1, 2, 3]\n *\n *      R.flip(mergeThree)(1, 2, 3); //=> [2, 1, 3]\n * @symb R.flip(f)(a, b, c) = f(b, a, c)\n */\n\n\nvar flip = /*#__PURE__*/_curry1(function flip(fn) {\n  return curryN(fn.length, function (a, b) {\n    var args = Array.prototype.slice.call(arguments, 0);\n    args[0] = b;\n    args[1] = a;\n    return fn.apply(this, args);\n  });\n});\nmodule.exports = flip;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\n/**\n * Returns a curried equivalent of the provided function. The curried function\n * has two unusual capabilities. First, its arguments needn't be provided one\n * at a time. If `f` is a ternary function and `g` is `R.curry(f)`, the\n * following are equivalent:\n *\n *   - `g(1)(2)(3)`\n *   - `g(1)(2, 3)`\n *   - `g(1, 2)(3)`\n *   - `g(1, 2, 3)`\n *\n * Secondly, the special placeholder value [`R.__`](#__) may be used to specify\n * \"gaps\", allowing partial application of any combination of arguments,\n * regardless of their positions. If `g` is as above and `_` is [`R.__`](#__),\n * the following are equivalent:\n *\n *   - `g(1, 2, 3)`\n *   - `g(_, 2, 3)(1)`\n *   - `g(_, _, 3)(1)(2)`\n *   - `g(_, _, 3)(1, 2)`\n *   - `g(_, 2)(1)(3)`\n *   - `g(_, 2)(1, 3)`\n *   - `g(_, 2)(_, 3)(1)`\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (* -> a) -> (* -> a)\n * @param {Function} fn The function to curry.\n * @return {Function} A new, curried function.\n * @see R.curryN, R.partial\n * @example\n *\n *      const addFourNumbers = (a, b, c, d) => a + b + c + d;\n *\n *      const curriedAddFourNumbers = R.curry(addFourNumbers);\n *      const f = curriedAddFourNumbers(1, 2);\n *      const g = f(3);\n *      g(4); //=> 10\n */\n\n\nvar curry = /*#__PURE__*/_curry1(function curry(fn) {\n  return curryN(fn.length, fn);\n});\nmodule.exports = curry;","module.exports = __WEBPACK_EXTERNAL_MODULE__48__;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The upper case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to upper case.\n * @return {String} The upper case version of `str`.\n * @see R.toLower\n * @example\n *\n *      R.toUpper('abc'); //=> 'ABC'\n */\n\n\nvar toUpper = /*#__PURE__*/invoker(0, 'toUpperCase');\nmodule.exports = toUpper;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns the second argument if it is not `null`, `undefined` or `NaN`;\n * otherwise the first argument is returned.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category Logic\n * @sig a -> b -> a | b\n * @param {a} default The default value.\n * @param {b} val `val` will be returned instead of `default` unless `val` is `null`, `undefined` or `NaN`.\n * @return {*} The second value if it is not `null`, `undefined` or `NaN`, otherwise the default value\n * @example\n *\n *      const defaultTo42 = R.defaultTo(42);\n *\n *      defaultTo42(null);  //=> 42\n *      defaultTo42(undefined);  //=> 42\n *      defaultTo42(false);  //=> false\n *      defaultTo42('Ramda');  //=> 'Ramda'\n *      // parseInt('string') results in NaN\n *      defaultTo42(parseInt('string')); //=> 42\n */\n\n\nvar defaultTo = /*#__PURE__*/_curry2(function defaultTo(d, v) {\n  return v == null || v !== v ? d : v;\n});\nmodule.exports = defaultTo;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Converts an object into an array of key, value arrays. Only the object's\n * own properties are used.\n * Note that the order of the output array is not guaranteed to be consistent\n * across different JS platforms.\n *\n * @func\n * @memberOf R\n * @since v0.4.0\n * @category Object\n * @sig {String: *} -> [[String,*]]\n * @param {Object} obj The object to extract from\n * @return {Array} An array of key, value arrays from the object's own properties.\n * @see R.fromPairs\n * @example\n *\n *      R.toPairs({a: 1, b: 2, c: 3}); //=> [['a', 1], ['b', 2], ['c', 3]]\n */\n\n\nvar toPairs = /*#__PURE__*/_curry1(function toPairs(obj) {\n  var pairs = [];\n  for (var prop in obj) {\n    if (_has(prop, obj)) {\n      pairs[pairs.length] = [prop, obj[prop]];\n    }\n  }\n  return pairs;\n});\nmodule.exports = toPairs;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar mergeDeepWithKey = /*#__PURE__*/require('./mergeDeepWithKey');\n\n/**\n * Creates a new object with the own properties of the first object merged with\n * the own properties of the second object. If a key exists in both objects:\n * - and both values are objects, the two values will be recursively merged\n * - otherwise the value from the second object will be used.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig {a} -> {a} -> {a}\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.merge, R.mergeDeepLeft, R.mergeDeepWith, R.mergeDeepWithKey\n * @example\n *\n *      R.mergeDeepRight({ name: 'fred', age: 10, contact: { email: 'moo@example.com' }},\n *                       { age: 40, contact: { email: 'baa@example.com' }});\n *      //=> { name: 'fred', age: 40, contact: { email: 'baa@example.com' }}\n */\n\n\nvar mergeDeepRight = /*#__PURE__*/_curry2(function mergeDeepRight(lObj, rObj) {\n  return mergeDeepWithKey(function (k, lVal, rVal) {\n    return rVal;\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepRight;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Splits a list into sub-lists stored in an object, based on the result of\n * calling a String-returning function on each element, and grouping the\n * results according to values returned.\n *\n * Dispatches to the `groupBy` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> String) -> [a] -> {String: [a]}\n * @param {Function} fn Function :: a -> String\n * @param {Array} list The array to group\n * @return {Object} An object with the output of `fn` for keys, mapped to arrays of elements\n *         that produced that key when passed to `fn`.\n * @see R.reduceBy, R.transduce\n * @example\n *\n *      const byGrade = R.groupBy(function(student) {\n *        const score = student.score;\n *        return score < 65 ? 'F' :\n *               score < 70 ? 'D' :\n *               score < 80 ? 'C' :\n *               score < 90 ? 'B' : 'A';\n *      });\n *      const students = [{name: 'Abby', score: 84},\n *                      {name: 'Eddy', score: 58},\n *                      // ...\n *                      {name: 'Jack', score: 69}];\n *      byGrade(students);\n *      // {\n *      //   'A': [{name: 'Dianne', score: 99}],\n *      //   'B': [{name: 'Abby', score: 84}]\n *      //   // ...,\n *      //   'F': [{name: 'Eddy', score: 58}]\n *      // }\n */\n\n\nvar groupBy = /*#__PURE__*/_curry2( /*#__PURE__*/_checkForMethod('groupBy', /*#__PURE__*/reduceBy(function (acc, item) {\n  if (acc == null) {\n    acc = [];\n  }\n  acc.push(item);\n  return acc;\n}, null)));\nmodule.exports = groupBy;","var _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\nvar _identity = /*#__PURE__*/require('./internal/_identity');\n\n/**\n * A function that does nothing but return the parameter supplied to it. Good\n * as a default or placeholder function.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig a -> a\n * @param {*} x The value to return.\n * @return {*} The input value, `x`.\n * @example\n *\n *      R.identity(1); //=> 1\n *\n *      const obj = {};\n *      R.identity(obj) === obj; //=> true\n * @symb R.identity(a) = a\n */\n\n\nvar identity = /*#__PURE__*/_curry1(_identity);\nmodule.exports = identity;","var reduceBy = /*#__PURE__*/require('./reduceBy');\n\n/**\n * Given a function that generates a key, turns a list of objects into an\n * object indexing the objects by the given key. Note that if multiple\n * objects generate the same value for the indexing key only the last value\n * will be included in the generated object.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig (a -> String) -> [{k: v}] -> {k: {k: v}}\n * @param {Function} fn Function :: a -> String\n * @param {Array} array The array of objects to index\n * @return {Object} An object indexing each array element by the given property.\n * @example\n *\n *      const list = [{id: 'xyz', title: 'A'}, {id: 'abc', title: 'B'}];\n *      R.indexBy(R.prop('id'), list);\n *      //=> {abc: {id: 'abc', title: 'B'}, xyz: {id: 'xyz', title: 'A'}}\n */\n\n\nvar indexBy = /*#__PURE__*/reduceBy(function (acc, elem) {\n  return elem;\n}, null);\nmodule.exports = indexBy;","module.exports = __WEBPACK_EXTERNAL_MODULE__56__;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}\n\nmodule.exports = _nonIterableRest;","function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _includesWith(pred, x, list) {\n  var idx = 0;\n  var len = list.length;\n\n  while (idx < len) {\n    if (pred(x, list[idx])) {\n      return true;\n    }\n    idx += 1;\n  }\n  return false;\n}\nmodule.exports = _includesWith;","// Based on https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\nfunction _objectIs(a, b) {\n  // SameValue algorithm\n  if (a === b) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return a !== 0 || 1 / a === 1 / b;\n  } else {\n    // Step 6.a: NaN == NaN\n    return a !== a && b !== b;\n  }\n}\n\nmodule.exports = typeof Object.is === 'function' ? Object.is : _objectIs;","function _isObject(x) {\n  return Object.prototype.toString.call(x) === '[object Object]';\n}\nmodule.exports = _isObject;","var _curry1 = /*#__PURE__*/require('./_curry1');\n\nvar _isArray = /*#__PURE__*/require('./_isArray');\n\nvar _isString = /*#__PURE__*/require('./_isString');\n\n/**\n * Tests whether or not an object is similar to an array.\n *\n * @private\n * @category Type\n * @category List\n * @sig * -> Boolean\n * @param {*} x The object to test.\n * @return {Boolean} `true` if `x` has a numeric length property and extreme indices defined; `false` otherwise.\n * @example\n *\n *      _isArrayLike([]); //=> true\n *      _isArrayLike(true); //=> false\n *      _isArrayLike({}); //=> false\n *      _isArrayLike({length: 10}); //=> false\n *      _isArrayLike({0: 'zero', 9: 'nine', length: 10}); //=> true\n */\n\n\nvar _isArrayLike = /*#__PURE__*/_curry1(function isArrayLike(x) {\n  if (_isArray(x)) {\n    return true;\n  }\n  if (!x) {\n    return false;\n  }\n  if (typeof x !== 'object') {\n    return false;\n  }\n  if (_isString(x)) {\n    return false;\n  }\n  if (x.nodeType === 1) {\n    return !!x.length;\n  }\n  if (x.length === 0) {\n    return true;\n  }\n  if (x.length > 0) {\n    return x.hasOwnProperty(0) && x.hasOwnProperty(x.length - 1);\n  }\n  return false;\n});\nmodule.exports = _isArrayLike;","function _isString(x) {\n  return Object.prototype.toString.call(x) === '[object String]';\n}\nmodule.exports = _isString;","function _map(fn, functor) {\n  var idx = 0;\n  var len = functor.length;\n  var result = Array(len);\n  while (idx < len) {\n    result[idx] = fn(functor[idx]);\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _map;","var _has = /*#__PURE__*/require('./_has');\n\n// Based on https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\nfunction _objectAssign(target) {\n  if (target == null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  var idx = 1;\n  var length = arguments.length;\n  while (idx < length) {\n    var source = arguments[idx];\n    if (source != null) {\n      for (var nextKey in source) {\n        if (_has(nextKey, source)) {\n          output[nextKey] = source[nextKey];\n        }\n      }\n    }\n    idx += 1;\n  }\n  return output;\n}\n\nmodule.exports = typeof Object.assign === 'function' ? Object.assign : _objectAssign;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _isString = /*#__PURE__*/require('./internal/_isString');\n\n/**\n * Returns the nth element of the given list or string. If n is negative the\n * element at index length + n is returned.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> a | Undefined\n * @sig Number -> String -> String\n * @param {Number} offset\n * @param {*} list\n * @return {*}\n * @example\n *\n *      const list = ['foo', 'bar', 'baz', 'quux'];\n *      R.nth(1, list); //=> 'bar'\n *      R.nth(-1, list); //=> 'quux'\n *      R.nth(-99, list); //=> undefined\n *\n *      R.nth(2, 'abc'); //=> 'c'\n *      R.nth(3, 'abc'); //=> ''\n * @symb R.nth(-1, [a, b, c]) = c\n * @symb R.nth(0, [a, b, c]) = a\n * @symb R.nth(1, [a, b, c]) = b\n */\n\n\nvar nth = /*#__PURE__*/_curry2(function nth(offset, list) {\n  var idx = offset < 0 ? list.length + offset : offset;\n  return _isString(list) ? list.charAt(idx) : list[idx];\n});\nmodule.exports = nth;","var _isArray = /*#__PURE__*/require('./_isArray');\n\n/**\n * This checks whether a function has a [methodname] function. If it isn't an\n * array it will execute that function otherwise it will default to the ramda\n * implementation.\n *\n * @private\n * @param {Function} fn ramda implemtation\n * @param {String} methodname property to check for a custom implementation\n * @return {Object} Whatever the return value of the method is.\n */\n\n\nfunction _checkForMethod(methodname, fn) {\n  return function () {\n    var length = arguments.length;\n    if (length === 0) {\n      return fn();\n    }\n    var obj = arguments[length - 1];\n    return _isArray(obj) || typeof obj[methodname] !== 'function' ? fn.apply(this, arguments) : obj[methodname].apply(obj, Array.prototype.slice.call(arguments, 0, length - 1));\n  };\n}\nmodule.exports = _checkForMethod;","var _curryN = /*#__PURE__*/require('./internal/_curryN');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xreduceBy = /*#__PURE__*/require('./internal/_xreduceBy');\n\n/**\n * Groups the elements of the list according to the result of calling\n * the String-returning function `keyFn` on each element and reduces the elements\n * of each group to a single value via the reducer function `valueFn`.\n *\n * This function is basically a more general [`groupBy`](#groupBy) function.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.20.0\n * @category List\n * @sig ((a, b) -> a) -> a -> (b -> String) -> [b] -> {String: a}\n * @param {Function} valueFn The function that reduces the elements of each group to a single\n *        value. Receives two values, accumulator for a particular group and the current element.\n * @param {*} acc The (initial) accumulator value for each group.\n * @param {Function} keyFn The function that maps the list's element into a key.\n * @param {Array} list The array to group.\n * @return {Object} An object with the output of `keyFn` for keys, mapped to the output of\n *         `valueFn` for elements which produced that key when passed to `keyFn`.\n * @see R.groupBy, R.reduce\n * @example\n *\n *      const groupNames = (acc, {name}) => acc.concat(name)\n *      const toGrade = ({score}) =>\n *        score < 65 ? 'F' :\n *        score < 70 ? 'D' :\n *        score < 80 ? 'C' :\n *        score < 90 ? 'B' : 'A'\n *\n *      var students = [\n *        {name: 'Abby', score: 83},\n *        {name: 'Bart', score: 62},\n *        {name: 'Curt', score: 88},\n *        {name: 'Dora', score: 92},\n *      ]\n *\n *      reduceBy(groupNames, [], toGrade, students)\n *      //=> {\"A\": [\"Dora\"], \"B\": [\"Abby\", \"Curt\"], \"F\": [\"Bart\"]}\n */\n\n\nvar reduceBy = /*#__PURE__*/_curryN(4, [], /*#__PURE__*/_dispatchable([], _xreduceBy, function reduceBy(valueFn, valueAcc, keyFn, list) {\n  return _reduce(function (acc, elt) {\n    var key = keyFn(elt);\n    acc[key] = valueFn(_has(key, acc) ? acc[key] : valueAcc, elt);\n    return acc;\n  }, {}, list);\n}));\nmodule.exports = reduceBy;","var _checkForMethod = /*#__PURE__*/require('./internal/_checkForMethod');\n\nvar _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Returns the elements of the given list or string (or object with a `slice`\n * method) from `fromIndex` (inclusive) to `toIndex` (exclusive).\n *\n * Dispatches to the `slice` method of the third argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.4\n * @category List\n * @sig Number -> Number -> [a] -> [a]\n * @sig Number -> Number -> String -> String\n * @param {Number} fromIndex The start index (inclusive).\n * @param {Number} toIndex The end index (exclusive).\n * @param {*} list\n * @return {*}\n * @example\n *\n *      R.slice(1, 3, ['a', 'b', 'c', 'd']);        //=> ['b', 'c']\n *      R.slice(1, Infinity, ['a', 'b', 'c', 'd']); //=> ['b', 'c', 'd']\n *      R.slice(0, -1, ['a', 'b', 'c', 'd']);       //=> ['a', 'b', 'c']\n *      R.slice(-3, -1, ['a', 'b', 'c', 'd']);      //=> ['b', 'c']\n *      R.slice(0, 3, 'ramda');                     //=> 'ram'\n */\n\n\nvar slice = /*#__PURE__*/_curry3( /*#__PURE__*/_checkForMethod('slice', function slice(fromIndex, toIndex, list) {\n  return Array.prototype.slice.call(list, fromIndex, toIndex);\n}));\nmodule.exports = slice;","function _reduced(x) {\n  return x && x['@@transducer/reduced'] ? x : {\n    '@@transducer/value': x,\n    '@@transducer/reduced': true\n  };\n}\nmodule.exports = _reduced;","module.exports = __WEBPACK_EXTERNAL_MODULE__72__;","module.exports = __WEBPACK_EXTERNAL_MODULE__73__;","module.exports = __WEBPACK_EXTERNAL_MODULE__74__;","var _includes = /*#__PURE__*/require('./internal/_includes');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar flip = /*#__PURE__*/require('./flip');\n\nvar reject = /*#__PURE__*/require('./reject');\n\n/**\n * Returns a new list without values in the first argument.\n * [`R.equals`](#equals) is used to determine equality.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category List\n * @sig [a] -> [a] -> [a]\n * @param {Array} list1 The values to be removed from `list2`.\n * @param {Array} list2 The array to remove values from.\n * @return {Array} The new array without values in `list1`.\n * @see R.transduce, R.difference, R.remove\n * @example\n *\n *      R.without([1, 2], [1, 2, 1, 3, 4]); //=> [3, 4]\n */\n\n\nvar without = /*#__PURE__*/_curry2(function (xs, list) {\n  return reject(flip(_includes)(xs), list);\n});\nmodule.exports = without;","var _includesWith = /*#__PURE__*/require('./internal/_includesWith');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a new list containing only one copy of each element in the original\n * list, based upon the value returned by applying the supplied predicate to\n * two list elements. Prefers the first item if two items compare equal based\n * on the predicate.\n *\n * @func\n * @memberOf R\n * @since v0.2.0\n * @category List\n * @sig ((a, a) -> Boolean) -> [a] -> [a]\n * @param {Function} pred A predicate used to test whether two items are equal.\n * @param {Array} list The array to consider.\n * @return {Array} The list of unique items.\n * @example\n *\n *      const strEq = R.eqBy(String);\n *      R.uniqWith(strEq)([1, '1', 2, 1]); //=> [1, 2]\n *      R.uniqWith(strEq)([{}, {}]);       //=> [{}]\n *      R.uniqWith(strEq)([1, '1', 1]);    //=> [1]\n *      R.uniqWith(strEq)(['1', 1, 1]);    //=> ['1']\n */\n\n\nvar uniqWith = /*#__PURE__*/_curry2(function uniqWith(pred, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n  var item;\n  while (idx < len) {\n    item = list[idx];\n    if (!_includesWith(pred, item, result)) {\n      result[result.length] = item;\n    }\n    idx += 1;\n  }\n  return result;\n});\nmodule.exports = uniqWith;","var _objectIs = /*#__PURE__*/require('./internal/_objectIs');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns true if its arguments are identical, false otherwise. Values are\n * identical if they reference the same memory. `NaN` is identical to `NaN`;\n * `0` and `-0` are not identical.\n *\n * Note this is merely a curried version of ES6 `Object.is`.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> a -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      const o = {};\n *      R.identical(o, o); //=> true\n *      R.identical(1, 1); //=> true\n *      R.identical(1, '1'); //=> false\n *      R.identical([], []); //=> false\n *      R.identical(0, -0); //=> false\n *      R.identical(NaN, NaN); //=> true\n */\n\n\nvar identical = /*#__PURE__*/_curry2(_objectIs);\nmodule.exports = identical;","var invoker = /*#__PURE__*/require('./invoker');\n\n/**\n * The lower case version of a string.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category String\n * @sig String -> String\n * @param {String} str The string to lower case.\n * @return {String} The lower case version of `str`.\n * @see R.toUpper\n * @example\n *\n *      R.toLower('XYZ'); //=> 'xyz'\n */\n\n\nvar toLower = /*#__PURE__*/invoker(0, 'toLowerCase');\nmodule.exports = toLower;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _Set = /*#__PURE__*/require('./internal/_Set');\n\n/**\n * Finds the set (i.e. no duplicates) of all elements in the first list not\n * contained in the second list. Objects and Arrays are compared in terms of\n * value equality, not reference equality.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Relation\n * @sig [*] -> [*] -> [*]\n * @param {Array} list1 The first list.\n * @param {Array} list2 The second list.\n * @return {Array} The elements in `list1` that are not in `list2`.\n * @see R.differenceWith, R.symmetricDifference, R.symmetricDifferenceWith, R.without\n * @example\n *\n *      R.difference([1,2,3,4], [7,6,5,4,3]); //=> [1,2]\n *      R.difference([7,6,5,4,3], [1,2,3,4]); //=> [7,6,5]\n *      R.difference([{a: 1}, {b: 2}], [{a: 1}, {c: 3}]) //=> [{b: 2}]\n */\n\n\nvar difference = /*#__PURE__*/_curry2(function difference(first, second) {\n  var out = [];\n  var idx = 0;\n  var firstLen = first.length;\n  var secondLen = second.length;\n  var toFilterOut = new _Set();\n\n  for (var i = 0; i < secondLen; i += 1) {\n    toFilterOut.add(second[i]);\n  }\n\n  while (idx < firstLen) {\n    if (toFilterOut.add(first[idx])) {\n      out[out.length] = first[idx];\n    }\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = difference;","var _objectAssign = /*#__PURE__*/require('./internal/_objectAssign');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Merges a list of objects together into one object.\n *\n * @func\n * @memberOf R\n * @since v0.10.0\n * @category List\n * @sig [{k: v}] -> {k: v}\n * @param {Array} list An array of objects\n * @return {Object} A merged object.\n * @see R.reduce\n * @example\n *\n *      R.mergeAll([{foo:1},{bar:2},{baz:3}]); //=> {foo:1,bar:2,baz:3}\n *      R.mergeAll([{foo:1},{foo:2},{bar:2}]); //=> {foo:2,bar:2}\n * @symb R.mergeAll([{ x: 1 }, { y: 2 }, { z: 3 }]) = { x: 1, y: 2, z: 3 }\n */\n\n\nvar mergeAll = /*#__PURE__*/_curry1(function mergeAll(list) {\n  return _objectAssign.apply(null, [{}].concat(list));\n});\nmodule.exports = mergeAll;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\n/**\n * Makes a shallow clone of an object, setting or overriding the specified\n * property with the given value. Note that this copies and flattens prototype\n * properties onto the new object as well. All non-primitive properties are\n * copied by reference.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig String -> a -> {k: v} -> {k: v}\n * @param {String} prop The property name to set\n * @param {*} val The new value\n * @param {Object} obj The object to clone\n * @return {Object} A new object equivalent to the original except for the changed property.\n * @see R.dissoc, R.pick\n * @example\n *\n *      R.assoc('c', 3, {a: 1, b: 2}); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar assoc = /*#__PURE__*/_curry3(function assoc(prop, val, obj) {\n  var result = {};\n  for (var p in obj) {\n    result[p] = obj[p];\n  }\n  result[prop] = val;\n  return result;\n});\nmodule.exports = assoc;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar hasPath = /*#__PURE__*/require('./hasPath');\n\n/**\n * Returns whether or not an object has an own property with the specified name\n *\n * @func\n * @memberOf R\n * @since v0.7.0\n * @category Object\n * @sig s -> {s: x} -> Boolean\n * @param {String} prop The name of the property to check for.\n * @param {Object} obj The object to query.\n * @return {Boolean} Whether the property exists.\n * @example\n *\n *      const hasName = R.has('name');\n *      hasName({name: 'alice'});   //=> true\n *      hasName({name: 'bob'});     //=> true\n *      hasName({});                //=> false\n *\n *      const point = {x: 0, y: 0};\n *      const pointHas = R.has(R.__, point);\n *      pointHas('x');  //=> true\n *      pointHas('y');  //=> true\n *      pointHas('z');  //=> false\n */\n\n\nvar has = /*#__PURE__*/_curry2(function has(prop, obj) {\n  return hasPath([prop], obj);\n});\nmodule.exports = has;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xdrop = /*#__PURE__*/require('./internal/_xdrop');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns all but the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `drop` method).\n *\n * Dispatches to the `drop` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*} A copy of list without the first `n` elements\n * @see R.take, R.transduce, R.dropLast, R.dropWhile\n * @example\n *\n *      R.drop(1, ['foo', 'bar', 'baz']); //=> ['bar', 'baz']\n *      R.drop(2, ['foo', 'bar', 'baz']); //=> ['baz']\n *      R.drop(3, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(4, ['foo', 'bar', 'baz']); //=> []\n *      R.drop(3, 'ramda');               //=> 'da'\n */\n\n\nvar drop = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['drop'], _xdrop, function drop(n, xs) {\n  return slice(Math.max(0, n), Infinity, xs);\n}));\nmodule.exports = drop;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _dropLast = /*#__PURE__*/require('./internal/_dropLast');\n\nvar _xdropLast = /*#__PURE__*/require('./internal/_xdropLast');\n\n/**\n * Returns a list containing all but the last `n` elements of the given `list`.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.16.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n The number of elements of `list` to skip.\n * @param {Array} list The list of elements to consider.\n * @return {Array} A copy of the list with only the first `list.length - n` elements\n * @see R.takeLast, R.drop, R.dropWhile, R.dropLastWhile\n * @example\n *\n *      R.dropLast(1, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.dropLast(2, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.dropLast(3, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(4, ['foo', 'bar', 'baz']); //=> []\n *      R.dropLast(3, 'ramda');               //=> 'ra'\n */\n\n\nvar dropLast = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable([], _xdropLast, _dropLast));\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a new object out of a list of keys and a list of values.\n * Key/value pairing is truncated to the length of the shorter of the two lists.\n * Note: `zipObj` is equivalent to `pipe(zip, fromPairs)`.\n *\n * @func\n * @memberOf R\n * @since v0.3.0\n * @category List\n * @sig [String] -> [*] -> {String: *}\n * @param {Array} keys The array that will be properties on the output object.\n * @param {Array} values The list of values on the output object.\n * @return {Object} The object made by pairing up same-indexed elements of `keys` and `values`.\n * @example\n *\n *      R.zipObj(['a', 'b', 'c'], [1, 2, 3]); //=> {a: 1, b: 2, c: 3}\n */\n\n\nvar zipObj = /*#__PURE__*/_curry2(function zipObj(keys, values) {\n  var idx = 0;\n  var len = Math.min(keys.length, values.length);\n  var out = {};\n  while (idx < len) {\n    out[keys[idx]] = values[idx];\n    idx += 1;\n  }\n  return out;\n});\nmodule.exports = zipObj;","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || nonIterableRest();\n}\n\nmodule.exports = _toArray;","module.exports = __WEBPACK_EXTERNAL_MODULE__87__;","module.exports = require(\"events\");","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry1 = /*#__PURE__*/require('./internal/_curry1');\n\n/**\n * Accepts a function `fn` and returns a function that guards invocation of\n * `fn` such that `fn` can only ever be called once, no matter how many times\n * the returned function is invoked. The first value calculated is returned in\n * subsequent invocations.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category Function\n * @sig (a... -> b) -> (a... -> b)\n * @param {Function} fn The function to wrap in a call-only-once wrapper.\n * @return {Function} The wrapped function.\n * @example\n *\n *      const addOneOnce = R.once(x => x + 1);\n *      addOneOnce(10); //=> 11\n *      addOneOnce(addOneOnce(50)); //=> 11\n */\n\n\nvar once = /*#__PURE__*/_curry1(function once(fn) {\n  var called = false;\n  var result;\n  return _arity(fn.length, function () {\n    if (called) {\n      return result;\n    }\n    called = true;\n    result = fn.apply(this, arguments);\n    return result;\n  });\n});\nmodule.exports = once;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Returns a partial copy of an object containing only the keys that satisfy\n * the supplied predicate.\n *\n * @func\n * @memberOf R\n * @since v0.8.0\n * @category Object\n * @sig ((v, k) -> Boolean) -> {k: v} -> {k: v}\n * @param {Function} pred A predicate to determine whether or not a key\n *        should be included on the output object.\n * @param {Object} obj The object to copy from\n * @return {Object} A new object with only properties that satisfy `pred`\n *         on it.\n * @see R.pick, R.filter\n * @example\n *\n *      const isUpperCase = (val, key) => key.toUpperCase() === key;\n *      R.pickBy(isUpperCase, {a: 1, b: 2, A: 3, B: 4}); //=> {A: 3, B: 4}\n */\n\n\nvar pickBy = /*#__PURE__*/_curry2(function pickBy(test, obj) {\n  var result = {};\n  for (var prop in obj) {\n    if (test(obj[prop], prop, obj)) {\n      result[prop] = obj[prop];\n    }\n  }\n  return result;\n});\nmodule.exports = pickBy;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\n/**\n * Returns a single item by iterating through the list, successively calling\n * the iterator function and passing it an accumulator value and the current\n * value from the array, and then passing the result to the next call.\n *\n * The iterator function receives two values: *(acc, value)*. It may use\n * [`R.reduced`](#reduced) to shortcut the iteration.\n *\n * The arguments' order of [`reduceRight`](#reduceRight)'s iterator function\n * is *(value, acc)*.\n *\n * Note: `R.reduce` does not skip deleted or unassigned indices (sparse\n * arrays), unlike the native `Array.prototype.reduce` method. For more details\n * on this behavior, see:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce#Description\n *\n * Dispatches to the `reduce` method of the third argument, if present. When\n * doing so, it is up to the user to handle the [`R.reduced`](#reduced)\n * shortcuting, as this is not implemented by `reduce`.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig ((a, b) -> a) -> a -> [b] -> a\n * @param {Function} fn The iterator function. Receives two values, the accumulator and the\n *        current element from the array.\n * @param {*} acc The accumulator value.\n * @param {Array} list The list to iterate over.\n * @return {*} The final, accumulated value.\n * @see R.reduced, R.addIndex, R.reduceRight\n * @example\n *\n *      R.reduce(R.subtract, 0, [1, 2, 3, 4]) // => ((((0 - 1) - 2) - 3) - 4) = -10\n *      //          -               -10\n *      //         / \\              / \\\n *      //        -   4           -6   4\n *      //       / \\              / \\\n *      //      -   3   ==>     -3   3\n *      //     / \\              / \\\n *      //    -   2           -1   2\n *      //   / \\              / \\\n *      //  0   1            0   1\n *\n * @symb R.reduce(f, a, [b, c, d]) = f(f(f(a, b), c), d)\n */\n\n\nvar reduce = /*#__PURE__*/_curry3(_reduce);\nmodule.exports = reduce;","module.exports = __WEBPACK_EXTERNAL_MODULE__92__;","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options === 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n","var curry = /*#__PURE__*/require('./curry');\n\n/**\n * Returns the result of calling its first argument with the remaining\n * arguments. This is occasionally useful as a converging function for\n * [`R.converge`](#converge): the first branch can produce a function while the\n * remaining branches produce values to be passed to that function as its\n * arguments.\n *\n * @func\n * @memberOf R\n * @since v0.9.0\n * @category Function\n * @sig (*... -> a),*... -> a\n * @param {Function} fn The function to apply to the remaining arguments.\n * @param {...*} args Any number of positional arguments.\n * @return {*}\n * @see R.apply\n * @example\n *\n *      R.call(R.add, 1, 2); //=> 3\n *\n *      const indentN = R.pipe(R.repeat(' '),\n *                           R.join(''),\n *                           R.replace(/^(?!$)/gm));\n *\n *      const format = R.converge(R.call, [\n *                                  R.pipe(R.prop('indent'), indentN),\n *                                  R.prop('value')\n *                              ]);\n *\n *      format({indent: 2, value: 'foo\\nbar\\nbaz\\n'}); //=> '  foo\\n  bar\\n  baz\\n'\n * @symb R.call(f, a, b) = f(a, b)\n */\n\n\nvar call = /*#__PURE__*/curry(function call(fn) {\n  return fn.apply(this, Array.prototype.slice.call(arguments, 1));\n});\nmodule.exports = call;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xfind = /*#__PURE__*/require('./internal/_xfind');\n\n/**\n * Returns the first element of the list which matches the predicate, or\n * `undefined` if no element matches.\n *\n * Dispatches to the `find` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig (a -> Boolean) -> [a] -> a | undefined\n * @param {Function} fn The predicate function used to determine if the element is the\n *        desired one.\n * @param {Array} list The array to consider.\n * @return {Object} The element found, or `undefined`.\n * @see R.transduce\n * @example\n *\n *      const xs = [{a: 1}, {a: 2}, {a: 3}];\n *      R.find(R.propEq('a', 2))(xs); //=> {a: 2}\n *      R.find(R.propEq('a', 4))(xs); //=> undefined\n */\n\n\nvar find = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['find'], _xfind, function find(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  while (idx < len) {\n    if (fn(list[idx])) {\n      return list[idx];\n    }\n    idx += 1;\n  }\n}));\nmodule.exports = find;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList)\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}\n\nmodule.exports = _arrayWithoutHoles;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nmodule.exports = _nonIterableSpread;","var equals = /*#__PURE__*/require('../equals');\n\nfunction _indexOf(list, a, idx) {\n  var inf, item;\n  // Array.prototype.indexOf doesn't exist below IE9\n  if (typeof list.indexOf === 'function') {\n    switch (typeof a) {\n      case 'number':\n        if (a === 0) {\n          // manually crawl the list to distinguish between +0 and -0\n          inf = 1 / a;\n          while (idx < list.length) {\n            item = list[idx];\n            if (item === 0 && 1 / item === inf) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        } else if (a !== a) {\n          // NaN\n          while (idx < list.length) {\n            item = list[idx];\n            if (typeof item === 'number' && item !== item) {\n              return idx;\n            }\n            idx += 1;\n          }\n          return -1;\n        }\n        // non-zero numbers can utilise Set\n        return list.indexOf(a, idx);\n\n      // all these types can utilise Set\n      case 'string':\n      case 'boolean':\n      case 'function':\n      case 'undefined':\n        return list.indexOf(a, idx);\n\n      case 'object':\n        if (a === null) {\n          // null can utilise Set\n          return list.indexOf(a, idx);\n        }\n    }\n  }\n  // anything else not covered above, defer to R.equals\n  while (idx < list.length) {\n    if (equals(list[idx], a)) {\n      return idx;\n    }\n    idx += 1;\n  }\n  return -1;\n}\nmodule.exports = _indexOf;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _equals = /*#__PURE__*/require('./internal/_equals');\n\n/**\n * Returns `true` if its arguments are equivalent, `false` otherwise. Handles\n * cyclical data structures.\n *\n * Dispatches symmetrically to the `equals` methods of both arguments, if\n * present.\n *\n * @func\n * @memberOf R\n * @since v0.15.0\n * @category Relation\n * @sig a -> b -> Boolean\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n * @example\n *\n *      R.equals(1, 1); //=> true\n *      R.equals(1, '1'); //=> false\n *      R.equals([1, 2, 3], [1, 2, 3]); //=> true\n *\n *      const a = {}; a.v = a;\n *      const b = {}; b.v = b;\n *      R.equals(a, b); //=> true\n */\n\n\nvar equals = /*#__PURE__*/_curry2(function equals(a, b) {\n  return _equals(a, b, [], []);\n});\nmodule.exports = equals;","var _arrayFromIterator = /*#__PURE__*/require('./_arrayFromIterator');\n\nvar _includesWith = /*#__PURE__*/require('./_includesWith');\n\nvar _functionName = /*#__PURE__*/require('./_functionName');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _objectIs = /*#__PURE__*/require('./_objectIs');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar type = /*#__PURE__*/require('../type');\n\n/**\n * private _uniqContentEquals function.\n * That function is checking equality of 2 iterator contents with 2 assumptions\n * - iterators lengths are the same\n * - iterators values are unique\n *\n * false-positive result will be returned for comparision of, e.g.\n * - [1,2,3] and [1,2,3,4]\n * - [1,1,1] and [1,2,3]\n * */\n\nfunction _uniqContentEquals(aIterator, bIterator, stackA, stackB) {\n  var a = _arrayFromIterator(aIterator);\n  var b = _arrayFromIterator(bIterator);\n\n  function eq(_a, _b) {\n    return _equals(_a, _b, stackA.slice(), stackB.slice());\n  }\n\n  // if *a* array contains any element that is not included in *b*\n  return !_includesWith(function (b, aItem) {\n    return !_includesWith(eq, aItem, b);\n  }, b, a);\n}\n\nfunction _equals(a, b, stackA, stackB) {\n  if (_objectIs(a, b)) {\n    return true;\n  }\n\n  var typeA = type(a);\n\n  if (typeA !== type(b)) {\n    return false;\n  }\n\n  if (a == null || b == null) {\n    return false;\n  }\n\n  if (typeof a['fantasy-land/equals'] === 'function' || typeof b['fantasy-land/equals'] === 'function') {\n    return typeof a['fantasy-land/equals'] === 'function' && a['fantasy-land/equals'](b) && typeof b['fantasy-land/equals'] === 'function' && b['fantasy-land/equals'](a);\n  }\n\n  if (typeof a.equals === 'function' || typeof b.equals === 'function') {\n    return typeof a.equals === 'function' && a.equals(b) && typeof b.equals === 'function' && b.equals(a);\n  }\n\n  switch (typeA) {\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n      if (typeof a.constructor === 'function' && _functionName(a.constructor) === 'Promise') {\n        return a === b;\n      }\n      break;\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n      if (!(typeof a === typeof b && _objectIs(a.valueOf(), b.valueOf()))) {\n        return false;\n      }\n      break;\n    case 'Date':\n      if (!_objectIs(a.valueOf(), b.valueOf())) {\n        return false;\n      }\n      break;\n    case 'Error':\n      return a.name === b.name && a.message === b.message;\n    case 'RegExp':\n      if (!(a.source === b.source && a.global === b.global && a.ignoreCase === b.ignoreCase && a.multiline === b.multiline && a.sticky === b.sticky && a.unicode === b.unicode)) {\n        return false;\n      }\n      break;\n  }\n\n  var idx = stackA.length - 1;\n  while (idx >= 0) {\n    if (stackA[idx] === a) {\n      return stackB[idx] === b;\n    }\n    idx -= 1;\n  }\n\n  switch (typeA) {\n    case 'Map':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.entries(), b.entries(), stackA.concat([a]), stackB.concat([b]));\n    case 'Set':\n      if (a.size !== b.size) {\n        return false;\n      }\n\n      return _uniqContentEquals(a.values(), b.values(), stackA.concat([a]), stackB.concat([b]));\n    case 'Arguments':\n    case 'Array':\n    case 'Object':\n    case 'Boolean':\n    case 'Number':\n    case 'String':\n    case 'Date':\n    case 'Error':\n    case 'RegExp':\n    case 'Int8Array':\n    case 'Uint8Array':\n    case 'Uint8ClampedArray':\n    case 'Int16Array':\n    case 'Uint16Array':\n    case 'Int32Array':\n    case 'Uint32Array':\n    case 'Float32Array':\n    case 'Float64Array':\n    case 'ArrayBuffer':\n      break;\n    default:\n      // Values of other types are only equal if identical.\n      return false;\n  }\n\n  var keysA = keys(a);\n  if (keysA.length !== keys(b).length) {\n    return false;\n  }\n\n  var extendedStackA = stackA.concat([a]);\n  var extendedStackB = stackB.concat([b]);\n\n  idx = keysA.length - 1;\n  while (idx >= 0) {\n    var key = keysA[idx];\n    if (!(_has(key, b) && _equals(b[key], a[key], extendedStackA, extendedStackB))) {\n      return false;\n    }\n    idx -= 1;\n  }\n  return true;\n}\nmodule.exports = _equals;","function _arrayFromIterator(iter) {\n  var list = [];\n  var next;\n  while (!(next = iter.next()).done) {\n    list.push(next.value);\n  }\n  return list;\n}\nmodule.exports = _arrayFromIterator;","function _functionName(f) {\n  // String(x => x) evaluates to \"x => x\", so the pattern may not match.\n  var match = String(f).match(/^function (\\w*)/);\n  return match == null ? '' : match[1];\n}\nmodule.exports = _functionName;","var _has = /*#__PURE__*/require('./_has');\n\nvar toString = Object.prototype.toString;\nvar _isArguments = /*#__PURE__*/function () {\n  return toString.call(arguments) === '[object Arguments]' ? function _isArguments(x) {\n    return toString.call(x) === '[object Arguments]';\n  } : function _isArguments(x) {\n    return _has('callee', x);\n  };\n}();\n\nmodule.exports = _isArguments;","function _complement(f) {\n  return function () {\n    return !f.apply(this, arguments);\n  };\n}\nmodule.exports = _complement;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _filter = /*#__PURE__*/require('./internal/_filter');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xfilter = /*#__PURE__*/require('./internal/_xfilter');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a predicate and a `Filterable`, and returns a new filterable of the\n * same type containing the members of the given filterable which satisfy the\n * given predicate. Filterable objects include plain objects or any object\n * that has a filter method such as `Array`.\n *\n * Dispatches to the `filter` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Filterable f => (a -> Boolean) -> f a -> f a\n * @param {Function} pred\n * @param {Array} filterable\n * @return {Array} Filterable\n * @see R.reject, R.transduce, R.addIndex\n * @example\n *\n *      const isEven = n => n % 2 === 0;\n *\n *      R.filter(isEven, [1, 2, 3, 4]); //=> [2, 4]\n *\n *      R.filter(isEven, {a: 1, b: 2, c: 3, d: 4}); //=> {b: 2, d: 4}\n */\n\n\nvar filter = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['filter'], _xfilter, function (pred, filterable) {\n  return _isObject(filterable) ? _reduce(function (acc, key) {\n    if (pred(filterable[key])) {\n      acc[key] = filterable[key];\n    }\n    return acc;\n  }, {}, keys(filterable)) :\n  // else\n  _filter(pred, filterable);\n}));\nmodule.exports = filter;","function _isTransformer(obj) {\n  return obj != null && typeof obj['@@transducer/step'] === 'function';\n}\nmodule.exports = _isTransformer;","function _filter(fn, list) {\n  var idx = 0;\n  var len = list.length;\n  var result = [];\n\n  while (idx < len) {\n    if (fn(list[idx])) {\n      result[result.length] = list[idx];\n    }\n    idx += 1;\n  }\n  return result;\n}\nmodule.exports = _filter;","var XWrap = /*#__PURE__*/function () {\n  function XWrap(fn) {\n    this.f = fn;\n  }\n  XWrap.prototype['@@transducer/init'] = function () {\n    throw new Error('init not implemented on XWrap');\n  };\n  XWrap.prototype['@@transducer/result'] = function (acc) {\n    return acc;\n  };\n  XWrap.prototype['@@transducer/step'] = function (acc, x) {\n    return this.f(acc, x);\n  };\n\n  return XWrap;\n}();\n\nfunction _xwrap(fn) {\n  return new XWrap(fn);\n}\nmodule.exports = _xwrap;","var _arity = /*#__PURE__*/require('./internal/_arity');\n\nvar _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\n/**\n * Creates a function that is bound to a context.\n * Note: `R.bind` does not provide the additional argument-binding capabilities of\n * [Function.prototype.bind](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind).\n *\n * @func\n * @memberOf R\n * @since v0.6.0\n * @category Function\n * @category Object\n * @sig (* -> *) -> {*} -> (* -> *)\n * @param {Function} fn The function to bind to context\n * @param {Object} thisObj The context to bind `fn` to\n * @return {Function} A function that will execute in the context of `thisObj`.\n * @see R.partial\n * @example\n *\n *      const log = R.bind(console.log, console);\n *      R.pipe(R.assoc('a', 2), R.tap(log), R.assoc('a', 3))({a: 1}); //=> {a: 3}\n *      // logs {a: 2}\n * @symb R.bind(f, o)(a, b) = f.call(o, a, b)\n */\n\n\nvar bind = /*#__PURE__*/_curry2(function bind(fn, thisObj) {\n  return _arity(fn.length, function () {\n    return fn.apply(thisObj, arguments);\n  });\n});\nmodule.exports = bind;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFilter = /*#__PURE__*/function () {\n\n  function XFilter(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XFilter.prototype['@@transducer/init'] = _xfBase.init;\n  XFilter.prototype['@@transducer/result'] = _xfBase.result;\n  XFilter.prototype['@@transducer/step'] = function (result, input) {\n    return this.f(input) ? this.xf['@@transducer/step'](result, input) : result;\n  };\n\n  return XFilter;\n}();\n\nvar _xfilter = /*#__PURE__*/_curry2(function _xfilter(f, xf) {\n  return new XFilter(f, xf);\n});\nmodule.exports = _xfilter;","var _isArrayLike = /*#__PURE__*/require('./_isArrayLike');\n\n/**\n * `_makeFlat` is a helper function that returns a one-level or fully recursive\n * function based on the flag passed in.\n *\n * @private\n */\n\n\nfunction _makeFlat(recursive) {\n  return function flatt(list) {\n    var value, jlen, j;\n    var result = [];\n    var idx = 0;\n    var ilen = list.length;\n\n    while (idx < ilen) {\n      if (_isArrayLike(list[idx])) {\n        value = recursive ? flatt(list[idx]) : list[idx];\n        j = 0;\n        jlen = value.length;\n        while (j < jlen) {\n          result[result.length] = value[j];\n          j += 1;\n        }\n      } else {\n        result[result.length] = list[idx];\n      }\n      idx += 1;\n    }\n    return result;\n  };\n}\nmodule.exports = _makeFlat;","function _isFunction(x) {\n  return Object.prototype.toString.call(x) === '[object Function]';\n}\nmodule.exports = _isFunction;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _map = /*#__PURE__*/require('./_map');\n\nvar _quote = /*#__PURE__*/require('./_quote');\n\nvar _toISOString = /*#__PURE__*/require('./_toISOString');\n\nvar keys = /*#__PURE__*/require('../keys');\n\nvar reject = /*#__PURE__*/require('../reject');\n\nfunction _toString(x, seen) {\n  var recur = function recur(y) {\n    var xs = seen.concat([x]);\n    return _includes(y, xs) ? '<Circular>' : _toString(y, xs);\n  };\n\n  //  mapPairs :: (Object, [String]) -> [String]\n  var mapPairs = function (obj, keys) {\n    return _map(function (k) {\n      return _quote(k) + ': ' + recur(obj[k]);\n    }, keys.slice().sort());\n  };\n\n  switch (Object.prototype.toString.call(x)) {\n    case '[object Arguments]':\n      return '(function() { return arguments; }(' + _map(recur, x).join(', ') + '))';\n    case '[object Array]':\n      return '[' + _map(recur, x).concat(mapPairs(x, reject(function (k) {\n        return (/^\\d+$/.test(k)\n        );\n      }, keys(x)))).join(', ') + ']';\n    case '[object Boolean]':\n      return typeof x === 'object' ? 'new Boolean(' + recur(x.valueOf()) + ')' : x.toString();\n    case '[object Date]':\n      return 'new Date(' + (isNaN(x.valueOf()) ? recur(NaN) : _quote(_toISOString(x))) + ')';\n    case '[object Null]':\n      return 'null';\n    case '[object Number]':\n      return typeof x === 'object' ? 'new Number(' + recur(x.valueOf()) + ')' : 1 / x === -Infinity ? '-0' : x.toString(10);\n    case '[object String]':\n      return typeof x === 'object' ? 'new String(' + recur(x.valueOf()) + ')' : _quote(x);\n    case '[object Undefined]':\n      return 'undefined';\n    default:\n      if (typeof x.toString === 'function') {\n        var repr = x.toString();\n        if (repr !== '[object Object]') {\n          return repr;\n        }\n      }\n      return '{' + mapPairs(x, keys(x)).join(', ') + '}';\n  }\n}\nmodule.exports = _toString;","function _quote(s) {\n  var escaped = s.replace(/\\\\/g, '\\\\\\\\').replace(/[\\b]/g, '\\\\b') // \\b matches word boundary; [\\b] matches backspace\n  .replace(/\\f/g, '\\\\f').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\t/g, '\\\\t').replace(/\\v/g, '\\\\v').replace(/\\0/g, '\\\\0');\n\n  return '\"' + escaped.replace(/\"/g, '\\\\\"') + '\"';\n}\nmodule.exports = _quote;","/**\n * Polyfill from <https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/toISOString>.\n */\nvar pad = function pad(n) {\n  return (n < 10 ? '0' : '') + n;\n};\n\nvar _toISOString = typeof Date.prototype.toISOString === 'function' ? function _toISOString(d) {\n  return d.toISOString();\n} : function _toISOString(d) {\n  return d.getUTCFullYear() + '-' + pad(d.getUTCMonth() + 1) + '-' + pad(d.getUTCDate()) + 'T' + pad(d.getUTCHours()) + ':' + pad(d.getUTCMinutes()) + ':' + pad(d.getUTCSeconds()) + '.' + (d.getUTCMilliseconds() / 1000).toFixed(3).slice(2, 5) + 'Z';\n};\n\nmodule.exports = _toISOString;","var _includes = /*#__PURE__*/require('./_includes');\n\nvar _Set = /*#__PURE__*/function () {\n\n  function _Set() {\n    /* globals Set */\n    this._nativeSet = typeof Set === 'function' ? new Set() : null;\n    this._items = {};\n  }\n\n  // until we figure out why jsdoc chokes on this\n  // @param item The item to add to the Set\n  // @returns {boolean} true if the item did not exist prior, otherwise false\n  //\n  _Set.prototype.add = function (item) {\n    return !hasOrAdd(item, true, this);\n  };\n\n  //\n  // @param item The item to check for existence in the Set\n  // @returns {boolean} true if the item exists in the Set, otherwise false\n  //\n  _Set.prototype.has = function (item) {\n    return hasOrAdd(item, false, this);\n  };\n\n  //\n  // Combines the logic for checking whether an item is a member of the set and\n  // for adding a new item to the set.\n  //\n  // @param item       The item to check or add to the Set instance.\n  // @param shouldAdd  If true, the item will be added to the set if it doesn't\n  //                   already exist.\n  // @param set        The set instance to check or add to.\n  // @return {boolean} true if the item already existed, otherwise false.\n  //\n  return _Set;\n}();\n\nfunction hasOrAdd(item, shouldAdd, set) {\n  var type = typeof item;\n  var prevSize, newSize;\n  switch (type) {\n    case 'string':\n    case 'number':\n      // distinguish between +0 and -0\n      if (item === 0 && 1 / item === -Infinity) {\n        if (set._items['-0']) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items['-0'] = true;\n          }\n          return false;\n        }\n      }\n      // these types can all utilise the native Set\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = {};\n            set._items[type][item] = true;\n          }\n          return false;\n        } else if (item in set._items[type]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][item] = true;\n          }\n          return false;\n        }\n      }\n\n    case 'boolean':\n      // set._items['boolean'] holds a two element array\n      // representing [ falseExists, trueExists ]\n      if (type in set._items) {\n        var bIdx = item ? 1 : 0;\n        if (set._items[type][bIdx]) {\n          return true;\n        } else {\n          if (shouldAdd) {\n            set._items[type][bIdx] = true;\n          }\n          return false;\n        }\n      } else {\n        if (shouldAdd) {\n          set._items[type] = item ? [false, true] : [true, false];\n        }\n        return false;\n      }\n\n    case 'function':\n      // compare functions for reference equality\n      if (set._nativeSet !== null) {\n        if (shouldAdd) {\n          prevSize = set._nativeSet.size;\n          set._nativeSet.add(item);\n          newSize = set._nativeSet.size;\n          return newSize === prevSize;\n        } else {\n          return set._nativeSet.has(item);\n        }\n      } else {\n        if (!(type in set._items)) {\n          if (shouldAdd) {\n            set._items[type] = [item];\n          }\n          return false;\n        }\n        if (!_includes(item, set._items[type])) {\n          if (shouldAdd) {\n            set._items[type].push(item);\n          }\n          return false;\n        }\n        return true;\n      }\n\n    case 'undefined':\n      if (set._items[type]) {\n        return true;\n      } else {\n        if (shouldAdd) {\n          set._items[type] = true;\n        }\n        return false;\n      }\n\n    case 'object':\n      if (item === null) {\n        if (!set._items['null']) {\n          if (shouldAdd) {\n            set._items['null'] = true;\n          }\n          return false;\n        }\n        return true;\n      }\n    /* falls through */\n    default:\n      // reduce the search size of heterogeneous sets by creating buckets\n      // for each type.\n      type = Object.prototype.toString.call(item);\n      if (!(type in set._items)) {\n        if (shouldAdd) {\n          set._items[type] = [item];\n        }\n        return false;\n      }\n      // scan through all previously applied items\n      if (!_includes(item, set._items[type])) {\n        if (shouldAdd) {\n          set._items[type].push(item);\n        }\n        return false;\n      }\n      return true;\n  }\n}\n\n// A simple Set type that honours R.equals semantics\nmodule.exports = _Set;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _isObject = /*#__PURE__*/require('./internal/_isObject');\n\nvar mergeWithKey = /*#__PURE__*/require('./mergeWithKey');\n\n/**\n * Creates a new object with the own properties of the two provided objects.\n * If a key exists in both objects:\n * - and both associated values are also objects then the values will be\n *   recursively merged.\n * - otherwise the provided function is applied to the key and associated values\n *   using the resulting value as the new value associated with the key.\n * If a key only exists in one object, the value will be associated with the key\n * of the resulting object.\n *\n * @func\n * @memberOf R\n * @since v0.24.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} lObj\n * @param {Object} rObj\n * @return {Object}\n * @see R.mergeWithKey, R.mergeDeepWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeDeepWithKey(concatValues,\n *                         { a: true, c: { thing: 'foo', values: [10, 20] }},\n *                         { b: true, c: { thing: 'bar', values: [15, 35] }});\n *      //=> { a: true, b: true, c: { thing: 'bar', values: [10, 20, 15, 35] }}\n */\n\n\nvar mergeDeepWithKey = /*#__PURE__*/_curry3(function mergeDeepWithKey(fn, lObj, rObj) {\n  return mergeWithKey(function (k, lVal, rVal) {\n    if (_isObject(lVal) && _isObject(rVal)) {\n      return mergeDeepWithKey(fn, lVal, rVal);\n    } else {\n      return fn(k, lVal, rVal);\n    }\n  }, lObj, rObj);\n});\nmodule.exports = mergeDeepWithKey;","var _curry3 = /*#__PURE__*/require('./internal/_curry3');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Creates a new object with the own properties of the two provided objects. If\n * a key exists in both objects, the provided function is applied to the key\n * and the values associated with the key in each object, with the result being\n * used as the value associated with the key in the returned object.\n *\n * @func\n * @memberOf R\n * @since v0.19.0\n * @category Object\n * @sig ((String, a, a) -> a) -> {a} -> {a} -> {a}\n * @param {Function} fn\n * @param {Object} l\n * @param {Object} r\n * @return {Object}\n * @see R.mergeDeepWithKey, R.merge, R.mergeWith\n * @example\n *\n *      let concatValues = (k, l, r) => k == 'values' ? R.concat(l, r) : r\n *      R.mergeWithKey(concatValues,\n *                     { a: true, thing: 'foo', values: [10, 20] },\n *                     { b: true, thing: 'bar', values: [15, 35] });\n *      //=> { a: true, b: true, thing: 'bar', values: [10, 20, 15, 35] }\n * @symb R.mergeWithKey(f, { x: 1, y: 2 }, { y: 5, z: 3 }) = { x: 1, y: f('y', 2, 5), z: 3 }\n */\n\n\nvar mergeWithKey = /*#__PURE__*/_curry3(function mergeWithKey(fn, l, r) {\n  var result = {};\n  var k;\n\n  for (k in l) {\n    if (_has(k, l)) {\n      result[k] = _has(k, r) ? fn(k, l[k], r[k]) : l[k];\n    }\n  }\n\n  for (k in r) {\n    if (_has(k, r) && !_has(k, result)) {\n      result[k] = r[k];\n    }\n  }\n\n  return result;\n});\nmodule.exports = mergeWithKey;","var _curryN = /*#__PURE__*/require('./_curryN');\n\nvar _has = /*#__PURE__*/require('./_has');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XReduceBy = /*#__PURE__*/function () {\n\n  function XReduceBy(valueFn, valueAcc, keyFn, xf) {\n    this.valueFn = valueFn;\n    this.valueAcc = valueAcc;\n    this.keyFn = keyFn;\n    this.xf = xf;\n    this.inputs = {};\n  }\n  XReduceBy.prototype['@@transducer/init'] = _xfBase.init;\n  XReduceBy.prototype['@@transducer/result'] = function (result) {\n    var key;\n    for (key in this.inputs) {\n      if (_has(key, this.inputs)) {\n        result = this.xf['@@transducer/step'](result, this.inputs[key]);\n        if (result['@@transducer/reduced']) {\n          result = result['@@transducer/value'];\n          break;\n        }\n      }\n    }\n    this.inputs = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XReduceBy.prototype['@@transducer/step'] = function (result, input) {\n    var key = this.keyFn(input);\n    this.inputs[key] = this.inputs[key] || [key, this.valueAcc];\n    this.inputs[key][1] = this.valueFn(this.inputs[key][1], input);\n    return result;\n  };\n\n  return XReduceBy;\n}();\n\nvar _xreduceBy = /*#__PURE__*/_curryN(4, [], function _xreduceBy(valueFn, valueAcc, keyFn, xf) {\n  return new XReduceBy(valueFn, valueAcc, keyFn, xf);\n});\nmodule.exports = _xreduceBy;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _map = /*#__PURE__*/require('./internal/_map');\n\nvar _reduce = /*#__PURE__*/require('./internal/_reduce');\n\nvar _xmap = /*#__PURE__*/require('./internal/_xmap');\n\nvar curryN = /*#__PURE__*/require('./curryN');\n\nvar keys = /*#__PURE__*/require('./keys');\n\n/**\n * Takes a function and\n * a [functor](https://github.com/fantasyland/fantasy-land#functor),\n * applies the function to each of the functor's values, and returns\n * a functor of the same shape.\n *\n * Ramda provides suitable `map` implementations for `Array` and `Object`,\n * so this function may be applied to `[1, 2, 3]` or `{x: 1, y: 2, z: 3}`.\n *\n * Dispatches to the `map` method of the second argument, if present.\n *\n * Acts as a transducer if a transformer is given in list position.\n *\n * Also treats functions as functors and will compose them together.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Functor f => (a -> b) -> f a -> f b\n * @param {Function} fn The function to be called on every element of the input `list`.\n * @param {Array} list The list to be iterated over.\n * @return {Array} The new list.\n * @see R.transduce, R.addIndex\n * @example\n *\n *      const double = x => x * 2;\n *\n *      R.map(double, [1, 2, 3]); //=> [2, 4, 6]\n *\n *      R.map(double, {x: 1, y: 2, z: 3}); //=> {x: 2, y: 4, z: 6}\n * @symb R.map(f, [a, b]) = [f(a), f(b)]\n * @symb R.map(f, { x: a, y: b }) = { x: f(a), y: f(b) }\n * @symb R.map(f, functor_o) = functor_o.map(f)\n */\n\n\nvar map = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['fantasy-land/map', 'map'], _xmap, function map(fn, functor) {\n  switch (Object.prototype.toString.call(functor)) {\n    case '[object Function]':\n      return curryN(functor.length, function () {\n        return fn.call(this, functor.apply(this, arguments));\n      });\n    case '[object Object]':\n      return _reduce(function (acc, key) {\n        acc[key] = fn(functor[key]);\n        return acc;\n      }, {}, keys(functor));\n    default:\n      return _map(fn, functor);\n  }\n}));\nmodule.exports = map;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XMap = /*#__PURE__*/function () {\n\n  function XMap(f, xf) {\n    this.xf = xf;\n    this.f = f;\n  }\n  XMap.prototype['@@transducer/init'] = _xfBase.init;\n  XMap.prototype['@@transducer/result'] = _xfBase.result;\n  XMap.prototype['@@transducer/step'] = function (result, input) {\n    return this.xf['@@transducer/step'](result, this.f(input));\n  };\n\n  return XMap;\n}();\n\nvar _xmap = /*#__PURE__*/_curry2(function _xmap(f, xf) {\n  return new XMap(f, xf);\n});\nmodule.exports = _xmap;","function _identity(x) {\n  return x;\n}\nmodule.exports = _identity;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _has = /*#__PURE__*/require('./internal/_has');\n\n/**\n * Returns whether or not a path exists in an object. Only the object's\n * own properties are checked.\n *\n * @func\n * @memberOf R\n * @since v0.26.0\n * @category Object\n * @typedefn Idx = String | Int\n * @sig [Idx] -> {a} -> Boolean\n * @param {Array} path The path to use.\n * @param {Object} obj The object to check the path in.\n * @return {Boolean} Whether the path exists.\n * @see R.has\n * @example\n *\n *      R.hasPath(['a', 'b'], {a: {b: 2}});         // => true\n *      R.hasPath(['a', 'b'], {a: {b: undefined}}); // => true\n *      R.hasPath(['a', 'b'], {a: {c: 2}});         // => false\n *      R.hasPath(['a', 'b'], {});                  // => false\n */\n\n\nvar hasPath = /*#__PURE__*/_curry2(function hasPath(_path, obj) {\n  if (_path.length === 0) {\n    return false;\n  }\n  var val = obj;\n  var idx = 0;\n  while (idx < _path.length) {\n    if (_has(_path[idx], val)) {\n      val = val[_path[idx]];\n      idx += 1;\n    } else {\n      return false;\n    }\n  }\n  return true;\n});\nmodule.exports = hasPath;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDrop = /*#__PURE__*/function () {\n\n  function XDrop(n, xf) {\n    this.xf = xf;\n    this.n = n;\n  }\n  XDrop.prototype['@@transducer/init'] = _xfBase.init;\n  XDrop.prototype['@@transducer/result'] = _xfBase.result;\n  XDrop.prototype['@@transducer/step'] = function (result, input) {\n    if (this.n > 0) {\n      this.n -= 1;\n      return result;\n    }\n    return this.xf['@@transducer/step'](result, input);\n  };\n\n  return XDrop;\n}();\n\nvar _xdrop = /*#__PURE__*/_curry2(function _xdrop(n, xf) {\n  return new XDrop(n, xf);\n});\nmodule.exports = _xdrop;","var take = /*#__PURE__*/require('../take');\n\nfunction dropLast(n, xs) {\n  return take(n < xs.length ? xs.length - n : 0, xs);\n}\nmodule.exports = dropLast;","var _curry2 = /*#__PURE__*/require('./internal/_curry2');\n\nvar _dispatchable = /*#__PURE__*/require('./internal/_dispatchable');\n\nvar _xtake = /*#__PURE__*/require('./internal/_xtake');\n\nvar slice = /*#__PURE__*/require('./slice');\n\n/**\n * Returns the first `n` elements of the given list, string, or\n * transducer/transformer (or object with a `take` method).\n *\n * Dispatches to the `take` method of the second argument, if present.\n *\n * @func\n * @memberOf R\n * @since v0.1.0\n * @category List\n * @sig Number -> [a] -> [a]\n * @sig Number -> String -> String\n * @param {Number} n\n * @param {*} list\n * @return {*}\n * @see R.drop\n * @example\n *\n *      R.take(1, ['foo', 'bar', 'baz']); //=> ['foo']\n *      R.take(2, ['foo', 'bar', 'baz']); //=> ['foo', 'bar']\n *      R.take(3, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(4, ['foo', 'bar', 'baz']); //=> ['foo', 'bar', 'baz']\n *      R.take(3, 'ramda');               //=> 'ram'\n *\n *      const personnel = [\n *        'Dave Brubeck',\n *        'Paul Desmond',\n *        'Eugene Wright',\n *        'Joe Morello',\n *        'Gerry Mulligan',\n *        'Bob Bates',\n *        'Joe Dodge',\n *        'Ron Crotty'\n *      ];\n *\n *      const takeFive = R.take(5);\n *      takeFive(personnel);\n *      //=> ['Dave Brubeck', 'Paul Desmond', 'Eugene Wright', 'Joe Morello', 'Gerry Mulligan']\n * @symb R.take(-1, [a, b]) = [a, b]\n * @symb R.take(0, [a, b]) = []\n * @symb R.take(1, [a, b]) = [a]\n * @symb R.take(2, [a, b]) = [a, b]\n */\n\n\nvar take = /*#__PURE__*/_curry2( /*#__PURE__*/_dispatchable(['take'], _xtake, function take(n, xs) {\n  return slice(0, n < 0 ? Infinity : n, xs);\n}));\nmodule.exports = take;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XTake = /*#__PURE__*/function () {\n\n  function XTake(n, xf) {\n    this.xf = xf;\n    this.n = n;\n    this.i = 0;\n  }\n  XTake.prototype['@@transducer/init'] = _xfBase.init;\n  XTake.prototype['@@transducer/result'] = _xfBase.result;\n  XTake.prototype['@@transducer/step'] = function (result, input) {\n    this.i += 1;\n    var ret = this.n === 0 ? result : this.xf['@@transducer/step'](result, input);\n    return this.n >= 0 && this.i >= this.n ? _reduced(ret) : ret;\n  };\n\n  return XTake;\n}();\n\nvar _xtake = /*#__PURE__*/_curry2(function _xtake(n, xf) {\n  return new XTake(n, xf);\n});\nmodule.exports = _xtake;","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XDropLast = /*#__PURE__*/function () {\n\n  function XDropLast(n, xf) {\n    this.xf = xf;\n    this.pos = 0;\n    this.full = false;\n    this.acc = new Array(n);\n  }\n  XDropLast.prototype['@@transducer/init'] = _xfBase.init;\n  XDropLast.prototype['@@transducer/result'] = function (result) {\n    this.acc = null;\n    return this.xf['@@transducer/result'](result);\n  };\n  XDropLast.prototype['@@transducer/step'] = function (result, input) {\n    if (this.full) {\n      result = this.xf['@@transducer/step'](result, this.acc[this.pos]);\n    }\n    this.store(input);\n    return result;\n  };\n  XDropLast.prototype.store = function (input) {\n    this.acc[this.pos] = input;\n    this.pos += 1;\n    if (this.pos === this.acc.length) {\n      this.pos = 0;\n      this.full = true;\n    }\n  };\n\n  return XDropLast;\n}();\n\nvar _xdropLast = /*#__PURE__*/_curry2(function _xdropLast(n, xf) {\n  return new XDropLast(n, xf);\n});\nmodule.exports = _xdropLast;","// Unique ID creation requires a high quality random # generator.  In node.js\n// this is pretty straight-forward - we use the crypto API.\n\nvar crypto = require('crypto');\n\nmodule.exports = function nodeRNG() {\n  return crypto.randomBytes(16);\n};\n","module.exports = require(\"crypto\");","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  // join used to fix memory issue caused by concatenation: https://bugs.chromium.org/p/v8/issues/detail?id=3175#c4\n  return ([bth[buf[i++]], bth[buf[i++]], \n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]], '-',\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]],\n\tbth[buf[i++]], bth[buf[i++]]]).join('');\n}\n\nmodule.exports = bytesToUuid;\n","var _curry2 = /*#__PURE__*/require('./_curry2');\n\nvar _reduced = /*#__PURE__*/require('./_reduced');\n\nvar _xfBase = /*#__PURE__*/require('./_xfBase');\n\nvar XFind = /*#__PURE__*/function () {\n\n  function XFind(f, xf) {\n    this.xf = xf;\n    this.f = f;\n    this.found = false;\n  }\n  XFind.prototype['@@transducer/init'] = _xfBase.init;\n  XFind.prototype['@@transducer/result'] = function (result) {\n    if (!this.found) {\n      result = this.xf['@@transducer/step'](result, void 0);\n    }\n    return this.xf['@@transducer/result'](result);\n  };\n  XFind.prototype['@@transducer/step'] = function (result, input) {\n    if (this.f(input)) {\n      this.found = true;\n      result = _reduced(this.xf['@@transducer/step'](result, input));\n    }\n    return result;\n  };\n\n  return XFind;\n}();\n\nvar _xfind = /*#__PURE__*/_curry2(function _xfind(f, xf) {\n  return new XFind(f, xf);\n});\nmodule.exports = _xfind;","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Bytes module\n * @module @aeternity/aepp-sdk/es/utils/bytes\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/bytes'\n */\n\n/**\n * Left pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function leftPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([fillArray, inputBuffer])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Right pad the input data with 0 bytes\n * @param length to pad to\n * @param inputBuffer data to pad\n * @return the padded data\n */\nexport function rightPad (length, inputBuffer) {\n  const fill = length - inputBuffer.length\n  if (fill > 0) {\n    const fillArray = new Uint8Array(fill)\n    fillArray.fill(0, fill)\n    return Buffer.concat([inputBuffer, fillArray])\n  } else {\n    return inputBuffer\n  }\n}\n\n/**\n * Convert bignumber to byte array\n * @param x bignumber instance\n * @return Buffer\n */\nexport function bigNumberToByteArray (x) {\n  let hexString = x.toString(16)\n  if (hexString.length % 2 > 0) hexString = '0' + hexString\n  return Buffer.from(hexString, 'hex')\n}\nexport function toBytes (val, big = false) {\n  // \"\"\"\n  // Encode a value to bytes.\n  // If the value is an int it will be encoded as bytes big endian\n  // Raises ValueError if the input is not an int or string\n\n  if (val === undefined) return undefined\n  if (Number.isInteger(val) || BigNumber.isBigNumber(val) || big) {\n    if (!BigNumber.isBigNumber(val)) val = BigNumber(val)\n    return bigNumberToByteArray(val)\n  }\n  if (typeof val === 'string') {\n    return val.toString('utf-8')\n  }\n  throw new Error('Byte serialization not supported')\n}\n","/**\n * Transaction Schema for TxBuilder\n * @module @aeternity/aepp-sdk/es/tx/builder/schema\n * @export TxSchema\n * @example import TxSchema from '@aeternity/aepp-sdk/es/tx/builder/schema'\n */\n/* eslint-disable no-unused-vars */\n// # RLP version number\n// # https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\n\nimport BigNumber from 'bignumber.js'\n\nexport const VSN = 1\n\n// # Tag constant for ids (type uint8)\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#the-id-type\n// # <<Tag:1/unsigned-integer-unit:8, Hash:32/binary-unit:8>>\nconst ID_TAG_ACCOUNT = 1\nconst ID_TAG_NAME = 2\nconst ID_TAG_COMMITMENT = 3\nconst ID_TAG_ORACLE = 4\nconst ID_TAG_CONTRACT = 5\nconst ID_TAG_CHANNEL = 6\n\n// # OBJECT tags\n// # see https://github.com/aeternity/protocol/blob/master/serializations.md#binary-serialization\nconst OBJECT_TAG_ACCOUNT = 10\nexport const OBJECT_TAG_SIGNED_TRANSACTION = 11\nconst OBJECT_TAG_SPEND_TRANSACTION = 12\nconst OBJECT_TAG_ORACLE_REGISTER_TRANSACTION = 22\nconst OBJECT_TAG_ORACLE_QUERY_TRANSACTION = 23\nconst OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION = 24\nconst OBJECT_TAG_ORACLE_EXTEND_TRANSACTION = 25\nconst OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION = 32\nconst OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION = 33\nconst OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION = 34\nconst OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION = 35\nconst OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION = 36\nconst OBJECT_TAG_CONTRACT = 40\nconst OBJECT_TAG_CONTRACT_CALL = 41\nconst OBJECT_TAG_CONTRACT_CREATE_TRANSACTION = 42\nconst OBJECT_TAG_CONTRACT_CALL_TRANSACTION = 43\nconst OBJECT_TAG_CHANNEL_CREATE_TX = 50\nconst OBJECT_TAG_CHANNEL_DEPOSIT_TX = 51\nconst OBJECT_TAG_CHANNEL_WITHRAW_TX = 52\nconst OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX = 53\nconst OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX = 54\nconst OBJECT_TAG_CHANNEL_SLASH_TX = 55\nconst OBJECT_TAG_CHANNEL_SETTLE_TX = 56\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_TX = 57\nconst OBJECT_TAG_CHANNEL = 58\nconst OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX = 59\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = 570\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = 571\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = 572\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = 573\nconst OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = 574\nconst OBJECT_TAG_PROOF_OF_INCLUSION = 60\nconst OBJECT_TAG_STATE_TREES = 62\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE = 63\nconst OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE = 64\nconst OBJECT_TAG_CONTRACTS_TREE = 621\nconst OBJECT_TAG_CONTRACT_CALLS_TREE = 622\nconst OBJECT_TAG_CHANNELS_TREE = 623\nconst OBJECT_TAG_NAMESERVICE_TREE = 624\nconst OBJECT_TAG_ORACLES_TREE = 625\nconst OBJECT_TAG_ACCOUNTS_TREE = 626\nconst OBJECT_TAG_GA_ATTACH = 80\nconst OBJECT_TAG_GA_META = 81\nconst OBJECT_TAG_SOPHIA_BYTE_CODE = 70\n\nconst TX_FIELD = (name, type, prefix) => [name, type, prefix]\nconst TX_SCHEMA_FIELD = (schema, objectId) => [schema, objectId]\n\nexport const MIN_GAS_PRICE = 1000000000 // min gasPrice 1e9\nexport const MAX_AUTH_FUN_GAS = 50000 // min gasPrice 1e9\n\nconst revertObject = (obj) => Object.entries(obj).reduce((acc, [key, v]) => (acc[v] = key) && acc, {})\n\n/**\n * @constant\n * @description Object with transaction types\n * @type {Object} TX_TYPE\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/schema\n * @property {String} signed\n * @property {String} spend\n * @property {String} nameClaim\n * @property {String} namePreClaim\n * @property {String} nameUpdate\n * @property {String} nameRevoke\n * @property {String} nameTransfer\n * @property {String} contractCreate\n * @property {String} contractCall\n * @property {String} oracleRegister\n * @property {String} oracleExtend\n * @property {String} oracleQuery\n * @property {String} oracleResponse\n */\nexport const TX_TYPE = {\n  account: 'account',\n  signed: 'signedTx',\n  spend: 'spendTx',\n  // AENS\n  nameClaim: 'nameClaimTx',\n  namePreClaim: 'namePreClaimTx',\n  nameUpdate: 'nameUpdateTx',\n  nameRevoke: 'nameRevokeTx',\n  nameTransfer: 'nameTransfer',\n  // CONTRACT\n  contract: 'contract',\n  contractCreate: 'contractCreateTx',\n  contractCall: 'contractCallTx',\n  contractCallResult: 'contractCallResult',\n  // ORACLE\n  oracleRegister: 'oracleRegister',\n  oracleExtend: 'oracleExtend',\n  oracleQuery: 'oracleQuery',\n  oracleResponse: 'oracleResponse',\n  // STATE CHANNEL\n  channelCreate: 'channelCreate',\n  channelCloseMutual: 'channelCloseMutual',\n  channelCloseSolo: 'channelCloseSolo',\n  channelSlash: 'channelSlash',\n  channelDeposit: 'channelDeposit',\n  channelWithdraw: 'channelWithdraw',\n  channelSettle: 'channelSettle',\n  channelOffChain: 'channelOffChain',\n  channel: 'channel',\n  channelSnapshotSolo: 'channelSnapshotSolo',\n  channelOffChainUpdateTransfer: 'channelOffChainUpdateTransfer',\n  channelOffChainUpdateDeposit: 'channelOffChainUpdateDeposit',\n  channelOffChainUpdateWithdrawal: 'channelOffChainUpdateWithdrawal',\n  channelOffChainCreateContract: 'channelOffChainCreateContract',\n  channelOffChainCallContract: 'channelOffChainCallContract',\n  proofOfInclusion: 'proofOfInclusion',\n  stateTrees: 'stateTrees',\n  merklePatriciaTree: 'merklePatriciaTree',\n  merklePatriciaTreeValue: 'merklePatriciaTreeValue',\n  contractsTree: 'contractsTree',\n  contractCallsTree: 'contractCallsTree',\n  channelsTree: 'channelsTree',\n  nameserviceTree: 'nameserviceTree',\n  oraclesTree: 'oraclesTree',\n  accountsTree: 'accountsTree',\n  // GA ACCOUNTS\n  gaAttach: 'gaAttach',\n  gaMeta: 'gaMeta',\n  sophiaByteCode: 'sophiaByteCode'\n}\n\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const VM_VERSIONS = {\n  NO_VM: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2,\n  SOPHIA_IMPROVEMENTS_MINERVA: 3,\n  SOPHIA_IMPROVEMENTS_FORTUNA: 4,\n  SOPHIA_IMPROVEMENTS_LIMA: 6\n}\n// # see https://github.com/aeternity/protocol/blob/minerva/contracts/contract_vms.md#virtual-machines-on-the-%C3%A6ternity-blockchain\nexport const ABI_VERSIONS = {\n  NO_ABI: 0,\n  SOPHIA: 1,\n  SOLIDITY: 2\n}\n\nexport const VM_ABI_MAP_ROMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_MINERVA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA, VM_VERSIONS.SOPHIA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_FORTUNA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const VM_ABI_MAP_LIMA = {\n  [TX_TYPE.contractCreate]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.contractCall]: { vmVersion: [VM_VERSIONS.SOPHIA_IMPROVEMENTS_LIMA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_FORTUNA, VM_VERSIONS.SOPHIA, VM_VERSIONS.SOPHIA_IMPROVEMENTS_MINERVA], abiVersion: [ABI_VERSIONS.SOPHIA] },\n  [TX_TYPE.oracleRegister]: { vmVersion: [], abiVersion: [ABI_VERSIONS.NO_ABI, ABI_VERSIONS.SOPHIA] }\n}\n\nexport const PROTOCOL_VM_ABI = {\n  // Roma\n  '1': VM_ABI_MAP_ROMA,\n  // Minerva\n  '2': VM_ABI_MAP_MINERVA,\n  // Fortuna\n  '3': VM_ABI_MAP_FORTUNA,\n  // Lima\n  '4': VM_ABI_MAP_LIMA\n}\n\nexport const OBJECT_ID_TX_TYPE = {\n  [OBJECT_TAG_ACCOUNT]: TX_TYPE.account,\n  [OBJECT_TAG_SIGNED_TRANSACTION]: TX_TYPE.signed,\n  [OBJECT_TAG_SPEND_TRANSACTION]: TX_TYPE.spend,\n  // AENS\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: TX_TYPE.nameClaim,\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: TX_TYPE.namePreClaim,\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: TX_TYPE.nameUpdate,\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: TX_TYPE.nameRevoke,\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: TX_TYPE.nameTransfer,\n  // CONTRACT\n  [OBJECT_TAG_CONTRACT]: TX_TYPE.contract,\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: TX_TYPE.contractCreate,\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: TX_TYPE.contractCall,\n  [OBJECT_TAG_CONTRACT_CALL]: TX_TYPE.contractCallResult,\n  // ORACLE\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: TX_TYPE.oracleRegister,\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: TX_TYPE.oracleExtend,\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: TX_TYPE.oracleQuery,\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: TX_TYPE.oracleResponse,\n  // STATE CHANNEL\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: TX_TYPE.channelCreate,\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: TX_TYPE.channelCloseMutual,\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: TX_TYPE.channelCloseSolo,\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: TX_TYPE.channelSlash,\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: TX_TYPE.channelDeposit,\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: TX_TYPE.channelWithdraw,\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: TX_TYPE.channelSettle,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: TX_TYPE.channelOffChain,\n  [OBJECT_TAG_CHANNEL]: TX_TYPE.channel,\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: TX_TYPE.channelSnapshotSolo,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: TX_TYPE.channelOffChainUpdateTransfer,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: TX_TYPE.channelOffChainUpdateDeposit,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: TX_TYPE.channelOffChainUpdateWithdrawal,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: TX_TYPE.channelOffChainCreateContract,\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: TX_TYPE.channelOffChainCallContract,\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: TX_TYPE.proofOfInclusion,\n  [OBJECT_TAG_STATE_TREES]: TX_TYPE.stateTrees,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: TX_TYPE.merklePatriciaTree,\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: TX_TYPE.merklePatriciaTreeValue,\n  [OBJECT_TAG_CONTRACTS_TREE]: TX_TYPE.contractsTree,\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: TX_TYPE.contractCallsTree,\n  [OBJECT_TAG_CHANNELS_TREE]: TX_TYPE.channelsTree,\n  [OBJECT_TAG_NAMESERVICE_TREE]: TX_TYPE.nameserviceTree,\n  [OBJECT_TAG_ORACLES_TREE]: TX_TYPE.oraclesTree,\n  [OBJECT_TAG_ACCOUNTS_TREE]: TX_TYPE.accountsTree,\n  // GA Accounts\n  [OBJECT_TAG_GA_ATTACH]: TX_TYPE.gaAttach,\n  [OBJECT_TAG_GA_META]: TX_TYPE.gaMeta,\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: TX_TYPE.sophiaByteCode\n}\n\nexport const FIELD_TYPES = {\n  int: 'int',\n  id: 'id',\n  ids: 'ids',\n  string: 'string',\n  binary: 'binary',\n  rlpBinary: 'rlpBinary',\n  rlpBinaries: 'rlpBinaries',\n  rawBinary: 'rawBinary',\n  bool: 'bool',\n  hex: 'hex',\n  signatures: 'signatures',\n  pointers: 'pointers',\n  offChainUpdates: 'offChainUpdates',\n  callStack: 'callStack',\n  proofOfInclusion: 'proofOfInclusion',\n  mptree: 'mptree',\n  callReturnType: 'callReturnType',\n  ctVersion: 'ctVersion',\n  sophiaCodeTypeInfo: 'sophiaCodeTypeInfo',\n  payload: 'payload'\n}\n\n// FEE CALCULATION\nexport const BASE_GAS = 15000\nexport const GAS_PER_BYTE = 20\nexport const DEFAULT_FEE = 20000\nexport const KEY_BLOCK_INTERVAL = 3\n\n// MAP WITH FEE CALCULATION https://github.com/aeternity/protocol/blob/master/consensus/consensus.md#gas\nexport const TX_FEE_BASE_GAS = (txType) => {\n  switch (txType) {\n    // case TX_TYPE.gaMeta: // TODO investigate MetaTx calculation\n    case TX_TYPE.gaAttach:\n    case TX_TYPE.contractCreate:\n      return BigNumber(5 * BASE_GAS)\n    // Todo Implement meta tx fee calculation\n    case TX_TYPE.gaMeta:\n    case TX_TYPE.contractCall:\n      return BigNumber(30 * BASE_GAS)\n    default:\n      return BigNumber(BASE_GAS)\n  }\n}\n\nexport const TX_FEE_OTHER_GAS = (txType) => ({ txSize, relativeTtl }) => {\n  switch (txType) {\n    case TX_TYPE.oracleRegister:\n    case TX_TYPE.oracleExtend:\n    case TX_TYPE.oracleQuery:\n    case TX_TYPE.oracleResponse:\n      return BigNumber(txSize)\n        .times(GAS_PER_BYTE)\n        .plus(\n          Math.ceil(32000 * relativeTtl / Math.floor(60 * 24 * 365 / KEY_BLOCK_INTERVAL))\n        )\n    default:\n      return BigNumber(txSize).times(GAS_PER_BYTE)\n  }\n}\n\nexport const ID_TAG = {\n  account: ID_TAG_ACCOUNT,\n  name: ID_TAG_NAME,\n  commitment: ID_TAG_COMMITMENT,\n  oracle: ID_TAG_ORACLE,\n  contract: ID_TAG_CONTRACT,\n  channel: ID_TAG_CHANNEL\n}\nexport const PREFIX_ID_TAG = {\n  'ak': ID_TAG.account,\n  'nm': ID_TAG.name,\n  'cm': ID_TAG.commitment,\n  'ok': ID_TAG.oracle,\n  'ct': ID_TAG.contract,\n  'ch': ID_TAG.channel\n}\nexport const ID_TAG_PREFIX = revertObject(PREFIX_ID_TAG)\nconst VALIDATION_ERROR = (msg) => msg\n\nexport const VALIDATION_MESSAGE = {\n  [FIELD_TYPES.int]: ({ value, isMinusValue }) => isMinusValue ? VALIDATION_ERROR(`${value} must be >= 0`) : VALIDATION_ERROR(`${value} is not of type Number or BigNumber`),\n  [FIELD_TYPES.id]: ({ value, prefix }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}' or ID_TAG for prefix not found`),\n  [FIELD_TYPES.binary]: ({ prefix, value }) => VALIDATION_ERROR(`'${value}' prefix doesn't match expected prefix '${prefix}'`),\n  [FIELD_TYPES.string]: ({ value }) => VALIDATION_ERROR(`Not a string`),\n  [FIELD_TYPES.pointers]: ({ value }) => VALIDATION_ERROR(`Value must be of type Array and contains only object's like '{key: \"account_pubkey\", id: \"ak_lkamsflkalsdalksdlasdlasdlamd\"}'`),\n  [FIELD_TYPES.ctVersion]: ({ value }) => VALIDATION_ERROR(`Value must be an object with \"vmVersion\" and \"abiVersion\" fields`)\n}\n\nconst BASE_TX = [\n  TX_FIELD('tag', FIELD_TYPES.int),\n  TX_FIELD('VSN', FIELD_TYPES.int)\n]\n\nconst ACCOUNT_TX = [\n  ...BASE_TX,\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int)\n]\n\nexport const CONTRACT_BYTE_CODE_MINERVA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary),\n  TX_FIELD('compilerVersion', FIELD_TYPES.string)\n]\n\nexport const CONTRACT_BYTE_CODE_ROMA = [\n  ...BASE_TX,\n  TX_FIELD('sourceCodeHash', FIELD_TYPES.rawBinary),\n  TX_FIELD('typeInfo', FIELD_TYPES.sophiaCodeTypeInfo),\n  TX_FIELD('byteCode', FIELD_TYPES.rawBinary)\n]\n\nconst ACCOUNT_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('flags', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('balance', FIELD_TYPES.int),\n  TX_FIELD('gaContract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gaAuthFun', FIELD_TYPES.binary, 'cb')\n]\n\nconst SPEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('payload', FIELD_TYPES.payload)\n]\n\nconst SIGNED_TX = [\n  ...BASE_TX,\n  TX_FIELD('signatures', FIELD_TYPES.signatures),\n  TX_FIELD('encodedTx', FIELD_TYPES.rlpBinary)\n]\n\nconst NAME_PRE_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('commitmentId', FIELD_TYPES.id, 'cm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_CLAIM_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('name', FIELD_TYPES.binary, 'nm'),\n  TX_FIELD('nameSalt', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_UPDATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('nameTtl', FIELD_TYPES.int),\n  TX_FIELD('pointers', FIELD_TYPES.pointers),\n  TX_FIELD('clientTtl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('recipientId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst NAME_REVOKE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('nameId', FIELD_TYPES.id, 'nm'),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('log', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('active', FIELD_TYPES.bool),\n  TX_FIELD('referers', FIELD_TYPES.ids, 'ak'),\n  TX_FIELD('deposit', FIELD_TYPES.int)\n]\n\nconst GA_ATTACH_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('authFun', FIELD_TYPES.rawBinary),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst GA_META_TX = [\n  ...BASE_TX,\n  TX_FIELD('gaId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('authData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('tx', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('ownerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('ctVersion', FIELD_TYPES.ctVersion),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('gas', FIELD_TYPES.int),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CONTRACT_CALL_RESULT_TX = [\n  ...BASE_TX,\n  TX_FIELD('callerId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('callerNonce', FIELD_TYPES.int),\n  TX_FIELD('height', FIELD_TYPES.int),\n  TX_FIELD('contractId', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasUsed', FIELD_TYPES.int),\n  TX_FIELD('returnValue', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('returnType', FIELD_TYPES.callReturnType),\n  // TODO: add serialization for <log> :: [ { <address> :: id, [ <topics> :: binary() ], <data> :: binary() } ]\n  TX_FIELD('log', FIELD_TYPES.rawBinary)\n]\n\nconst ORACLE_REGISTER_TX = [\n  ...BASE_TX,\n  TX_FIELD('accountId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryFormat', FIELD_TYPES.string),\n  TX_FIELD('responseFormat', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('abiVersion', FIELD_TYPES.int)\n]\n\nconst ORACLE_EXTEND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlType', FIELD_TYPES.int),\n  TX_FIELD('oracleTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst ORACLE_QUERY_TX = [\n  ...BASE_TX,\n  TX_FIELD('senderId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('query', FIELD_TYPES.string),\n  TX_FIELD('queryFee', FIELD_TYPES.int),\n  TX_FIELD('queryTtlType', FIELD_TYPES.int),\n  TX_FIELD('queryTtlValue', FIELD_TYPES.int),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\nconst ORACLE_RESPOND_TX = [\n  ...BASE_TX,\n  TX_FIELD('oracleId', FIELD_TYPES.id, 'ok'),\n  TX_FIELD('nonce', FIELD_TYPES.int),\n  TX_FIELD('queryId', FIELD_TYPES.binary, 'oq'),\n  TX_FIELD('response', FIELD_TYPES.string),\n  TX_FIELD('responseTtlType', FIELD_TYPES.int),\n  TX_FIELD('responseTtlValue', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CREATE_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.string),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_WITHDRAW_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('toId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_MUTUAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_CLOSE_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SLASH_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('poi', FIELD_TYPES.binary, 'pi'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_SETTLE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('initiatorAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('responderAmountFinal', FIELD_TYPES.int),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('updates', FIELD_TYPES.offChainUpdates),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_OFFCHAIN_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('stateHash', FIELD_TYPES.binary, 'st')\n]\n\nconst CHANNEL_TX = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int)\n]\n\nconst CHANNEL_TX_2 = [\n  ...BASE_TX,\n  TX_FIELD('initiator', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('responder', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('channelAmount', FIELD_TYPES.int),\n  TX_FIELD('initiatorAmount', FIELD_TYPES.int),\n  TX_FIELD('responderAmount', FIELD_TYPES.int),\n  TX_FIELD('channelReserve', FIELD_TYPES.int),\n  TX_FIELD('delegateIds', FIELD_TYPES.ids),\n  TX_FIELD('stateHash', FIELD_TYPES.hex),\n  TX_FIELD('round', FIELD_TYPES.int),\n  TX_FIELD('soloRound', FIELD_TYPES.int),\n  TX_FIELD('lockPeriod', FIELD_TYPES.int),\n  TX_FIELD('lockedUntil', FIELD_TYPES.int),\n  TX_FIELD('initiatorAuth', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('responderAuth', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_SNAPSHOT_SOLO_TX = [\n  ...BASE_TX,\n  TX_FIELD('channelId', FIELD_TYPES.id, 'ch'),\n  TX_FIELD('fromId', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('payload', FIELD_TYPES.binary, 'tx'),\n  TX_FIELD('ttl', FIELD_TYPES.int),\n  TX_FIELD('fee', FIELD_TYPES.int),\n  TX_FIELD('nonce', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('owner', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('ctVersion', FIELD_TYPES.int),\n  TX_FIELD('code', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('deposit', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb')\n]\n\nconst CHANNEL_OFFCHAIN_CALL_CONTRACT_TX = [\n  ...BASE_TX,\n  TX_FIELD('caller', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('contract', FIELD_TYPES.id, 'ct'),\n  TX_FIELD('abiVersion', FIELD_TYPES.int),\n  TX_FIELD('amount', FIELD_TYPES.int),\n  TX_FIELD('callData', FIELD_TYPES.binary, 'cb'),\n  TX_FIELD('callStack', FIELD_TYPES.callStack),\n  TX_FIELD('gasPrice', FIELD_TYPES.int),\n  TX_FIELD('gasLimit', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('to', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX = [\n  ...BASE_TX,\n  TX_FIELD('from', FIELD_TYPES.id, 'ak'),\n  TX_FIELD('amount', FIELD_TYPES.int)\n]\n\nconst PROOF_OF_INCLUSION_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.mptrees),\n  TX_FIELD('calls', FIELD_TYPES.mptrees),\n  TX_FIELD('channels', FIELD_TYPES.mptrees),\n  TX_FIELD('contracts', FIELD_TYPES.mptrees),\n  TX_FIELD('ns', FIELD_TYPES.mptrees),\n  TX_FIELD('oracles', FIELD_TYPES.mptrees)\n]\n\nconst STATE_TREES_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary),\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary),\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary),\n  TX_FIELD('ns', FIELD_TYPES.rlpBinary),\n  TX_FIELD('oracles', FIELD_TYPES.rlpBinary),\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nconst MERKLE_PATRICIA_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('values', FIELD_TYPES.rlpBinaries)\n]\n\nconst MERKLE_PATRICIA_TREE_VALUE_TX = [\n  ...BASE_TX,\n  TX_FIELD('key', FIELD_TYPES.hex),\n  TX_FIELD('value', FIELD_TYPES.rawBinary)\n]\n\nconst CONTRACTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('contracts', FIELD_TYPES.rlpBinary)\n]\n\nconst CONTRACT_CALLS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('calls', FIELD_TYPES.rlpBinary)\n]\n\nconst CHANNELS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('channels', FIELD_TYPES.rlpBinary)\n]\n\nconst NAMESERVICE_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('mtree', FIELD_TYPES.rlpBinary)\n]\n\nconst ORACLES_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('otree', FIELD_TYPES.rlpBinary)\n]\n\nconst ACCOUNTS_TREE_TX = [\n  ...BASE_TX,\n  TX_FIELD('accounts', FIELD_TYPES.rlpBinary)\n]\n\nexport const TX_SERIALIZATION_SCHEMA = {\n  [TX_TYPE.account]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [TX_TYPE.signed]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [TX_TYPE.spend]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [TX_TYPE.namePreClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameClaim]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [TX_TYPE.nameUpdate]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [TX_TYPE.nameTransfer]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [TX_TYPE.nameRevoke]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [TX_TYPE.contract]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [TX_TYPE.contractCreate]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [TX_TYPE.contractCall]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [TX_TYPE.contractCallResult]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [TX_TYPE.oracleRegister]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [TX_TYPE.oracleExtend]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [TX_TYPE.oracleQuery]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [TX_TYPE.oracleResponse]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [TX_TYPE.channelCreate]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [TX_TYPE.channelCloseMutual]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [TX_TYPE.channelCloseSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [TX_TYPE.channelSlash]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [TX_TYPE.channelDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelWithdraw]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [TX_TYPE.channelSettle]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [TX_TYPE.channelOffChain]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [TX_TYPE.channel]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [TX_TYPE.channelSnapshotSolo]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateTransfer]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateDeposit]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [TX_TYPE.channelOffChainUpdateWithdrawal]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [TX_TYPE.channelOffChainCreateContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [TX_TYPE.channelOffChainCallContract]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [TX_TYPE.proofOfInclusion]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [TX_TYPE.stateTrees]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [TX_TYPE.merklePatriciaTree]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [TX_TYPE.merklePatriciaTreeValue]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [TX_TYPE.contractsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [TX_TYPE.contractCallsTree]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [TX_TYPE.channelsTree]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [TX_TYPE.nameserviceTree]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [TX_TYPE.oraclesTree]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [TX_TYPE.accountsTree]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [TX_TYPE.gaAttach]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [TX_TYPE.gaMeta]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  }\n}\n\nexport const TX_DESERIALIZATION_SCHEMA = {\n  [OBJECT_TAG_ACCOUNT]: {\n    1: TX_SCHEMA_FIELD(ACCOUNT_TX, OBJECT_TAG_ACCOUNT),\n    2: TX_SCHEMA_FIELD(ACCOUNT_TX_2, OBJECT_TAG_ACCOUNT)\n  },\n  [OBJECT_TAG_SIGNED_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SIGNED_TX, OBJECT_TAG_SIGNED_TRANSACTION)\n  },\n  [OBJECT_TAG_SPEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(SPEND_TX, OBJECT_TAG_SPEND_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_PRE_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_PRECLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_CLAIM_TX, OBJECT_TAG_NAME_SERVICE_CLAIM_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_UPDATE_TX, OBJECT_TAG_NAME_SERVICE_UPDATE_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_TRANSFER_TX, OBJECT_TAG_NAME_SERVICE_TRANSFER_TRANSACTION)\n  },\n  [OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(NAME_REVOKE_TX, OBJECT_TAG_NAME_SERVICE_REVOKE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_TX, OBJECT_TAG_CONTRACT)\n  },\n  [OBJECT_TAG_CONTRACT_CREATE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CREATE_TX, OBJECT_TAG_CONTRACT_CREATE_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_TX, OBJECT_TAG_CONTRACT_CALL_TRANSACTION)\n  },\n  [OBJECT_TAG_CONTRACT_CALL]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALL_RESULT_TX, OBJECT_TAG_CONTRACT_CALL)\n  },\n  [OBJECT_TAG_ORACLE_REGISTER_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_REGISTER_TX, OBJECT_TAG_ORACLE_REGISTER_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_EXTEND_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_EXTEND_TX, OBJECT_TAG_ORACLE_EXTEND_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_QUERY_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_QUERY_TX, OBJECT_TAG_ORACLE_QUERY_TRANSACTION)\n  },\n  [OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION]: {\n    1: TX_SCHEMA_FIELD(ORACLE_RESPOND_TX, OBJECT_TAG_ORACLE_RESPONSE_TRANSACTION)\n  },\n  [OBJECT_TAG_CHANNEL_CREATE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CREATE_TX, OBJECT_TAG_CHANNEL_CREATE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_MUTUAL_TX, OBJECT_TAG_CHANNEL_CLOSE_MUTUAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_CLOSE_SOLO_TX, OBJECT_TAG_CHANNEL_CLOSE_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SLASH_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SLASH_TX, OBJECT_TAG_CHANNEL_SLASH_TX)\n  },\n  [OBJECT_TAG_CHANNEL_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_DEPOSIT_TX, OBJECT_TAG_CHANNEL_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_WITHRAW_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_WITHDRAW_TX, OBJECT_TAG_CHANNEL_WITHRAW_TX)\n  },\n  [OBJECT_TAG_CHANNEL_SETTLE_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SETTLE_TX, OBJECT_TAG_CHANNEL_SETTLE_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_TX),\n    2: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_TX_2, OBJECT_TAG_CHANNEL_OFFCHAIN_TX)\n  },\n  [OBJECT_TAG_CHANNEL]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_TX, OBJECT_TAG_CHANNEL),\n    2: TX_SCHEMA_FIELD(CHANNEL_TX_2, OBJECT_TAG_CHANNEL)\n  },\n  [OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_SNAPSHOT_SOLO_TX, OBJECT_TAG_CHANNEL_SNAPSHOT_SOLO_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_TRANSFER_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_DEPOSIT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_UPDATE_WITHDRAWAL_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CREATE_CONTRACT_TX)\n  },\n  [OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX]: {\n    1: TX_SCHEMA_FIELD(CHANNEL_OFFCHAIN_CALL_CONTRACT_TX, OBJECT_TAG_CHANNEL_OFFCHAIN_CALL_CONTRACT_TX)\n  },\n  [OBJECT_TAG_PROOF_OF_INCLUSION]: {\n    1: TX_SCHEMA_FIELD(PROOF_OF_INCLUSION_TX, OBJECT_TAG_PROOF_OF_INCLUSION)\n  },\n  [OBJECT_TAG_STATE_TREES]: {\n    1: TX_SCHEMA_FIELD(STATE_TREES_TX, OBJECT_TAG_STATE_TREES)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE)\n  },\n  [OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE]: {\n    1: TX_SCHEMA_FIELD(MERKLE_PATRICIA_TREE_VALUE_TX, OBJECT_TAG_MERKLE_PATRICIA_TREE_VALUE)\n  },\n  [OBJECT_TAG_CONTRACTS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACTS_TREE_TX, OBJECT_TAG_CONTRACTS_TREE)\n  },\n  [OBJECT_TAG_CONTRACT_CALLS_TREE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_CALLS_TREE_TX, OBJECT_TAG_CONTRACT_CALLS_TREE)\n  },\n  [OBJECT_TAG_CHANNELS_TREE]: {\n    1: TX_SCHEMA_FIELD(CHANNELS_TREE_TX, OBJECT_TAG_CHANNELS_TREE)\n  },\n  [OBJECT_TAG_NAMESERVICE_TREE]: {\n    1: TX_SCHEMA_FIELD(NAMESERVICE_TREE_TX, OBJECT_TAG_NAMESERVICE_TREE)\n  },\n  [OBJECT_TAG_ORACLES_TREE]: {\n    1: TX_SCHEMA_FIELD(ORACLES_TREE_TX, OBJECT_TAG_ORACLES_TREE)\n  },\n  [OBJECT_TAG_ACCOUNTS_TREE]: {\n    1: TX_SCHEMA_FIELD(ACCOUNTS_TREE_TX, OBJECT_TAG_ACCOUNTS_TREE)\n  },\n  [OBJECT_TAG_GA_ATTACH]: {\n    1: TX_SCHEMA_FIELD(GA_ATTACH_TX, OBJECT_TAG_GA_ATTACH)\n  },\n  [OBJECT_TAG_GA_META]: {\n    1: TX_SCHEMA_FIELD(GA_META_TX, OBJECT_TAG_GA_META)\n  },\n  [OBJECT_TAG_SOPHIA_BYTE_CODE]: {\n    1: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_ROMA, OBJECT_TAG_SOPHIA_BYTE_CODE),\n    2: TX_SCHEMA_FIELD(CONTRACT_BYTE_CODE_MINERVA, OBJECT_TAG_SOPHIA_BYTE_CODE)\n  }\n}\n\n// VERIFICATION SCHEMA\n\nconst ERROR_TYPE = { ERROR: 'error', WARNING: 'warning' }\nconst VERIFICATION_FIELD = (msg, verificationFn, error) => [msg, verificationFn, error]\n\nconst VALIDATORS = {\n  signature: 'signature',\n  insufficientFee: 'insufficientFee',\n  expiredTTL: 'expiredTTL',\n  insufficientBalanceForAmountFee: 'insufficientBalanceForAmountFee',\n  insufficientBalanceForAmount: 'insufficientBalanceForAmount',\n  nonceUsed: 'nonceUsed',\n  nonceHigh: 'nonceHigh',\n  minGasPrice: 'minGasPrice',\n  vmAndAbiVersion: 'vmAndAbiVersion'\n}\n\nconst ERRORS = {\n  invalidSignature: { key: 'InvalidSignature', type: ERROR_TYPE.ERROR, txKey: 'signature' },\n  insufficientFee: { key: 'InsufficientFee', type: ERROR_TYPE.ERROR, txKey: 'fee' },\n  expiredTTL: { key: 'ExpiredTTL', type: ERROR_TYPE.ERROR, txKey: 'ttl' },\n  insufficientBalanceForAmountFee: { key: 'InsufficientBalanceForAmountFee', type: ERROR_TYPE.WARNING, txKey: 'fee' },\n  insufficientBalanceForAmount: { key: 'InsufficientBalanceForAmount', type: ERROR_TYPE.WARNING, txKey: 'amount' },\n  nonceUsed: { key: 'NonceUsed', type: ERROR_TYPE.ERROR, txKey: 'nonce' },\n  nonceHigh: { key: 'NonceHigh', type: ERROR_TYPE.WARNING, txKey: 'nonce' },\n  minGasPrice: { key: 'minGasPrice', type: ERROR_TYPE.ERROR, txKey: 'gasPrice' },\n  vmAndAbiVersion: { key: 'vmAndAbiVersion', type: ERROR_TYPE.ERROR, txKey: 'ctVersion' }\n}\n\nexport const SIGNATURE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    () => `The signature cannot be verified, please verify that you used the correct network id and the correct private key for the sender address`,\n    VALIDATORS.signature,\n    ERRORS.invalidSignature\n  )\n]\nexport const CONTRACT_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ ctVersion, consensusProtocolVersion, txType }) => `Wrong abi/vm version, Supported is: ${PROTOCOL_VM_ABI[consensusProtocolVersion] ? JSON.stringify(PROTOCOL_VM_ABI[consensusProtocolVersion][txType]) : ' None for this protocol ' + consensusProtocolVersion}`,\n    VALIDATORS.vmAndAbiVersion,\n    ERRORS.vmAndAbiVersion\n  ),\n  VERIFICATION_FIELD(\n    () => `The gasPrice must be bigger then ${MIN_GAS_PRICE}`,\n    VALIDATORS.minGasPrice,\n    ERRORS.minGasPrice\n  )\n]\nexport const BASE_VERIFICATION_SCHEMA = [\n  VERIFICATION_FIELD(\n    ({ minFee }) => `The fee for the transaction is too low, the minimum fee for this transaction is ${minFee}`,\n    VALIDATORS.insufficientFee,\n    ERRORS.insufficientFee\n  ),\n  VERIFICATION_FIELD(\n    ({ height }) => `The TTL is already expired, the current height is ${height}`,\n    VALIDATORS.expiredTTL,\n    ERRORS.expiredTTL\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmountFee,\n    ERRORS.insufficientBalanceForAmountFee\n  ),\n  VERIFICATION_FIELD(\n    ({ balance }) => `The account balance ${balance} is not enough to execute the transaction`,\n    VALIDATORS.insufficientBalanceForAmount,\n    ERRORS.insufficientBalanceForAmount\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is invalid(already used). Next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceUsed,\n    ERRORS.nonceUsed\n  ),\n  VERIFICATION_FIELD(\n    ({ accountNonce }) => `The nonce is technically valid but will not be processed immediately by the node (next valid nonce is ${accountNonce + 1})`,\n    VALIDATORS.nonceHigh,\n    ERRORS.nonceHigh\n  )\n]\n","import {\n  assertedType,\n  decodeBase58Check,\n  decodeBase64Check,\n  encodeBase58Check, encodeBase64Check,\n  hash,\n  nameId,\n  salt\n} from '../../utils/crypto'\nimport { toBytes } from '../../utils/bytes'\nimport { ID_TAG_PREFIX, PREFIX_ID_TAG } from './schema'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * JavaScript-based Transaction builder helper function's\n * @module @aeternity/aepp-sdk/es/tx/builder/helpers\n * @export TxBuilderHelper\n * @example import TxBuilderHelper from '@aeternity/aepp-sdk/es/tx/builder/helpers'\n */\n\nexport const createSalt = salt\n\nconst base64Types = ['tx', 'st', 'ss', 'pi', 'ov', 'or', 'cb', 'cs', 'ba']\n\n/**\n * Build a contract public key\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} ownerId The public key of the owner account\n * @param {number} nonce the nonce of the transaction\n * @return {string} Contract public key\n */\nexport function buildContractId (ownerId, nonce) {\n  const ownerIdAndNonce = Buffer.from([...decode(ownerId, 'ak'), ...toBytes(nonce)])\n  const b2bHash = hash(ownerIdAndNonce)\n  return encode(b2bHash, 'ct')\n}\n\n/**\n * Build hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} prefix Transaction hash prefix\n * @param {Buffer} data Rlp encoded transaction buffer\n * @return {String} Transaction hash\n */\nexport function buildHash (prefix, data) {\n  return encode(hash(data), prefix)\n}\n\n/**\n * Build a oracle query id\n * @function\n * @function* @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {String} senderId The public key of the sender account\n * @param {Number} nonce the nonce of the transaction\n * @param {Number} oracleId The oracle public key\n * @return {string} Contract public key\n */\nexport function oracleQueryId (senderId, nonce, oracleId) {\n  function _int32 (val) {\n    const nonceBE = toBytes(val, true)\n    return Buffer.concat([Buffer.alloc(32 - nonceBE.length), nonceBE])\n  }\n\n  const b2bHash = hash(Buffer.from([...decode(senderId, 'ak'), ..._int32(nonce), ...decode(oracleId, 'ok')]))\n  return encode(b2bHash, 'oq')\n}\n\n/**\n * Format the salt into a 64-byte hex string\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {number} salt\n * @return {string} Zero-padded hex string of salt\n */\nexport function formatSalt (salt) {\n  return Buffer.from(salt.toString(16).padStart(64, '0'), 'hex')\n}\n\n/**\n * Generate the commitment hash by hashing the formatted salt and\n * name, base 58 encoding the result and prepending 'cm_'\n *\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @function commitmentHash\n * @category async\n * @rtype (name: String, salt?: String) => hash: Promise[String]\n * @param {String} name - Name to be registered\n * @param {Number} salt Random salt\n * @return {String} Commitment hash\n */\nexport async function commitmentHash (name, salt = createSalt()) {\n  return `cm_${encodeBase58Check(hash(Buffer.concat([nameId(name), formatSalt(salt)])))}`\n}\n\n/**\n * Decode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} data  An encoded and prefixed string (ex tx_..., sg_..., ak_....)\n * @param {string} type Prefix of Transaction\n * @return {Buffer} Buffer of decoded Base58check or Base64check data\n */\nexport function decode (data, type) {\n  if (!type) type = data.split('_')[0]\n  return base64Types.includes(type)\n    ? decodeBase64Check(assertedType(data, type))\n    : decodeBase58Check(assertedType(data, type))\n}\n\n/**\n * Encode data using the default encoding/decoding algorithm\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer|String} data  An decoded data\n * @param {string} type Prefix of Transaction\n * @return {String} Encoded string Base58check or Base64check data\n */\nexport function encode (data, type) {\n  return `${type}_${base64Types.includes(type)\n    ? encodeBase64Check(data)\n    : encodeBase58Check(data)}`\n}\n\n/**\n * Utility function to create and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {string} hashId Encoded hash\n * @return {Buffer} Buffer Buffer with ID tag and decoded HASh\n */\nexport function writeId (hashId) {\n  const prefix = hashId.slice(0, 2)\n  const idTag = PREFIX_ID_TAG[prefix]\n  if (!idTag) throw new Error(`Id tag for prefix ${prefix} not found.`)\n  return Buffer.from([...toBytes(idTag), ...decode(hashId, prefix)])\n}\n\n/**\n * Utility function to read and _id type\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Data\n * @return {String} Encoided hash string with prefix\n */\nexport function readId (buf) {\n  const tag = buf.readUIntBE(0, 1)\n  const prefix = ID_TAG_PREFIX[tag]\n  if (!prefix) throw new Error(`Prefix for id-tag ${tag} not found.`)\n  return encode(buf.slice(1, buf.length), prefix)\n}\n\n/**\n * Utility function to convert int to bytes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Number|String|BigNumber} val Value\n * @return {Buffer} Buffer Buffer from number(BigEndian)\n */\nexport function writeInt (val) {\n  return toBytes(val, true)\n}\n\n/**\n * Utility function to convert bytes to int\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Buffer} buf Value\n * @return {String} Buffer Buffer from number(BigEndian)\n */\nexport function readInt (buf = Buffer.from([])) {\n  return BigNumber(buf.toString('hex'), 16).toString(10)\n}\n\n/**\n * Helper function to build pointers for name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Serialized pointers array\n */\nexport function buildPointers (pointers) {\n  return pointers.map(\n    p => [\n      toBytes(p['key']),\n      writeId(p['id'])\n    ]\n  )\n}\n\n/**\n * Helper function to read pointers from name update TX\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/helpers\n * @param {Array} pointers - Array of pointers ([ { key: 'account_pubkey', id: 'ak_32klj5j23k23j5423l434l2j3423'} ])\n * @return {Array} Deserialize pointer array\n */\nexport function readPointers (pointers) {\n  return pointers.map(\n    ([key, id]) => Object.assign({\n      key: key.toString(),\n      id: readId(id)\n    })\n  )\n}\n\nexport default {\n  readPointers,\n  buildPointers,\n  buildContractId,\n  readId,\n  writeId,\n  readInt,\n  writeInt,\n  encode,\n  decode,\n  commitmentHash,\n  formatSalt,\n  oracleQueryId,\n  createSalt,\n  buildHash\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Crypto module\n * @module @aeternity/aepp-sdk/es/utils/crypto\n * @example import * as Crypto from '@aeternity/aepp-sdk/es/utils/crypto'\n */\n\nimport bs58check from 'bs58check'\nimport * as RLP from 'rlp'\nimport { blake2b } from 'blakejs'\nimport nacl from 'tweetnacl'\nimport aesjs from 'aes-js'\nimport { leftPad, rightPad, toBytes } from './bytes'\nimport shajs from 'sha.js'\nimport { decode as decodeNode } from '../tx/builder/helpers'\n\nconst Ecb = aesjs.ModeOfOperation.ecb\n\n/**\n * Check whether a string is valid base-64.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid base-64, false otherwise.\n */\nexport function isBase64 (str) {\n  let index\n  // eslint-disable-next-line no-useless-escape\n  if (str.length % 4 > 0 || str.match(/[^0-9a-z+\\/=]/i)) return false\n  index = str.indexOf('=')\n  return !!(index === -1 || str.slice(index).match(/={1,2}/))\n}\n\nexport const ADDRESS_FORMAT = {\n  sophia: 1,\n  api: 2,\n  raw: 3\n}\n\n/**\n * Format account address\n * @rtype (format: String, address: String) => tx: Promise[String]\n * @param {String} format - Format type\n * @param {String} address - Base58check account address\n * @return {String} Formatted address\n */\nexport function formatAddress (format = ADDRESS_FORMAT.api, address) {\n  switch (format) {\n    case ADDRESS_FORMAT.api:\n      return address\n    case ADDRESS_FORMAT.sophia:\n      return `0x${decodeNode(address, 'ak').toString('hex')}`\n  }\n}\n\n/**\n * Check if address is valid\n * @rtype (input: String) => valid: Boolean\n * @param {String} address - Address\n * @return {Boolean} valid\n */\nexport function isAddressValid (address) {\n  let isValid\n  try {\n    isValid = decodeBase58Check(assertedType(address, 'ak')).length === 32\n  } catch (e) {\n    isValid = false\n  }\n  return isValid\n}\n\n/**\n * Convert base58Check address to hex string\n * @rtype (base58CheckAddress: String) => hexAddress: String\n * @param {String} base58CheckAddress - Address\n * @return {String} Hex string\n */\nexport function addressToHex (base58CheckAddress) {\n  return `0x${decodeBase58Check(assertedType(base58CheckAddress, 'ak')).toString('hex')}`\n}\n\n/**\n * Parse decimal address and return base58Check encoded address with prefix 'ak'\n * @rtype (input: String) => address: String\n * @param {String} decimalAddress - Address\n * @return {String} address\n */\nexport function addressFromDecimal (decimalAddress) {\n  return aeEncodeKey(toBytes(decimalAddress, true))\n}\n\n/**\n * Calculate 256bits Blake2b hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String|Buffer} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function hash (input) {\n  return Buffer.from(blake2b(input, null, 32)) // 256 bits\n}\n\n/**\n * Calculate 256bits Blake2b nameId of `input`\n * as defined in https://github.com/aeternity/protocol/blob/master/AENS.md#hashing\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {Buffer} Hash\n */\nexport function nameId (input) {\n  let buf = Buffer.allocUnsafe(32).fill(0)\n  if (!input) {\n    return buf\n  } else {\n    const labels = input.split('.')\n    for (let i = 0; i < labels.length; i++) {\n      buf = hash(Buffer.concat([buf, hash(labels[i])]))\n    }\n    return buf\n  }\n}\n\n/**\n * Calculate SHA256 hash of `input`\n * @rtype (input: String) => hash: String\n * @param {String} input - Data to hash\n * @return {String} Hash\n */\nexport function sha256hash (input) {\n  return shajs('sha256').update(input).digest()\n}\n\n/**\n * Generate a random salt (positive integer)\n * @rtype () => salt: Number\n * @return {Number} random salt\n */\nexport function salt () {\n  return Math.floor(Math.random() * Math.floor(Number.MAX_SAFE_INTEGER))\n}\n\n/**\n * Base64check encode given `input`\n * @rtype (input: String|buffer) => Buffer\n * @param {String} input - Data to encode\n * @return {Buffer} Base64check encoded data\n */\nexport function encodeBase64Check (input) {\n  const buffer = Buffer.from(input)\n  const checksum = checkSumFn(input)\n  const payloadWithChecksum = Buffer.concat([buffer, checksum], buffer.length + 4)\n  return payloadWithChecksum.toString('base64')\n}\n\nexport function checkSumFn (payload) {\n  return sha256hash(sha256hash(payload)).slice(0, 4)\n}\n\nfunction decodeRaw (buffer) {\n  const payload = buffer.slice(0, -4)\n  const checksum = buffer.slice(-4)\n  const newChecksum = checkSumFn(payload)\n\n  if (!checksum.equals(newChecksum)) return\n\n  return payload\n}\n\n/**\n * Base64check decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base64check decoded data\n */\nexport function decodeBase64Check (str) {\n  const buffer = Buffer.from(str, 'base64')\n  const payload = decodeRaw(buffer)\n  if (!payload) throw new Error('Invalid checksum')\n  return Buffer.from(payload)\n}\n\n/**\n * Base58 encode given `input`\n * @rtype (input: String) => String\n * @param {String} input - Data to encode\n * @return {String} Base58 encoded data\n */\nexport function encodeBase58Check (input) {\n  return bs58check.encode(Buffer.from(input))\n}\n\n/**\n * Base58 decode given `str`\n * @rtype (str: String) => Buffer\n * @param {String} str - Data to decode\n * @return {Buffer} Base58 decoded data\n */\nexport function decodeBase58Check (str) {\n  return bs58check.decode(str)\n}\n\n/**\n * Conver hex string to Uint8Array\n * @rtype (str: String) => Uint8Array\n * @param {String} str - Data to conver\n * @return {Uint8Array} - converted data\n */\nexport function hexStringToByte (str) {\n  if (!str) {\n    return new Uint8Array()\n  }\n\n  var a = []\n  for (var i = 0, len = str.length; i < len; i += 2) {\n    a.push(parseInt(str.substr(i, 2), 16))\n  }\n\n  return new Uint8Array(a)\n}\n\n/**\n * Converts a positive integer to the smallest possible\n * representation in a binary digit representation\n * @rtype (value: Number) => Buffer\n * @param {Number} value - Value to encode\n * @return {Buffer} - Encoded data\n */\nexport function encodeUnsigned (value) {\n  const binary = Buffer.allocUnsafe(4)\n  binary.writeUInt32BE(value)\n  return binary.slice(binary.findIndex(i => i !== 0))\n}\n\n/**\n * Compute contract address\n * @rtype (owner: String, nonce: Number) => String\n * @param {String} owner - Address of contract owner\n * @param {Number} nonce - Round when contract was created\n * @return {String} - Contract address\n */\nexport function encodeContractAddress (owner, nonce) {\n  const publicKey = decodeBase58Check(assertedType(owner, 'ak'))\n  const binary = Buffer.concat([publicKey, encodeUnsigned(nonce)])\n  return `ct_${encodeBase58Check(hash(binary))}`\n}\n\n// KEY-PAIR HELPERS\n\n/**\n * Generate keyPair from secret key\n * @rtype (secret: Uint8Array) => KeyPair\n * @param {Uint8Array} secret - secret key\n * @return {Object} - Object with Private(privateKey) and Public(publicKey) keys\n */\nexport function generateKeyPairFromSecret (secret) {\n  return nacl.sign.keyPair.fromSecretKey(secret)\n}\n\n/**\n * Generate a random ED25519 keypair\n * @rtype (raw: Boolean) => {publicKey: String, secretKey: String} | {publicKey: Buffer, secretKey: Buffer}\n * @param {Boolean} raw - Whether to return raw (binary) keys\n * @return {Object} Key pair\n */\nexport function generateKeyPair (raw = false) {\n  // <node>/apps/aens/test/aens_test_utils.erl\n  const keyPair = nacl.sign.keyPair()\n\n  const publicBuffer = Buffer.from(keyPair.publicKey)\n  const secretBuffer = Buffer.from(keyPair.secretKey)\n\n  if (raw) {\n    return {\n      publicKey: publicBuffer,\n      secretKey: secretBuffer\n    }\n  } else {\n    return {\n      publicKey: `ak_${encodeBase58Check(publicBuffer)}`,\n      secretKey: secretBuffer.toString('hex')\n    }\n  }\n}\n\n/**\n * Encrypt given public key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPublicKey (password, binaryKey) {\n  return encryptKey(password, rightPad(32, binaryKey))\n}\n\n/**\n * Encrypt given private key using `password`\n * @rtype (password: String, binaryKey: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryKey - Key to encrypt\n * @return {Uint8Array} Encrypted key\n */\nexport function encryptPrivateKey (password, binaryKey) {\n  return encryptKey(password, leftPad(64, binaryKey))\n}\n\n/**\n * Encrypt given data using `password`\n * @rtype (password: String, binaryData: Buffer) => Uint8Array\n * @param {String} password - Password to encrypt with\n * @param {Buffer} binaryData - Data to encrypt\n * @return {Uint8Array} Encrypted data\n */\nexport function encryptKey (password, binaryData) {\n  let hashedPasswordBytes = sha256hash(password)\n  let aesEcb = new Ecb(hashedPasswordBytes)\n  return aesEcb.encrypt(binaryData)\n}\n\n/**\n * Decrypt given data using `password`\n * @rtype (password: String, encrypted: String) => Uint8Array\n * @param {String} password - Password to decrypt with\n * @param {String} encrypted - Data to decrypt\n * @return {Buffer} Decrypted data\n */\nexport function decryptKey (password, encrypted) {\n  const encryptedBytes = Buffer.from(encrypted)\n  let hashedPasswordBytes = sha256hash(password)\n  let aesEcb = new Ecb(hashedPasswordBytes)\n  return Buffer.from(aesEcb.decrypt(encryptedBytes))\n}\n\n// SIGNATURES\n\n/**\n * Generate signature\n * @rtype (data: String|Buffer, privateKey: Buffer) => Buffer\n * @param {String|Buffer} data - Data to sign\n * @param {String|Buffer} privateKey - Key to sign with\n * @return {Buffer} Signature\n */\nexport function sign (data, privateKey) {\n  return nacl.sign.detached(Buffer.from(data), Buffer.from(privateKey))\n}\n\n/**\n * Verify that signature was signed by public key\n * @rtype (str: String, signature: Buffer, publicKey: Buffer) => Boolean\n * @param {String} str - Data to verify\n * @param {Buffer} signature - Signature to verify\n * @param {Buffer} publicKey - Key to verify against\n * @return {Boolean} Valid?\n */\nexport function verify (str, signature, publicKey) {\n  return nacl.sign.detached.verify(new Uint8Array(str), signature, publicKey)\n}\n\n/**\n * @typedef {Array} Transaction\n * @rtype Transaction: [tag: Buffer, version: Buffer, [signature: Buffer], data: Buffer]\n */\n\n/**\n * Prepare a transaction for posting to the blockchain\n * @rtype (signature: Buffer | String, data: Buffer) => Transaction\n * @param {Buffer} signature - Signature of `data`\n * @param {Buffer} data - Transaction data\n * @return {Transaction} Transaction\n */\nexport function prepareTx (signature, data) {\n  // the signed tx deserializer expects a 4-tuple:\n  // <tag, version, signatures_array, binary_tx>\n  return [Buffer.from([11]), Buffer.from([1]), [Buffer.from(signature)], data]\n}\n\nexport function personalMessageToBinary (message) {\n  const p = Buffer.from('æternity Signed Message:\\n', 'utf8')\n  const msg = Buffer.from(message, 'utf8')\n  if (msg.length >= 0xFD) throw new Error('message too long')\n  return Buffer.concat([Buffer.from([p.length]), p, Buffer.from([msg.length]), msg])\n}\n\nexport function signPersonalMessage (message, privateKey) {\n  return sign(personalMessageToBinary(message), privateKey)\n}\n\nexport function verifyPersonalMessage (str, signature, publicKey) {\n  return verify(personalMessageToBinary(str), signature, publicKey)\n}\n\n/**\n * æternity readable public keys are the base58-encoded public key, prepended\n * with 'ak_'\n * @rtype (binaryKey: Buffer) => String\n * @param {Buffer} binaryKey - Key to encode\n * @return {String} Encoded key\n */\nexport function aeEncodeKey (binaryKey) {\n  const publicKeyBuffer = Buffer.from(binaryKey, 'hex')\n  const pubKeyAddress = encodeBase58Check(publicKeyBuffer)\n  return `ak_${pubKeyAddress}`\n}\n\n/**\n * Generate a new key pair using {@link generateKeyPair} and encrypt it using `password`\n * @rtype (password: String) => {publicKey: Uint8Array, secretKey: Uint8Array}\n * @param {String} password - Password to encrypt with\n * @return {Object} Encrypted key pair\n */\nexport function generateSaveWallet (password) {\n  let keys = generateKeyPair(true)\n  return {\n    publicKey: encryptPublicKey(password, keys.publicKey),\n    secretKey: encryptPrivateKey(password, keys.secretKey)\n  }\n}\n\n/**\n * Decrypt an encrypted private key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPrivateKey (password, encrypted) {\n  return decryptKey(password, encrypted)\n}\n\n/**\n * Decrypt an encrypted public key\n * @rtype (password: String, encrypted: Buffer) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Buffer} Decrypted key\n */\nexport function decryptPubKey (password, encrypted) {\n  return decryptKey(password, encrypted).slice(0, 65)\n}\n\n/**\n * Assert base58 encoded type and return its payload\n * @rtype (data: String, type: String) => String, throws: Error\n * @param {String} data - ae data\n * @param {String} type - Prefix\n * @param forceError\n * @return {String|Boolean} Payload\n */\nexport function assertedType (data, type, forceError = false) {\n  if (RegExp(`^${type}_.+$`).test(data)) {\n    return data.split('_')[1]\n  } else {\n    if (!forceError) throw Error(`Data doesn't match expected type ${type}`)\n    return false\n  }\n}\n\n/**\n * Decode a transaction\n * @rtype (txHash: String) => Buffer\n * @param {String} password - Password to decrypt with\n * @return {Array} Decoded transaction\n */\nexport function decodeTx (txHash) {\n  return RLP.decode(Buffer.from(decodeBase64Check(assertedType(txHash, 'tx'))))\n}\n\n/**\n * Encode a transaction\n * @rtype (txData: Transaction) => String\n * @param {Transaction} txData - Transaction to encode\n * @return {String} Encoded transaction\n */\nexport function encodeTx (txData) {\n  const encodedTxData = RLP.encode(txData)\n  const encodedTx = encodeBase64Check(encodedTxData)\n  return `tx_${encodedTx}`\n}\n\n/**\n * Check key pair for validity\n *\n * Sign a message, and then verifying that signature\n * @rtype (privateKey: Buffer, publicKey: Buffer) => Boolean\n * @param {Buffer} privateKey - Private key to verify\n * @param {Buffer} publicKey - Public key to verify\n * @return {Boolean} Valid?\n */\nexport function isValidKeypair (privateKey, publicKey) {\n  const message = Buffer.from('TheMessage')\n  const signature = sign(message, privateKey)\n  return verify(message, signature, publicKey)\n}\n\n/**\n * Obtain key pair from `env`\n *\n * Designed to be used with `env` from nodejs. Assumes enviroment variables\n * `WALLET_PRIV` and `WALLET_PUB`.\n * @rtype (env: Object) => {publicKey: String, secretKey: String}, throws: Error\n * @param {Object} env - Environment\n * @return {Object} Key pair\n */\nexport function envKeypair (env, force = false) {\n  const keypair = {\n    secretKey: env['WALLET_PRIV'],\n    publicKey: env['WALLET_PUB']\n  }\n\n  if (keypair.publicKey && keypair.secretKey) {\n    return keypair\n  } else {\n    if (!force) throw Error('Environment variables WALLET_PRIV and WALLET_PUB need to be set')\n  }\n}\n\n/**\n * RLP decode\n * @rtype (data: Any) => Buffer[]\n * @param {Buffer|String|Integer|Array} data - Data to decode\n * @return {Array} Array of Buffers containing the original message\n */\nexport const decode = RLP.decode\nexport const encode = RLP.encode\nexport const rlp = RLP\n\nconst OBJECT_TAGS = {\n  SIGNED_TX: 11,\n  CHANNEL_CREATE_TX: 50,\n  CHANNEL_CLOSE_MUTUAL_TX: 53,\n  CHANNEL_OFFCHAIN_TX: 57,\n  CHANNEL_OFFCHAIN_UPDATE_TRANSFER: 570\n}\n\nfunction objectTag (tag, pretty) {\n  if (pretty) {\n    const entry = Object.entries(OBJECT_TAGS).find(([key, value]) => tag === value)\n    return entry ? entry[0] : tag\n  }\n  return tag\n}\n\nfunction readInt (buf) {\n  return buf.readIntBE(0, buf.length)\n}\n\nfunction readId (buf) {\n  const type = buf.readUIntBE(0, 1)\n  const prefix = {\n    1: 'ak',\n    2: 'nm',\n    3: 'cm',\n    4: 'ok',\n    5: 'ct',\n    6: 'ch'\n  }[type]\n  const hash = encodeBase58Check(buf.slice(1, buf.length))\n  return `${prefix}_${hash}`\n}\n\nfunction readSignatures (buf) {\n  const signatures = []\n\n  for (let i = 0; i < buf.length; i++) {\n    signatures.push(encodeBase58Check(buf[i]))\n  }\n\n  return signatures\n}\n\nfunction deserializeOffChainUpdate (binary, opts) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_UPDATE_TRANSFER:\n      return Object.assign(obj, {\n        from: readId(binary[2]),\n        to: readId(binary[3]),\n        amount: readInt(binary[4])\n      })\n  }\n\n  return obj\n}\n\nfunction readOffChainTXUpdates (buf, opts) {\n  const updates = []\n\n  for (let i = 0; i < buf.length; i++) {\n    updates.push(deserializeOffChainUpdate(decode(buf[i]), opts))\n  }\n\n  return updates\n}\n\n/**\n * Deserialize `binary` state channel transaction\n * @rtype (binary: String) => Object\n * @param {String} binary - Data to deserialize\n * @param {Object} opts - Options\n * @return {Object} Channel data\n */\nexport function deserialize (binary, opts = { prettyTags: false }) {\n  const tag = readInt(binary[0])\n  const obj = {\n    tag: objectTag(tag, opts.prettyTags),\n    version: readInt(binary[1])\n  }\n\n  switch (tag) {\n    case OBJECT_TAGS.SIGNED_TX:\n      return Object.assign(obj, {\n        signatures: readSignatures(binary[2]),\n        tx: deserialize(decode(binary[3]), opts)\n      })\n\n    case OBJECT_TAGS.CHANNEL_CREATE_TX:\n      return Object.assign(obj, {\n        initiator: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responder: readId(binary[4]),\n        responderAmount: readInt(binary[5]),\n        channelReserve: readInt(binary[6]),\n        lockPeriod: readInt(binary[7]),\n        ttl: readInt(binary[8]),\n        fee: readInt(binary[9])\n      })\n\n    case OBJECT_TAGS.CHANNEL_CLOSE_MUTUAL_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        initiatorAmount: readInt(binary[3]),\n        responderAmount: readInt(binary[4]),\n        ttl: readInt(binary[5]),\n        fee: readInt(binary[6]),\n        nonce: readInt(binary[7])\n      })\n\n    case OBJECT_TAGS.CHANNEL_OFFCHAIN_TX:\n      return Object.assign(obj, {\n        channelId: readId(binary[2]),\n        round: readInt(binary[3]),\n        updates: readOffChainTXUpdates(binary[4], opts),\n        state: encodeBase58Check(binary[5])\n      })\n  }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { rlp, hash } from './crypto'\n\nconst NODE_TYPES = {\n  branch: 1,\n  extension: 2,\n  leaf: 3\n}\n\nfunction nodeType (node) {\n  if (node.length === 17) {\n    return NODE_TYPES.branch\n  }\n  if (node.length === 2) {\n    const nibble = node[0].toString('hex')[0]\n    if (nibble === '0' || nibble === '1') {\n      return NODE_TYPES.extension\n    }\n    if (nibble === '2' || nibble === '3') {\n      return NODE_TYPES.leaf\n    }\n  }\n}\n\nfunction decodePath (path) {\n  if (path[0] === '0' || path[0] === '2') {\n    return path.slice(2)\n  }\n  if (path[0] === '1' || path[0] === '3') {\n    return path.slice(1)\n  }\n}\n\n/**\n * Deserialize Merkle Patricia Tree\n * @rtype (binary: Array) => Object\n * @param {Array} binary - Binary\n * @return {Object} Merkle Patricia Tree\n */\nexport function deserialize (binary) {\n  return {\n    rootHash: binary[0].toString('hex'),\n    nodes: binary[1].reduce((prev, node) => ({\n      ...prev,\n      [node[0].toString('hex')]: node[1]\n    }), {})\n  }\n}\n\n/**\n * Serialize Merkle Patricia Tree\n * @rtype (tree: Object) => Array\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Array} Binary\n */\nexport function serialize (tree) {\n  return [\n    Buffer.from(tree.rootHash, 'hex'),\n    Object.entries(tree.nodes).map(([mptHash, value]) => ([\n      Buffer.from(mptHash, 'hex'),\n      value\n    ]))\n  ]\n}\n\n/**\n * Retrieve value from Merkle Patricia Tree\n * @rtype (tree: Object, key: String) => Buffer\n * @param {Object} tree - Merkle Patricia Tree\n * @param {String} key - The key of the element to retrieve\n * @return {Buffer} Value associated to the specified key\n */\nexport function get (tree, key, hash) {\n  const node = hash ? tree.nodes[hash] : tree.nodes[tree.rootHash]\n  const type = nodeType(node)\n  if (type === NODE_TYPES.branch) {\n    if (key.length) {\n      const nextHash = node[parseInt(key[0], 16)].toString('hex')\n      return get(tree, key.substr(1), nextHash)\n    }\n    return node[16]\n  }\n  if (type === NODE_TYPES.extension) {\n    const path = decodePath(node[0].toString('hex'))\n    if (key.substr(0, path.length) === path) {\n      return get(tree, key.substr(path.length), node[1].toString('hex'))\n    }\n  }\n  if (type === NODE_TYPES.leaf) {\n    if (node[0].toString('hex').substr(1) === key) {\n      return node[1]\n    }\n  }\n}\n\nfunction nodeHash (node) {\n  return Buffer.from(hash(rlp.encode(node))).toString('hex')\n}\n\n/**\n * Verify if rootHash of Merkle Patricia Tree is correct\n * @rtype (tree: Object) => Boolean\n * @param {Object} tree - Merkle Patricia Tree\n * @return {Boolean} Boolean indicating whether or not rootHash is correct\n */\nexport function verify (tree, key, verified = []) {\n  const hash = key || tree.rootHash\n  if (verified.includes(hash)) {\n    return true\n  }\n  const node = tree.nodes[hash]\n  const type = nodeType(node)\n  if (nodeHash(node) !== hash) {\n    return false\n  }\n  verified.push(hash)\n  if (type === NODE_TYPES.branch) {\n    return !node.some((n, i) => {\n      const nextKey = n.toString('hex')\n      if (i < 16) {\n        return !verify(tree, nextKey, verified)\n      }\n      return false\n    })\n  }\n  if (type === NODE_TYPES.extension) {\n    return verify(tree, node[1].toString('hex'), verified)\n  }\n  return true\n}\n","/* eslint-disable curly */\nimport { BigNumber } from 'bignumber.js'\nimport { assertedType, rlp } from '../../utils/crypto'\n\nimport {\n  DEFAULT_FEE,\n  FIELD_TYPES,\n  OBJECT_ID_TX_TYPE,\n  PREFIX_ID_TAG,\n  TX_DESERIALIZATION_SCHEMA,\n  TX_FEE_BASE_GAS,\n  TX_FEE_OTHER_GAS,\n  TX_SERIALIZATION_SCHEMA,\n  VALIDATION_MESSAGE,\n  VSN\n} from './schema'\nimport { readInt, readId, readPointers, writeId, writeInt, buildPointers, encode, decode, buildHash } from './helpers'\nimport { toBytes } from '../../utils/bytes'\nimport * as mpt from '../../utils/mptree'\n\n/**\n * JavaScript-based Transaction builder\n * @module @aeternity/aepp-sdk/es/tx/builder\n * @export TxBuilder\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/builder'\n */\n\nconst ORACLE_TTL_TYPES = {\n  delta: 'delta',\n  block: 'block'\n}\n\n// SERIALIZE AND DESERIALIZE PART\nfunction deserializeField (value, type, prefix) {\n  if (!value) return ''\n  switch (type) {\n    case FIELD_TYPES.ctVersion:\n      // eslint-disable-next-line no-unused-vars\n      const [vm, _, abi] = value\n      return { vmVersion: readInt(Buffer.from([vm])), abiVersion: readInt(Buffer.from([abi])) }\n    case FIELD_TYPES.int:\n      return readInt(value)\n    case FIELD_TYPES.id:\n      return readId(value)\n    case FIELD_TYPES.ids:\n      return value.map(readId)\n    case FIELD_TYPES.bool:\n      return value[0] === 1\n    case FIELD_TYPES.binary:\n      return encode(value, prefix)\n    case FIELD_TYPES.string:\n      return value.toString()\n    case FIELD_TYPES.payload:\n      return encode(value, 'ba')\n    case FIELD_TYPES.pointers:\n      return readPointers(value)\n    case FIELD_TYPES.rlpBinary:\n      return unpackTx(value, true)\n    case FIELD_TYPES.rlpBinaries:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.rawBinary:\n      return value\n    case FIELD_TYPES.hex:\n      return value.toString('hex')\n    case FIELD_TYPES.offChainUpdates:\n      return value.map(v => unpackTx(v, true))\n    case FIELD_TYPES.callStack:\n      // TODO: fix this\n      return [readInt(value)]\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.deserialize)\n    case FIELD_TYPES.callReturnType:\n      switch (readInt(value)) {\n        case '0': return 'ok'\n        case '1': return 'error'\n        case '2': return 'revert'\n        default: return value\n      }\n    case FIELD_TYPES.sophiaCodeTypeInfo:\n      return value\n        .reduce(\n          (acc, [funHash, fnName, argType, outType]) =>\n            ({ ...acc, [fnName.toString()]: { funHash, argType, outType } }),\n          {}\n        )\n    default:\n      return value\n  }\n}\n\nfunction serializeField (value, type, prefix) {\n  switch (type) {\n    case FIELD_TYPES.int:\n      return writeInt(value)\n    case FIELD_TYPES.id:\n      return writeId(value)\n    case FIELD_TYPES.ids:\n      return value.map(writeId)\n    case FIELD_TYPES.bool:\n      return Buffer.from([value ? 1 : 0])\n    case FIELD_TYPES.binary:\n      return decode(value, prefix)\n    case FIELD_TYPES.hex:\n      return Buffer.from(value, 'hex')\n    case FIELD_TYPES.signatures:\n      return value.map(Buffer.from)\n    case FIELD_TYPES.payload:\n      return typeof value === 'string' && value.split('_')[0] === 'ba'\n        ? decode(value, 'ba')\n        : toBytes(value)\n    case FIELD_TYPES.string:\n      return toBytes(value)\n    case FIELD_TYPES.pointers:\n      return buildPointers(value)\n    case FIELD_TYPES.mptree:\n      return value.map(mpt.serialize)\n    case FIELD_TYPES.ctVersion:\n      return Buffer.from([...toBytes(value.vmVersion), 0, ...toBytes(value.abiVersion)])\n    case FIELD_TYPES.callReturnType:\n      switch (value) {\n        case 'ok': return writeInt(0)\n        case 'error': return writeInt(1)\n        case 'revert': return writeInt(2)\n        default: return value\n      }\n    default:\n      return value\n  }\n}\n\nfunction validateField (value, key, type, prefix) {\n  const assert = (valid, params) => valid ? {} : { [key]: VALIDATION_MESSAGE[type](params) }\n  // All fields are required\n  if (value === undefined || value === null) return { [key]: 'Field is required' }\n\n  // Validate type of value\n  switch (type) {\n    case FIELD_TYPES.int:\n      const isMinusValue = (!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).lt(0)\n      return assert((!isNaN(value) || BigNumber.isBigNumber(value)) && BigNumber(value).gte(0), { value, isMinusValue })\n    case FIELD_TYPES.id:\n      return assert(assertedType(value, prefix) && PREFIX_ID_TAG[value.split('_')[0]] && value.split('_')[0] === prefix, { value, prefix })\n    case FIELD_TYPES.binary:\n      return assert(value.split('_')[0] === prefix, { prefix, value })\n    case FIELD_TYPES.string:\n      return assert(true)\n    case FIELD_TYPES.ctVersion:\n      return assert(typeof value === 'object' && value.hasOwnProperty('abiVersion') && value.hasOwnProperty('vmVersion'))\n    case FIELD_TYPES.pointers:\n      return assert(Array.isArray(value) && !value.find(e => e !== Object(e)), { value })\n    default:\n      return {}\n  }\n}\n\nfunction transformParams (params) {\n  return Object\n    .entries(params)\n    .reduce(\n      (acc, [key, value]) => {\n        acc[key] = value\n        if (key === 'oracleTtl') acc = {\n          ...acc,\n          oracleTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          oracleTtlValue: value.value\n        }\n        if (key === 'queryTtl') acc = {\n          ...acc,\n          queryTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          queryTtlValue: value.value\n        }\n        if (key === 'responseTtl') acc = {\n          ...acc,\n          responseTtlType: value.type === ORACLE_TTL_TYPES.delta ? 0 : 1,\n          responseTtlValue: value.value\n        }\n        return acc\n      },\n      {}\n    )\n}\n\n// INTERFACE\n\nfunction getOracleRelativeTtl (params) {\n  // eslint-disable-next-line no-unused-vars\n  const [_, { value = 500 }] = Object.entries(params).find(([key]) => ['oracleTtl', 'queryTtl', 'responseTtl'].includes(key)) || ['', {}]\n  return value // TODO investigate this\n}\n\n/**\n * Calculate min fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder/index\n * @rtype (txType, { gas = 0, params }) => String\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateMinFee('spendTx', { gas, params })\n */\nexport function calculateMinFee (txType, { gas = 0, params }) {\n  const multiplier = BigNumber(1e9) // 10^9 GAS_PRICE\n  if (!params) return BigNumber(DEFAULT_FEE).times(multiplier).toString(10)\n\n  let actualFee = buildFee(txType, { params: { ...params, fee: 0 }, multiplier, gas })\n  let expected = BigNumber(0)\n\n  while (!actualFee.eq(expected)) {\n    actualFee = buildFee(txType, { params: { ...params, fee: actualFee }, multiplier, gas })\n    expected = actualFee\n  }\n  return expected.toString(10)\n}\n\n/**\n * Calculate fee based on tx type and params\n * @param txType\n * @param params\n * @param gas\n * @param multiplier\n * @return {BigNumber}\n */\nfunction buildFee (txType, { params, gas = 0, multiplier }) {\n  const { rlpEncoded: txWithOutFee } = buildTx({ ...params }, txType)\n  const txSize = txWithOutFee.length\n  return TX_FEE_BASE_GAS(txType)\n    .plus(TX_FEE_OTHER_GAS(txType)({ txSize, relativeTtl: getOracleRelativeTtl(params) }))\n    .times(multiplier)\n}\n\n/**\n * Calculate fee\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @rtype (fee, txType, gas = 0) => String\n * @param {String|Number} fee - fee\n * @param {String} txType - Transaction type\n * @param {Options} options - Options object\n * @param {String|Number} options.gas - Gas amount\n * @param {Object} options.params - Tx params\n * @return {String|Number}\n * @example calculateFee(null, 'spendTx', { gas, params })\n */\nexport function calculateFee (fee = 0, txType, { gas = 0, params, showWarning = true } = {}) {\n  if (!params && showWarning) console.warn(`Can't build transaction fee, we will use DEFAULT_FEE(${DEFAULT_FEE})`)\n\n  const minFee = calculateMinFee(txType, { params, gas })\n  if (fee && BigNumber(minFee).gt(BigNumber(fee)) && showWarning) console.warn(`Transaction fee is lower then min fee! Min fee: ${minFee}`)\n\n  return fee || minFee\n}\n\n/**\n * Validate transaction params\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Array} excludeKeys  Array of keys to exclude for validation\n * @return {Object} Object with validation errors\n */\nexport function validateParams (params, schema, { excludeKeys = [] }) {\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key) && key !== 'payload')\n    .reduce(\n      (acc, [key, type, prefix]) => Object.assign(acc, validateField(params[key], key, type, prefix)),\n      {}\n    )\n}\n\n/**\n * Build binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {Array} schema Transaction schema\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @throws {Error} Validation error\n * @return {Array} Array with binary fields of transaction\n */\nexport function buildRawTx (params, schema, { excludeKeys = [] } = {}) {\n  // Transform params(reason is for do not break current interface of `tx`)\n  params = transformParams(params)\n  // Validation\n  const valid = validateParams(params, schema, { excludeKeys })\n  if (Object.keys(valid).length) {\n    throw new Error('Transaction build error. ' + JSON.stringify(valid))\n  }\n\n  return schema\n    .filter(([key]) => !excludeKeys.includes(key))\n    .map(([key, fieldType, prefix]) => serializeField(params[key], fieldType, prefix))\n}\n\n/**\n * Unpack binary transaction\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Array} binary Array with binary transaction field's\n * @param {Array} schema Transaction schema\n * @return {Object} Object with transaction field's\n */\nexport function unpackRawTx (binary, schema) {\n  return schema\n    .reduce(\n      (\n        acc,\n        [key, fieldType, prefix],\n        index\n      ) => Object.assign(acc, { [key]: deserializeField(binary[index], fieldType, prefix) }),\n      {}\n    )\n}\n\n/**\n * Build transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {Object} params Object with tx params\n * @param {String} type Transaction type\n * @param {Object} [options={}] options\n * @param {Object} [options.excludeKeys] excludeKeys Array of keys to exclude for validation and build\n * @param {String} [options.prefix] Prefix of transaction\n * @throws {Error} Validation error\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Base64Check transaction hash with 'tx_' prefix, rlp encoded transaction and binary transaction\n */\nexport function buildTx (params, type, { excludeKeys = [], prefix = 'tx' } = {}) {\n  if (!TX_SERIALIZATION_SCHEMA[type]) {\n    throw new Error('Transaction serialization not implemented for ' + type)\n  }\n  if (!TX_SERIALIZATION_SCHEMA[type][VSN]) {\n    throw new Error('Transaction serialization not implemented for ' + type + ' version ' + VSN)\n  }\n  const [schema, tag] = TX_SERIALIZATION_SCHEMA[type][VSN]\n  const binary = buildRawTx({ ...params, VSN, tag }, schema, { excludeKeys }).filter(e => e !== undefined)\n\n  const rlpEncoded = rlp.encode(binary)\n  const tx = encode(rlpEncoded, prefix)\n\n  return { tx, rlpEncoded, binary, txObject: unpackRawTx(binary, schema) }\n}\n\n/**\n * Unpack transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String|Array} encodedTx String or RLP encoded transaction array (if fromRlpBinary flag is true)\n * @param {Boolean} fromRlpBinary Unpack from RLP encoded transaction (default: false)\n * @param {String} prefix - Prefix of data\n * @return {Object} { tx, rlpEncoded, binary } Object with tx -> Object with transaction param's, rlp encoded transaction and binary transaction\n */\nexport function unpackTx (encodedTx, fromRlpBinary = false, prefix = 'tx') {\n  const rlpEncoded = fromRlpBinary ? encodedTx : decode(encodedTx, prefix)\n  const binary = rlp.decode(rlpEncoded)\n\n  const objId = readInt(binary[0])\n  if (!TX_DESERIALIZATION_SCHEMA[objId]) {\n    return { message: 'Transaction deserialization not implemented for tag ' + objId }\n  }\n  const vsn = readInt(binary[1])\n  if (!TX_DESERIALIZATION_SCHEMA[objId][vsn]) {\n    return { message: 'Transaction deserialization not implemented for tag ' + objId + ' version ' + vsn }\n  }\n  const [schema] = TX_DESERIALIZATION_SCHEMA[objId][vsn]\n\n  return { txType: OBJECT_ID_TX_TYPE[objId], tx: unpackRawTx(binary, schema), rlpEncoded, binary }\n}\n\n/**\n * Build a transaction hash\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/builder\n * @param {String | Buffer} rawTx base64 or rlp encoded transaction\n * @return {String} Transaction hash\n */\nexport function buildTxHash (rawTx) {\n  if (typeof rawTx === 'string' && rawTx.indexOf('tx_') !== -1) return buildHash('th', unpackTx(rawTx).rlpEncoded)\n  return buildHash('th', rawTx)\n}\n\nexport default { calculateMinFee, calculateFee, unpackTx, unpackRawTx, buildTx, buildRawTx, validateParams, buildTxHash }\n","import nacl from 'tweetnacl'\nimport { full as hmac } from 'tweetnacl-auth'\nimport { fromString } from 'bip32-path'\nimport { validateMnemonic, mnemonicToSeed, generateMnemonic as genMnemonic } from '@aeternity/bip39'\nimport { decryptKey, encodeBase58Check, encryptKey } from './crypto'\n\nconst ED25519_CURVE = Buffer.from('ed25519 seed')\nconst HARDENED_OFFSET = 0x80000000\n\nconst toHex = (buffer) => Buffer.from(buffer).toString('hex')\n\nexport function derivePathFromKey (path, key) {\n  const segments = path === '' ? [] : fromString(path).toPathArray()\n  segments.forEach((segment, i) => {\n    if (segment < HARDENED_OFFSET) {\n      throw new Error(`Segment #${i + 1} is not hardened`)\n    }\n  })\n\n  return segments.reduce((parentKey, segment) => deriveChild(parentKey, segment), key)\n}\n\nexport function derivePathFromSeed (path, seed) {\n  if (!['m', 'm/'].includes(path.slice(0, 2))) {\n    throw new Error('Invalid path')\n  }\n  const masterKey = getMasterKeyFromSeed(seed)\n  return derivePathFromKey(path.slice(2), masterKey)\n}\n\nfunction formatAccount (keys) {\n  const { secretKey, publicKey } = keys\n  return {\n    secretKey: toHex(secretKey),\n    publicKey: `ak_${encodeBase58Check(publicKey)}`\n  }\n}\n\nexport function getKeyPair (secretKey) {\n  return nacl.sign.keyPair.fromSeed(secretKey)\n}\n\nexport function generateMnemonic () {\n  return genMnemonic()\n}\n\nexport function getMasterKeyFromSeed (seed) {\n  const I = hmac(seed, ED25519_CURVE)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function deriveChild ({ secretKey, chainCode }, index) {\n  if (index < HARDENED_OFFSET) {\n    throw new Error(`Child index #${index} is not supported`)\n  }\n  const indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  const data = Buffer.concat([Buffer.alloc(1, 0), secretKey, indexBuffer])\n\n  const I = hmac(data, chainCode)\n  const IL = I.slice(0, 32)\n  const IR = I.slice(32)\n  return {\n    secretKey: IL,\n    chainCode: IR\n  }\n}\n\nexport function generateSaveHDWallet (mnemonic, password) {\n  if (!validateMnemonic(mnemonic)) {\n    throw new Error('Invalid mnemonic')\n  }\n  const seed = mnemonicToSeed(mnemonic)\n  const walletKey = derivePathFromSeed('m/44h/457h', seed)\n  return {\n    secretKey: toHex(encryptKey(password, walletKey.secretKey)),\n    chainCode: toHex(encryptKey(password, walletKey.chainCode))\n  }\n}\n\nexport function getSaveHDWalletAccounts (saveHDWallet, password, accountCount) {\n  const walletKey = {\n    secretKey: decryptKey(password, Buffer.from(saveHDWallet.secretKey, 'hex')),\n    chainCode: decryptKey(password, Buffer.from(saveHDWallet.chainCode, 'hex'))\n  }\n  return (new Array(accountCount)).fill()\n    .map((_, idx) =>\n      formatAccount(getKeyPair(derivePathFromKey(`${idx}h/0h/0h`, walletKey).secretKey)))\n}\n\nexport default {\n  getSaveHDWalletAccounts,\n  generateSaveHDWallet,\n  generateMnemonic,\n  deriveChild,\n  getMasterKeyFromSeed\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Tx module\n * @module @aeternity/aepp-sdk/es/tx\n * @export Tx\n * @example import Tx from '@aeternity/aepp-sdk/es/tx'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Tx Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Tx is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides methods to\n * create aeternity transactions.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Tx instance\n * @example Tx()\n */\nconst Tx = stampit({\n  deepConf: {\n    Ae: {\n      methods: [\n        'spendTx', 'namePreclaimTx', 'nameClaimTx', 'nameTransferTx',\n        'nameUpdateTx', 'nameRevokeTx', 'contractCreateTx', 'contractCallTx',\n        'oracleRegisterTx', 'oracleExtendTx', 'oraclePostQueryTx', 'oracleRespondTx', 'getAccountNonce',\n        'channelCloseSoloTx', 'channelSlashTx', 'channelSettleTx', 'channelSnapshotSoloTx', 'getVmVersion', 'prepareTxParams'\n        // Todo Enable GA\n        // 'gaAttachTx',\n      ]\n    }\n  }\n}, required({\n  methods: {\n    spendTx: required,\n    namePreclaimTx: required,\n    nameClaimTx: required,\n    nameTransferTx: required,\n    nameUpdateTx: required,\n    nameRevokeTx: required,\n    contractCreateTx: required,\n    contractCallTx: required,\n    oracleRegisterTx: required,\n    oracleExtendTx: required,\n    oraclePostQueryTx: required,\n    oracleRespondTx: required,\n    getAccountNonce: required,\n    channelCloseSoloTx: required,\n    channelSlashTx: required,\n    channelSettleTx: required,\n    channelSnapshotSoloTx: required,\n    // Todo Enable GA\n    // gaAttachTx: required,\n    getVmVersion: required,\n    prepareTxParams: required\n  }\n}))\n\n/**\n * Create a `spend_tx` transaction\n * @function spendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({sender?: String, recipientId: String, amount: Number, fee?: Number, ttl?: Number, nonce?: Number, payload?: String}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `spend_tx` transaction\n */\n\n/**\n * Create a `name_preclaim_tx` transaction\n * @function namePreclaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, commitment: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_preclaim_tx` transaction\n */\n\n/**\n * Create a `name_claim_tx` transaction\n * @function nameClaimTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, name: String, nameSalt: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_claim_tx` transaction\n */\n\n/**\n * Create a `name_transfer_tx` transaction\n * @function nameTransferTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, recipientId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_transfer_tx` transaction\n */\n\n/**\n * Create a `name_update_tx` transaction\n * @function nameUpdateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, pointers: Object, nameTtl: Number, clientTtl: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_update_tx` transaction\n */\n\n/**\n * Create a `name_revoke_tx` transaction\n * @function nameRevokeTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({account?: String, nameId: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `name_revoke_tx` transaction\n */\n\n/**\n * Create a `contract_create_tx` transaction\n * @function contractCreateTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({owner: String, code: String, callData: String, vmVersion: Number, deposit: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_create_tx` transaction\n */\n\n/**\n * Create a `contract_call_tx` transaction\n * @function contractCallTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({callerId: String, contract: String, callData: String, vmVersion: Number, amount: Number, gas: Number, gasPrice: Number, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `contract_call_tx` transaction\n */\n\n/**\n * Create a `oracle_register_tx` transaction\n * @function oracleRegisterTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ accountId: String, queryFormat: String, responseFormat: String, queryFee: String|Number, oracleTtl: Object, vmVersion: Number = ORACLE_VM_VERSION, fee?: Number, ttl?: Number, nonce?: Number }) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_register_tx` transaction\n */\n\n/**\n * Create a `oracle_extend_tx` transaction\n * @function oracleExtendTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, oracleTtl: Object, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_extend_tx` transaction\n */\n\n/**\n * Create a `oracle_post_query_tx` transaction\n * @function oraclePostQuery\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, responseTtl: Object, query: String, queryTtl: Object, queryFee: String|Number, senderId: String, fee?: Number, ttl: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_post_query_tx` transaction\n */\n\n/**\n * Create a `oracle_respond_tx` transaction\n * @function oracleRespondTx\n * @instance\n * @abstract\n * @category async\n * @rtype ({ oracleId: String, callerId: String, responseTtl: Object, queryId: String, response: String, fee?: Number, ttl?: Number, nonce?: Number}) => tx: Promise[String]\n * @param {Object} options - The object to extract properties from\n * @return {String} `oracle_respond_tx` transaction\n */\n\n/**\n * Get Account Nonce\n * @function getAccountNonce\n * @instance\n * @abstract\n * @category async\n * @rtype (address) => result: Number\n * @param {String} address - Account public key\n * @return {Number} Result\n */\n\nexport default Tx\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle Base module\n * @module @aeternity/aepp-sdk/es/oracle\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/oracle'\n */\n\nimport { required } from '@stamp/required'\nimport stampit from '@stamp/it'\n\n/**\n * Basic Oracle Stamp\n *\n * This stamp include api call's related to oracle functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst OracleBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'getOracle',\n        'getOracleQueries',\n        'getOracleQuery'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    getOracle: required,\n    getOracleQueries: required,\n    getOracleQuery: required\n  }\n}))\n\n/**\n * Get oracle by oracle public key\n * @function getOracle\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracle: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @return {Object} - Oracle object\n */\n\n/**\n * Get oracle queries\n * @function getOracleQueries\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String) => oracleQueries: Promise[Object]\n * @param {String} oracleId- Oracle public key\n * @return {Object} - Oracle queries\n */\n\n/**\n * Get oracle query\n * @function getOracleQuery\n * @instance\n * @abstract\n * @category async\n * @rtype (oracleId: String, queryId: String) => oracleQuery: Promise[Object]\n * @param {String} oracleId - Oracle public key\n * @param {String} queryId - Query id\n * @return {Object} - Oracle query object\n */\n\nexport default OracleBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Chain module\n * @module @aeternity/aepp-sdk/es/chain\n * @export Chain\n * @example import Chain from '@aeternity/aepp-sdk/es/chain'\n */\n\nimport Oracle from '../oracle'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Chain Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Chain instance\n */\nconst Chain = Oracle.compose({\n  deepProps: { Chain: { defaults: { waitMined: true } } },\n  statics: { waitMined (bool) { return this.deepProps({ Chain: { defaults: { waitMined: bool } } }) } },\n  deepConf: {\n    Ae: {\n      methods: [\n        'sendTransaction', 'height', 'awaitHeight', 'poll', 'balance', 'tx',\n        'mempool', 'topBlock', 'getTxInfo', 'txDryRun', 'getName', 'getNodeInfo', 'getAccount'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    sendTransaction: required,\n    height: required,\n    awaitHeight: required,\n    topBlock: required,\n    poll: required,\n    balance: required,\n    tx: required,\n    getTxInfo: required,\n    mempool: required,\n    txDryRun: required,\n    getAccount: required\n  }\n}))\n\n/**\n * Reconfigure Stamp to (not) wait until transactions are mined\n * @function waitMined\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to wait for transactions\n * @return {Stamp} Reconfigured Chain Stamp\n */\n\n/**\n * Submit a signed transaction for mining\n * @function sendTransaction\n * @instance\n * @abstract\n * @category async\n * @rtype (tx: String, options?: Object) => tx: Promise[Object]|txHash: Promise[String]\n * @param {String} tx - Transaction to submit\n * @param {String} [options={}] - Options to pass to the implementation\n * @param {String} [options.verify = false] - Verify transaction before broadcast.\n * @return {Object|String} Transaction or transaction hash\n */\n\n/**\n * Obtain current height of the chain\n * @function height\n * @instance\n * @abstract\n * @category async\n * @rtype () => height: Number\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for the chain to reach a specific height\n * @function awaitHeight\n * @instance\n * @abstract\n * @category async\n * @rtype (height: Number, options?: Object) => height: Number\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.attempts - Number of polling attempts after which to fail\n * @return {Number} Current chain height\n */\n\n/**\n * Wait for a transaction to be mined\n * @function poll\n * @instance\n * @abstract\n * @category async\n * @rtype (th: String, options?: Object) => tx: Object\n * @param {Object} [options={}] - Options\n * @param {Number} options.interval - Interval (in ms) at which to poll the chain\n * @param {Number} options.blocks - Number of blocks mined after which to fail\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Request the balance of specified account\n * @function balance\n * @instance\n * @abstract\n * @category async\n * @rtype (address: String, options?: Object) => balance: Number\n * @param {String} address - The public account address to obtain the balance for\n * @param {Object} [options={}] - Options\n * @param {Number} options.height - The chain height at which to obtain the balance for (default: top of chain)\n * @param {String} options.hash - The block hash on which to obtain the balance for (default: top of chain)\n * @return {Object} The transaction as it was mined\n */\n\n/**\n * Obtain a transaction based on its hash\n * @function tx\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String, info = false) => tx: Object\n * @param {String} hash - Transaction hash\n * @param {Boolean} info - Retrieve additional transaction date. Works only for (ContractCreate and ContractCall transaction's)\n * @return {Object} Transaction\n */\n\n/**\n * Obtain a transaction info based on its hash\n * @function getTxInfo\n * @instance\n * @abstract\n * @category async\n * @rtype (hash: String) => tx: Object\n * @param {String} hash - Transaction hash\n * @return {Object} Transaction\n */\n\n/**\n * Obtain transaction's from mempool\n * @function mempool\n * @instance\n * @abstract\n * @category async\n * @rtype () => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Obtain current generation\n * @function getCurrentGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype () => generation: Object\n * @return {Object} Current Generation\n */\n\n/**\n * Get generation by hash or height\n * @function getGeneration\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => generation: Object\n * @param {String|Number} hashOrHeight - Generation hash or height\n * @return {Object} Generation\n */\n\n/**\n * Get micro block transactions\n * @function getMicroBlockTransactions\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => txs: [...Object]\n * @return {Object[]} Transactions\n */\n\n/**\n * Get key block\n * @function getKeyBlock\n * @instance\n * @abstract\n * @category async\n * @rtype (hashOrHeight) => keyBlock: Object\n * @return {Object} Key Block\n */\n\n/**\n * Get micro block header\n * @function getMicroBlockHeader\n * @instance\n * @abstract\n * @category async\n * @rtype (hash) => header: Object\n * @return {Object} Micro block header\n */\n\n/**\n * Get account by account public key\n * @function getAccount\n * @instance\n * @abstract\n * @category async\n * @rtype (address, { hash, height }) => account: Object\n * @param {String} address - Account public key\n * @param {Object} [options={}] - Options\n * @param {Number} [options.height] - Get account on specific block by block height\n * @param {String} [options.hash] - Get account on specific block by block hash\n * @return {Object} Account\n */\n\n/**\n * Transaction dry-run\n * @function txDryRun\n * @instance\n * @abstract\n * @category async\n * @rtype (txs, accounts, hashOrHeight) => result: Object\n * @param {Array} txs - Array of transaction's\n * @param {Array} accounts - Array of account's\n * @param {String|Number} hashOrHeight - hash or height of block on which to make dry-run\n * @return {Object} Result\n */\n\n/**\n * Get Node Info\n * @function getInfo\n * @instance\n * @abstract\n * @category async\n * @rtype () => result: Object\n * @return {Object} Result\n */\n\nexport default Chain\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Account module\n * @module @aeternity/aepp-sdk/es/account\n * @export Account\n * @example import Account from '@aeternity/aepp-sdk/es/account'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\nimport * as Crypto from '../utils/crypto'\nimport { buildTx } from '../tx/builder'\nimport { TX_TYPE } from '../tx/builder/schema'\n\nconst DEFAULT_NETWORK_ID = `ae_mainnet`\n\n/**\n * Sign encoded transaction\n * @instance\n * @category async\n * @rtype (tx: String) => tx: Promise[String], throws: Error\n * @param {String} tx - Transaction to sign\n * @param {Object} opt - Options\n * @return {String} Signed transaction\n */\nasync function signTransaction (tx, opt = {}) {\n  const networkId = this.getNetworkId()\n  const rlpBinaryTx = Crypto.decodeBase64Check(Crypto.assertedType(tx, 'tx'))\n  // Prepend `NETWORK_ID` to begin of data binary\n  const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpBinaryTx])\n\n  const signatures = [await this.sign(txWithNetworkId, opt)]\n  return buildTx({ encodedTx: rlpBinaryTx, signatures }, TX_TYPE.signed).tx\n}\n\n/**\n * Obtain networkId for signing\n * @instance\n * @category async\n * @rtype () => networkId: String\n * @return {String} NetworkId\n */\nfunction getNetworkId () {\n  return this.networkId || (this.selectedNode ? this.selectedNode.networkId : false) || DEFAULT_NETWORK_ID\n}\n\n/**\n * Basic Account Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Account is one of the three basic building blocks of an\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} client and provides access to a\n * signing key pair.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.networkId - NETWORK_ID using for signing transaction's\n * @return {Object} Account instance\n */\nconst Account = stampit({\n  init ({ networkId }) { // NETWORK_ID using for signing transaction's\n    if (!this.networkId && networkId) {\n      this.networkId = networkId\n    }\n  },\n  methods: { signTransaction, getNetworkId },\n  deepConf: {\n    Ae: {\n      methods: ['sign', 'address', 'signTransaction', 'getNetworkId']\n    }\n  }\n}, required({ methods: {\n  sign: required,\n  address: required\n} }))\n\n/**\n * Sign data blob\n * @function sign\n * @instance\n * @abstract\n * @category async\n * @rtype (data: String) => data: Promise[String]\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\n\n/**\n * Obtain account address\n * @function address\n * @instance\n * @abstract\n * @category async\n * @rtype () => address: Promise[String]\n * @return {String} Public account address\n */\n\nexport default Account\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Ae module\n * @module @aeternity/aepp-sdk/es/ae\n * @export Ae\n * @example import Ae from '@aeternity/aepp-sdk/es/ae'\n */\n\nimport stampit from '@stamp/it'\nimport Tx from '../tx'\nimport Chain from '../chain'\nimport Account from '../account'\nimport TxBuilder from '../tx/builder'\nimport * as R from 'ramda'\nimport { BigNumber } from 'bignumber.js'\n\n/**\n * Sign and post a transaction to the chain\n * @instance\n * @category async\n * @rtype (tx: String, options: Object) => Promise[String]\n * @param {String} tx - Transaction\n * @param {Object} [options={}] options - Options\n * @param {Object} [options.verify] verify - Verify transaction before broadcast, throw error if not valid\n * @return {String|String} Transaction or transaction hash\n */\nasync function send (tx, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  // Todo Enable GA\n  // const { contractId: gaId, authFun } = await this.getAccount(await this.address(opt))\n  // const signed = gaId\n  //   ? await this.signUsingGA(tx, { ...opt, authFun })\n  const signed = await this.signTransaction(tx, opt)\n  return this.sendTransaction(signed, opt)\n}\n\n// Todo Enable GA\n// eslint-disable-next-line no-unused-vars\nasync function signUsingGA (tx, options = {}) {\n  const { authData, authFun } = options\n  return this.createMetaTx(tx, authData, authFun, options)\n}\n\n/**\n * Send tokens to another account\n * @instance\n * @category async\n * @rtype (amount: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} amount - Amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function spend (amount, recipientId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(opt), recipientId, amount: amount }))\n  return this.send(spendTx, opt)\n}\n\n/**\n * Send a percentage of funds to another account\n * @instance\n * @category async\n * @rtype (percentage: Number|String, recipientId: String, options?: Object) => Promise[String]\n * @param {Number|String} percentage - Percentage of amount to spend\n * @param {String} recipientId - Address of recipient account\n * @param {Object} options - Options\n * @return {String|String} Transaction or transaction hash\n */\nasync function transferFunds (percentage, recipientId, options = { excludeFee: false }) {\n  if (percentage < 0 || percentage > 1) throw new Error(`Percentage should be a number between 0 and 1, got ${percentage}`)\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const requestTransferAmount = BigNumber(await this.balance(await this.address())).times(percentage)\n  let spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount: requestTransferAmount }))\n\n  const { tx: txObject } = TxBuilder.unpackTx(spendTx)\n  // If the requestTransferAmount should include the fee keep calculating the fee\n  let amount = requestTransferAmount\n  if (!options.excludeFee) {\n    while (amount.plus(txObject.fee).gt(requestTransferAmount)) {\n      amount = requestTransferAmount.minus(txObject.fee)\n    }\n  }\n\n  // Rebuild tx\n  spendTx = await this.spendTx(R.merge(opt, { senderId: await this.address(), recipientId, amount }))\n\n  return this.send(spendTx, opt)\n}\n\n/**\n * Remove all listeners for RPC\n * @instance\n * @return {void}\n */\nfunction destroyInstance () {\n  const destroyMethods = ['destroyClient', 'destroyServer'] // Array with destroy function's\n  destroyMethods.forEach(m => this[m] && typeof this[m] === 'function' && this[m]())\n}\n\n/**\n * Basic Ae Stamp\n *\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n *\n * Ae objects are the composition of three basic building blocks:\n * * {@link module:@aeternity/aepp-sdk/es/tx--Tx}\n * * {@link module:@aeternity/aepp-sdk/es/account--Account}\n * * {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * Only by providing the joint functionality of those three, most more advanced\n * operations, i.e. the ones with actual use value on the chain, become\n * available.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Ae instance\n */\nconst Ae = stampit(Tx, Account, Chain, {\n  methods: { send, spend, transferFunds, destroyInstance },\n  deepProps: { Ae: { defaults: {} } }\n  // Todo Enable GA\n  // deepConfiguration: { Ae: { methods: ['signUsingGA'] } }\n})\n\nexport default Ae\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * OracleNodeAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/oracle}.\n * @module @aeternity/aepp-sdk/es/oracle/node\n * @export OracleNodeAPI\n * @example import OracleNodeAPI from '@aeternity/aepp-sdk/es/oracle/node'\n */\n\nimport OracleBase from './'\n\nasync function getOracle (oracleId) {\n  return this.api.getOracleByPubkey(oracleId)\n}\n\nasync function getOracleQueries (oracleId) {\n  return this.api.getOracleQueriesByPubkey(oracleId)\n}\n\nasync function getOracleQuery (oracleId, queryId) {\n  return this.api.getOracleQueryByPubkeyAndQueryId(oracleId, queryId)\n}\n\nconst OracleNodeAPI = OracleBase.compose({\n  methods: {\n    getOracle,\n    getOracleQueries,\n    getOracleQuery\n  }\n})\n\nexport default OracleNodeAPI\n","import { BigNumber } from 'bignumber.js'\n\nconst prefixes = [\n  { name: 'exa', magnitude: 18 },\n  { name: 'giga', magnitude: 9 },\n  { name: '', magnitude: 0 },\n  { name: 'pico', magnitude: -12 }\n]\n\nconst getNearestPrefix = exponent => prefixes.reduce((p, n) => (\n  Math.abs(n.magnitude - exponent) < Math.abs(p.magnitude - exponent) ? n : p))\n\nconst getLowerBoundPrefix = exponent => prefixes\n  .find(p => p.magnitude <= exponent) || prefixes[prefixes.length - 1]\n\nexport default (value) => {\n  if (!BigNumber.isBigNumber(value)) value = BigNumber(value)\n\n  const { name, magnitude } = (value.e < 0 ? getNearestPrefix : getLowerBoundPrefix)(value.e)\n  const v = value\n    .shiftedBy(-magnitude)\n    .precision(9 + Math.min(value.e - magnitude, 0))\n    .toFixed()\n  return `${v}${name ? ' ' : ''}${name}`\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\n\nfunction asyncInit (options = {}, { stamp, args, instance }) {\n  return stamp.compose.deepConfiguration.AsyncInit.initializers.reduce(async (instance, init) => {\n    instance = await Promise.resolve(instance)\n    if (typeof init === 'function') {\n      const ret = await Promise.resolve(init.call(instance, options, { stamp, args, instance }))\n      return ret === undefined ? instance : ret\n    }\n    return instance\n  }, instance)\n}\n\nconst AsyncInit = stampit({\n  deepConf: { AsyncInit: { initializers: [] } },\n  composers ({ stamp, composables }) {\n    const conf = stamp.compose.deepConfiguration.AsyncInit\n    conf.initializers = R.without([asyncInit], R.uniqWith(R.identical, R.flatten(composables.map(c => R.path(['compose', 'deepConfiguration', 'AsyncInit', 'initializers'], c) || (c.compose || c).initializers || []))))\n    stamp.compose.initializers = [asyncInit]\n  }\n})\n\nexport default AsyncInit\n","import BigNumber from 'bignumber.js'\n\n/* eslint-disable */\nexport default {\n  stringify: (function () {\n    'use strict';\n\n    function f(n) {\n      // Format integers to have at least two digits.\n      return n < 10 ? '0' + n : n;\n    }\n\n    var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n      gap,\n      indent,\n      meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n      },\n      rep;\n\n\n    function quote(string) {\n\n// If the string contains no control characters, no quote characters, and no\n// backslash characters, then we can safely slap some quotes around it.\n// Otherwise we must also replace the offending characters with safe escape\n// sequences.\n\n      escapable.lastIndex = 0;\n      return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string'\n          ? c\n          : '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n      }) + '\"' : '\"' + string + '\"';\n    }\n\n\n    function str(key, holder) {\n\n// Produce a string from holder[key].\n\n      var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key],\n        isBigNumber = value != null && (value instanceof BigNumber || BigNumber.isBigNumber(value) || BigNumber(value).toString(10) === value);\n\n// If the value has a toJSON method, call it to obtain a replacement value.\n\n      if (value && typeof value === 'object' &&\n        typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n      }\n\n// If we were called with a replacer function, then call the replacer to\n// obtain a replacement value.\n\n      if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n      }\n\n// What happens next depends on the value's type.\n\n      switch (typeof value) {\n        case 'string':\n          if (isBigNumber) {\n            return value;\n          } else {\n            return quote(value);\n          }\n\n        case 'number':\n\n// JSON numbers must be finite. Encode non-finite numbers as null.\n\n          return isFinite(value) ? String(value) : 'null';\n\n        case 'boolean':\n        case 'null':\n\n// If the value is a boolean or null, convert it to a string. Note:\n// typeof null does not produce 'null'. The case is included here in\n// the remote chance that this gets fixed someday.\n\n          return String(value);\n\n// If the type is 'object', we might be dealing with an object or an array or\n// null.\n\n        case 'object':\n\n// Due to a specification blunder in ECMAScript, typeof null is 'object',\n// so watch out for that case.\n\n          if (!value) {\n            return 'null';\n          }\n\n// Make an array to hold the partial results of stringifying this object value.\n\n          gap += indent;\n          partial = [];\n\n// Is the value an array?\n\n          if (Object.prototype.toString.apply(value) === '[object Array]') {\n\n// The value is an array. Stringify every element. Use null as a placeholder\n// for non-JSON values.\n\n            length = value.length;\n            for (i = 0; i < length; i += 1) {\n              partial[i] = str(i, value) || 'null';\n            }\n\n// Join all of the elements together, separated with commas, and wrap them in\n// brackets.\n\n            v = partial.length === 0\n              ? '[]'\n              : gap\n                ? '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']'\n                : '[' + partial.join(',') + ']';\n            gap = mind;\n            return v;\n          }\n\n// If the replacer is an array, use it to select the members to be stringified.\n\n          if (rep && typeof rep === 'object') {\n            length = rep.length;\n            for (i = 0; i < length; i += 1) {\n              if (typeof rep[i] === 'string') {\n                k = rep[i];\n                v = str(k, value);\n                if (v) {\n                  partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                }\n              }\n            }\n          } else {\n\n// Otherwise, iterate through all of the keys in the object.\n\n            Object.keys(value).forEach(function(k) {\n              var v = str(k, value);\n              if (v) {\n                partial.push(quote(k) + (gap ? ': ' : ':') + v);\n              }\n            });\n          }\n\n// Join all of the member texts together, separated with commas,\n// and wrap them in braces.\n\n          v = partial.length === 0\n            ? '{}'\n            : gap\n              ? '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}'\n              : '{' + partial.join(',') + '}';\n          gap = mind;\n          return v;\n      }\n    }\n\n// If the JSON object does not yet have a stringify method, give it one.\n\n    return function (value, replacer, space) {\n\n// The stringify method takes a value and an optional replacer, and an optional\n// space parameter, and returns a JSON text. The replacer can be a function\n// that can replace values, or an array of strings that will select the keys.\n// A default replacer method can be provided. Use of the space parameter can\n// produce text that is more easily readable.\n\n      var i;\n      gap = '';\n      indent = '';\n\n// If the space parameter is a number, make an indent string containing that\n// many spaces.\n\n      if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n          indent += ' ';\n        }\n\n// If the space parameter is a string, it will be used as the indent string.\n\n      } else if (typeof space === 'string') {\n        indent = space;\n      }\n\n// If there is a replacer, it must be a function or an array.\n// Otherwise, throw an error.\n\n      rep = replacer;\n      if (replacer && typeof replacer !== 'function' &&\n        (typeof replacer !== 'object' ||\n          typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n      }\n\n// Make a fake root object containing our value under the key of ''.\n// Return the result of stringifying the value.\n\n      return str('', {'': value});\n    };\n  }()),\n  parse: ((options) => {\n    // This is a function that can parse a JSON text, producing a JavaScript\n    // data structure. It is a simple, recursive descent parser. It does not use\n    // eval or regular expressions, so it can be used as a model for implementing\n    // a JSON parser in other languages.\n\n    // We are defining the function inside of another function to avoid creating\n    // global letiables.\n\n    // Default options one can override by passing options to the parse()\n    const _options = {\n      'strict': false, // not being strict means do not generate syntax errors for \"duplicate key\"\n      'storeAsString': false // toggles whether the values should be stored as BigNumber (default) or a string\n    }\n\n    const escapee = {\n      '\"': '\"',\n      '\\\\': '\\\\',\n      '/': '/',\n      b: '\\b',\n      f: '\\f',\n      n: '\\n',\n      r: '\\r',\n      t: '\\t'\n    }\n\n    // If there are options, then use them to override the default _options\n    if (options !== undefined && options !== null) {\n      if (options.strict === true) {\n        _options.strict = true\n      }\n      if (options.storeAsString === true) {\n        _options.storeAsString = true\n      }\n    }\n\n    let at\n    // The index of the current character\n\n    let ch\n    // The current character\n\n    let text\n\n    let error = function (m) {\n      // Call error when something is wrong.\n\n      throw {\n        name: 'SyntaxError',\n        message: m,\n        at: at,\n        text: text\n      }\n    }\n\n    let next = function (c) {\n      // If a c parameter is provided, verify that it matches the current character.\n\n      if (c && c !== ch) {\n        error('Expected \\'' + c + '\\' instead of \\'' + ch + '\\'')\n      }\n\n      // Get the next character. When there are no more characters,\n      // return the empty string.\n\n      ch = text.charAt(at)\n      at += 1\n      return ch\n    }\n\n    let number = function () {\n      // Parse a number value.\n\n      let number\n\n      let string = ''\n\n      if (ch === '-') {\n        string = '-'\n        next('-')\n      }\n      while (ch >= '0' && ch <= '9') {\n        string += ch\n        next()\n      }\n      if (ch === '.') {\n        string += '.'\n        while (next() && ch >= '0' && ch <= '9') {\n          string += ch\n        }\n      }\n      if (ch === 'e' || ch === 'E') {\n        string += ch\n        next()\n        if (ch === '-' || ch === '+') {\n          string += ch\n          next()\n        }\n        while (ch >= '0' && ch <= '9') {\n          string += ch\n          next()\n        }\n      }\n      number = +string\n      if (!isFinite(number)) {\n        error('Bad number')\n      } else {\n        // if (number > 9007199254740992 || number < -9007199254740992)\n        // Bignumber has stricter check: everything with length > 15 digits disallowed\n        if (string.length > 15) { return string }\n        return number\n      }\n    }\n\n    let string = function () {\n      // Parse a string value.\n\n      let hex\n\n      let i\n\n      let string = ''\n\n      let uffff\n\n      // When parsing for string values, we must look for \" and \\ characters.\n\n      if (ch === '\"') {\n        while (next()) {\n          if (ch === '\"') {\n            next()\n            return string\n          }\n          if (ch === '\\\\') {\n            next()\n            if (ch === 'u') {\n              uffff = 0\n              for (i = 0; i < 4; i += 1) {\n                hex = parseInt(next(), 16)\n                if (!isFinite(hex)) {\n                  break\n                }\n                uffff = uffff * 16 + hex\n              }\n              string += String.fromCharCode(uffff)\n            } else if (typeof escapee[ch] === 'string') {\n              string += escapee[ch]\n            } else {\n              break\n            }\n          } else {\n            string += ch\n          }\n        }\n      }\n      error('Bad string')\n    }\n\n    let white = function () {\n      // Skip whitespace.\n\n      while (ch && ch <= ' ') {\n        next()\n      }\n    }\n\n    let word = function () {\n      // true, false, or null.\n\n      switch (ch) {\n        case 't':\n          next('t')\n          next('r')\n          next('u')\n          next('e')\n          return true\n        case 'f':\n          next('f')\n          next('a')\n          next('l')\n          next('s')\n          next('e')\n          return false\n        case 'n':\n          next('n')\n          next('u')\n          next('l')\n          next('l')\n          return null\n      }\n      error('Unexpected \\'' + ch + '\\'')\n    }\n\n    let value\n    // Place holder for the value function.\n\n    let array = function () {\n      // Parse an array value.\n\n      let array = []\n\n      if (ch === '[') {\n        next('[')\n        white()\n        if (ch === ']') {\n          next(']')\n          return array // empty array\n        }\n        while (ch) {\n          array.push(value())\n          white()\n          if (ch === ']') {\n            next(']')\n            return array\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad array')\n    }\n\n    let object = function () {\n      // Parse an object value.\n\n      let key\n\n      let object = {}\n\n      if (ch === '{') {\n        next('{')\n        white()\n        if (ch === '}') {\n          next('}')\n          return object // empty object\n        }\n        while (ch) {\n          key = string()\n          white()\n          next(':')\n          if (_options.strict === true && Object.hasOwnProperty.call(object, key)) {\n            error('Duplicate key \"' + key + '\"')\n          }\n          object[key] = value()\n          white()\n          if (ch === '}') {\n            next('}')\n            return object\n          }\n          next(',')\n          white()\n        }\n      }\n      error('Bad object')\n    }\n\n    value = function () {\n      // Parse a JSON value. It could be an object, an array, a string, a number,\n      // or a word.\n\n      white()\n      switch (ch) {\n        case '{':\n          return object()\n        case '[':\n          return array()\n        case '\"':\n          return string()\n        case '-':\n          return number()\n        default:\n          return ch >= '0' && ch <= '9' ? number() : word()\n      }\n    }\n\n    // Return the json_parse function. It will have access to all of the above\n    // functions and letiables.\n\n    return function (source, reviver) {\n      let result\n\n      text = source + ''\n      at = 0\n      ch = ' '\n      result = value()\n      white()\n      if (ch) {\n        error('Syntax error')\n      }\n\n      // If there is a reviver function, we recursively walk the new structure,\n      // passing each name/value pair to the reviver function for possible\n      // transformation, starting with a temporary root object that holds the result\n      // in an empty key. If there is not a reviver function, we simply return the\n      // result.\n\n      return typeof reviver === 'function'\n        ? (function walk (holder, key) {\n          let k; let v; let value = holder[key]\n          if (value && typeof value === 'object') {\n            Object.keys(value).forEach(function (k) {\n              v = walk(value, k)\n              if (v !== undefined) {\n                value[k] = v\n              } else {\n                delete value[k]\n              }\n            })\n          }\n          return reviver.call(holder, key, value)\n        }({ '': result }, ''))\n        : result\n    }\n  })()\n}\n","/*\n * ISC License (ISC)\n * Copyright 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as R from 'ramda'\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeToPascal (s) {\n  return s.replace(/_./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from snake_case to PascalCase\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function snakeOrKebabToPascal (s) {\n  return s.replace(/[_|-]./g, match => R.toUpper(match[1]))\n}\n\n/**\n * Convert string from PascalCase to snake_case\n * @rtype (s: String) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nexport function pascalToSnake (s) {\n  return s.replace(/[A-Z]/g, match => `_${R.toLower(match)}`)\n}\n\n/**\n * Check whether a string is valid hex.\n * @param {string} str String to validate.\n * @return {boolean} True if the string is valid hex, false otherwise.\n */\nexport function isHex (str) {\n  return !!(str.length % 2 === 0 && str.match(/^[0-9a-f]+$/i))\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Swagger module\n * @module @aeternity/aepp-sdk/es/utils/swagger\n * @export Swagger\n * @example import Swagger from '@aeternity/aepp-sdk/es/utils/swagger'\n */\n\nimport JsonBig from './json-big'\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport { snakeToPascal, pascalToSnake } from './string'\nimport BigNumber from 'bignumber.js'\n\n/**\n * Perform path string interpolation\n * @static\n * @rtype (path: String, replacements: Object) => String\n * @param {String} s - String to convert\n * @return {String} Converted string\n */\nfunction expandPath (path, replacements) {\n  return R.toPairs(replacements).reduce((path, [key, value]) => path.replace(`{${key}}`, value), path)\n}\n\n/**\n * Lookup type\n * @rtype (path: [String...], spec: Object, types: Object) => Object\n * @param {String[]} path - Path to look up\n * @param {Object} spec\n * @param {Object} types\n * @return {Object} Looked up type definition\n */\nfunction lookupType (path, spec, types) {\n  const type = (() => {\n    const match = R.path(path, spec).match(/^#\\/definitions\\/(.+)/)\n    if (match !== void 0) {\n      return match[1]\n    } else {\n      throw Error(`Reference path does not meet specification: ${path}`)\n    }\n  })()\n\n  if (type in types) {\n    return types[type]\n  } else {\n    throw Error(`Couldn't find definition for ${type}`)\n  }\n}\n\n/**\n * Intercept errors thrown by `fn()`, extending them with information from `key`\n * @rtype (key: String, fn: Function) => Any\n * @param {String} key - Information to attach\n * @param {Function} fn - Thunk\n * @return {Any} Execution result\n */\nfunction extendingErrorPath (key, fn) {\n  try {\n    return fn()\n  } catch (e) {\n    throw Object.assign(e, { path: [key].concat(e.path || []) })\n  }\n}\n\n/**\n * Construct Error with additional type information (not thrown)\n * @rtype (msg: String, spec: String, value: String) => Error\n * @param {String} msg - Error message\n * @param {String} spec\n * @param {String} value\n * @return {Error} Enhanced Error\n */\nfunction TypeError (msg, spec, value) {\n  const e = Error(msg)\n  return Object.assign(e, { spec, value })\n}\n\n/**\n * Per-type {@link conform} dispatcher\n * @rtype [(dispatch(value: String, spec: Object, types: Object) => Any, throws: Error)...]\n */\nconst conformTypes = {\n  integer (value, spec, types) {\n    if (R.type(value) === 'Number' || BigNumber(value).toString(10) === value) {\n      return R.type(value) === 'Number' ? Math.floor(value) : value\n    } else {\n      throw TypeError('Not an integer', spec, value)\n    }\n  },\n  enum (value, spec, types) {\n    const { enum: values } = spec\n    if (R.contains(value, values)) {\n      return value\n    } else {\n      throw TypeError(`Not one of [${R.join(', ', values)}]`, spec, value)\n    }\n  },\n  string (value, spec, types) {\n    if (R.type(value) === 'String') {\n      return value\n    } else {\n      throw TypeError(`Not a string`, spec, value)\n    }\n  },\n  object (value, spec, types) {\n    if (R.type(value) === 'Object') {\n      const required = (spec.required || []).map(snakeToPascal)\n      const properties = pascalizeKeys(spec.properties)\n      const missing = R.difference(required, R.keys(value))\n\n      if (missing.length > 0) {\n        throw TypeError(`Required properties missing: ${R.join(', ', missing)}`, spec, value)\n      } else {\n        return R.mapObjIndexed((value, key) => extendingErrorPath(key, () => conform(value, properties[key], types)), R.reject(R.isNil, R.pick(R.keys(properties), value)))\n      }\n    } else {\n      throw TypeError(`Not an object`, spec, value)\n    }\n  },\n  array (value, spec, types) {\n    if (R.type(value) === 'Array') {\n      return value.map(o => conform(o, spec.items, types))\n    } else {\n      throw TypeError(`Not an array`, spec, value)\n    }\n  },\n  schema (value, spec, types) {\n    return conform(value, lookupType(['schema', '$ref'], spec, types), types)\n  },\n  $ref (value, spec, types) {\n    return conform(value, lookupType(['$ref'], spec, types), types)\n  },\n  allOf (value, spec, types) {\n    return R.mergeAll(spec.allOf.map(spec => conform(value, spec, types)))\n  }\n}\n\n/**\n * {@link conform} dispatcher\n * @rtype (spec: Object) => String, throws: Error\n * @param {Object} spec\n * @return {String} Value to dispatch on\n */\nfunction conformDispatch (spec) {\n  if ('schema' in spec) {\n    return 'schema'\n  } else if ('$ref' in spec) {\n    return '$ref'\n  } else if ('enum' in spec) {\n    return 'enum'\n  } else if ('allOf' in spec) {\n    return 'allOf'\n  } else if ('type' in spec) {\n    return spec.type\n  } else {\n    throw Object.assign(Error('Could not determine type'), { spec })\n  }\n}\n\n/**\n * Conform `value` against its `spec`\n * @static\n * @rtype (value: Any, spec: Object, types: Object) => Any, throws: Error\n * @param {Object} value - Value to conform (validate and transform)\n * @param {Object} spec - Specification object\n * @param {Object} types - Types specification\n * @return {Object} Conformed value\n */\nfunction conform (value, spec, types) {\n  return (conformTypes[conformDispatch(spec)] || (() => {\n    throw Object.assign(Error('Unsupported type'), { spec })\n  }))(value, spec, types)\n}\n\nconst httpConfig = {\n  headers: { 'Content-Type': 'application/json' },\n  transformResponse: [(data) => {\n    try {\n      return JsonBig.parse(data)\n    } catch (e) {\n      return data\n    }\n  }],\n  transformRequest: [(data) => {\n    try {\n      return JsonBig.stringify(data)\n    } catch (e) {\n      return data\n    }\n  }]\n}\n\nconst httpClients = {\n  get: (config) => (url, params) => axios.get(url, [httpConfig, config, params].reduce(R.mergeDeepRight)),\n  post: (config) => (url, params) => axios.post(url, params, R.mergeDeepRight(httpConfig, config))\n}\n\n/**\n * Classify given `parameters`\n * @rtype (parameters: [{required: Boolean, in: String}...]) => {pathArgs: [...Object], queryArgs: [...Object], bodyArgs: [...Object], req: [...Object], opts: [...Object]}\n * @param {Object[]} parameters - Parameters to classify\n * @return {Object[]} Classified parameters\n */\nfunction classifyParameters (parameters) {\n  const { req, opts } = R.groupBy(p => p.required ? 'req' : 'opts', parameters)\n  const { path, query, body } = R.groupBy(p => p.in, parameters)\n\n  return {\n    pathArgs: R.pluck('name', path || []),\n    queryArgs: R.pluck('name', query || []),\n    bodyArgs: R.pluck('name', body || []),\n    req: req || [],\n    opts: opts || []\n  }\n}\n\n/**\n * Convert `name` attributes in `parameters` from snake_case to PascalCase\n * @rtype (parameters: [{name: String}...]) => [{name: String}...]\n * @param {Object[]} parameters - Parameters to pascalize\n * @return {Object[]} Pascalized parameters\n */\nfunction pascalizeParameters (parameters) {\n  return parameters.map(o => R.assoc('name', snakeToPascal(o.name), o))\n}\n\n/**\n * Key traversal metafunction\n * @static\n * @function\n * @rtype (fn: (s: String) => String) => (o: Object) => Object\n * @param {Function} fn - Key transformation function\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n */\nconst traverseKeys = R.curry((fn, o) => {\n  const dispatch = {\n    Object: o => R.fromPairs(R.toPairs(o).map(function (arr) {\n      const k = arr[0]\n      const v = arr[1]\n      return [fn(k), traverseKeys(fn, v)]\n    })),\n    Array: o => o.map(traverseKeys(fn))\n  }\n\n  return (dispatch[R.type(o)] || R.identity)(o)\n})\n\n/**\n * snake_case key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see pascalToSnake\n */\nfunction snakizeKeys (o) {\n  return traverseKeys(pascalToSnake, o)\n}\n\n/**\n * PascalCase key traversal\n * @static\n * @rtype (o: Object) => Object\n * @param {Object} o - Object to traverse\n * @return {Object} Transformed object\n * @see snakeToPascal\n */\nfunction pascalizeKeys (o) {\n  return traverseKeys(snakeToPascal, o)\n}\n\n/**\n * Obtain readable signature for operation\n * @rtype (name: String, req: [...Object], opts: [...Object]) => Object\n * @param {String} name - Name of operation\n * @param {Object[]} req - Required parameters to operation\n * @param {Object[]} opts - Optional parameters to operation\n * @return {String} Signature\n */\nfunction operationSignature (name, req, opts) {\n  const args = req.length ? `${R.join(', ', R.pluck('name', req))}` : null\n  const opt = opts.length ? `{${R.join(', ', R.pluck('name', opts))}}` : null\n\n  return `${name} (${R.join(', ', [args, opt].filter(R.identity))})`\n}\n\n/**\n * Assert that `coll` is a sequence with a length of 1 and extract the only element\n * @static\n * @rtype (coll: [...Any]) => Any, throws: Error\n * @param {Object[]} coll\n * @return {Object}\n */\nfunction assertOne (coll) {\n  if (coll.length === 1) {\n    return R.head(coll)\n  } else {\n    throw Error(`Expected exactly one element in ${coll}`)\n  }\n}\n\n/**\n * Destructure HTTP client `error`\n * @rtype (error: Error) => String\n * @param {Error} error\n * @return {String}\n */\nfunction destructureClientError (error) {\n  const { method, url } = error.config\n  const { status, data } = error.response\n  const reason = R.has('reason', data) ? data.reason : R.toString(data)\n\n  return `${method.toUpperCase()} to ${url} failed with ${status}: ${reason}`\n}\n\n/**\n * Generate callable operation\n * @function\n * @static\n * @rtype (path: String, method: String, definition: Object, types: Object) => (instance: Swagger, url: String) => Promise[Any], throws: Error\n * @param {String} path - Path to call in URL\n * @param {String} method - HTTP method\n * @param {Object} definition - Complex definition\n * @param {Object} types - Swagger types\n * @return {Function}\n */\nconst operation = (path, method, definition, types, { config, errorHandler } = {}) => {\n  config = config || {}\n  delete config.transformResponse // Prevent of overwriting transform response\n  const { operationId, description } = definition\n  let { parameters } = definition\n  const name = `${R.head(operationId).toLowerCase()}${R.drop(1, operationId)}`\n  const pascalized = pascalizeParameters(parameters)\n\n  const { pathArgs, queryArgs, bodyArgs, req, opts } = classifyParameters(pascalized)\n  const optNames = R.pluck('name', opts)\n  const indexedParameters = R.indexBy(R.prop('name'), pascalized)\n\n  const signature = operationSignature(name, req, opts)\n  const client = httpClients[method](config)\n\n  return (instance, url) => {\n    const fn = async function () {\n      const { defaults } = this.Swagger\n\n      try {\n        const [arg, opt] = (() => {\n          if (arguments.length === req.length) {\n            return [Array.from(arguments), defaults]\n          } else if (arguments.length === req.length + 1) {\n            return [R.dropLast(1, arguments), R.merge(defaults, R.last(arguments))]\n          } else {\n            throw Error(`Function call doesn't conform to ${signature}`)\n          }\n        })()\n\n        if (opt.debug) {\n          console.log(`Invoked ${name} with ${R.toString(arg)} ${R.toString(opt)}`)\n        }\n\n        const values = R.merge(R.reject(R.isNil, R.pick(optNames, opt)), R.zipObj(R.pluck('name', req), arg))\n        const conformed = R.mapObjIndexed((val, key) => {\n          try {\n            return conform(val, indexedParameters[key], types)\n          } catch (e) {\n            const path = [key].concat(e.path || [])\n            throw Object.assign(e, {\n              path,\n              value: val,\n              message: `validating ${R.join(' -> ', path)}: ${e.message}`\n            })\n          }\n        }, values)\n        const expandedPath = expandPath(path, snakizeKeys(R.pick(pathArgs, conformed)))\n        const params = snakizeKeys((() => {\n          if (method === 'get') {\n            return { params: R.pick(queryArgs, conformed) }\n          } else if (method === 'post') {\n            return conformed[assertOne(bodyArgs)]\n          } else {\n            throw Error(`Unsupported method ${method}`)\n          }\n        })())\n\n        if (opt.debug) {\n          console.log(`Going to ${method.toUpperCase()} ${url}${expandedPath} with ${R.toString(params)}`)\n        }\n\n        try {\n          const response = await client(`${url}${expandedPath}`, params).catch(this.axiosError(errorHandler))\n          // return opt.fullResponse ? response : conform(pascalizeKeys(response.data), responses['200'], types)\n          return opt.fullResponse ? response : pascalizeKeys(response.data)\n        } catch (e) {\n          if (R.path(['response', 'data'], e)) {\n            e.message = destructureClientError(e)\n          }\n          throw e\n        }\n      } catch (e) {\n        e.message = `While calling ${signature}, ${e.message}`\n        throw e\n      }\n    }.bind(instance)\n\n    Object.assign(fn, {\n      signature,\n      description\n    })\n\n    return Object.defineProperties(fn, {\n      name: {\n        value: name,\n        writable: false\n      },\n      length: {\n        value: req.length + (opts.length ? 1 : 0),\n        writable: false\n      }\n    })\n  }\n}\n\n/**\n * Swagger Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/utils/swagger\n * @rtype Stamp\n * @param {Object} options - Initializer object\n * @param {Object} options.swag - Swagger definition\n * @param {Object} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Account instance\n * @example Swagger({swag})\n */\nconst Swagger = stampit({\n  init ({ swag = this.swag, axiosConfig }, { stamp }) {\n    const { paths, definitions } = swag\n    const methods = R.indexBy(\n      R.prop('name'),\n      R.flatten(\n        R.values(\n          R.mapObjIndexed(\n            (methods, path) => R.values(\n              R.mapObjIndexed((definition, method) => {\n                const op = operation(path, method, definition, definitions, axiosConfig)\n                return op(this, this.urlFor(swag.basePath, definition))\n              }, methods)),\n            paths\n          )\n        )\n      )\n    )\n\n    return Object.assign(this, {\n      methods: R.keys(methods),\n      api: methods\n    })\n  },\n  deepProps: {\n    Swagger: {\n      defaults: {\n        debug: false,\n        txEncoding: 'json'\n      }\n    }\n  },\n  statics: { debugSwagger (bool) { return this.deepProps({ Swagger: { defaults: { debug: bool } } }) } }\n})\n\n/**\n * Reconfigure Swagger to (not) spill debugging logs\n * @function debugSwagger\n * @static\n * @rtype (bool: Boolean) => Stamp\n * @param {boolean} bool - Whether to debug\n * @return {Stamp} Reconfigured Swagger Stamp\n */\n\nexport default Swagger\n\nexport {\n  conform,\n  operation,\n  expandPath,\n  assertOne,\n  snakeToPascal,\n  pascalToSnake,\n  traverseKeys\n}\n","export default function (version, geVersion, ltVersion) {\n  const versionComponents = version.split('-')[0].split('.')\n  const geComponents = geVersion.split('-')[0].split('.')\n  const ltComponents = ltVersion.split('-')[0].split('.')\n  const base = Math.max(...versionComponents, ...geComponents, ...ltComponents) + 1\n  const toNumber = components => components.reverse()\n    .reduce((acc, n, idx) => acc + n * Math.pow(base, idx), 0)\n\n  const vNumber = toNumber(versionComponents)\n  const geNumber = toNumber(geComponents)\n  const ltNumber = toNumber(ltComponents)\n  return vNumber >= geNumber && vNumber < ltNumber\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Node module\n * @module @aeternity/aepp-sdk/es/node\n * @export Node\n * @example import Node from '@aeternity/aepp-sdk/es/node'\n */\n\nimport stampit from '@stamp/it'\nimport axios from 'axios'\nimport * as R from 'ramda'\nimport AsyncInit from './utils/async-init'\nimport Swagger from './utils/swagger'\nimport semverSatisfies from './utils/semver-satisfies'\n\n/**\n * Obtain Swagger configuration from Node node\n * @category async\n * @rtype (url: String) => swagger: Object\n * @param {String} url - Node base URL\n * @param {Object} axiosConfig Axios configuration object\n * @return {Object} Swagger configuration\n */\nasync function remoteSwag (url, axiosConfig) {\n  return (await axios.get(`${url}/api`, axiosConfig)).data\n}\n\n/**\n * Node specific loader for `urlFor`\n * @rtype ({url: String, internalUrl?: String}) => (path: String, definition: Object) => tx: String\n * @param {Object} options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @return {Function} Implementation for {@link urlFor}\n */\nconst loader = ({ url, internalUrl }) => (path, definition) => {\n  const { tags, operationId } = definition\n\n  if (R.contains('external', tags)) {\n    return `${url}${path}`\n  } else if (!R.isNil(internalUrl) && R.contains('internal', tags)) {\n    return `${internalUrl}${path}`\n  } else {\n    throw Error(`Method ${operationId} is unsupported. No interface for ${R.toString(tags)}`)\n  }\n}\n\n/**\n * get consensus protocol version\n * @param {Array} protocols Array of protocols\n * @param {Number} height Height\n * @return {Number} version Protocol version\n */\nasync function getConsensusProtocolVersion (protocols = [], height) {\n  if (!protocols) throw new Error('Protocols must be an array')\n  if (!height) height = (await this.api.getCurrentKeyBlock()).height\n  if (height < 0) throw new Error('height must be a number >= 0')\n\n  const { version } = protocols\n    .reduce(\n      ({ effectiveAtHeight, version }, p) => height >= p.effectiveAtHeight && p.effectiveAtHeight > effectiveAtHeight\n        ? { effectiveAtHeight: p.effectiveAtHeight, version: p.version }\n        : { effectiveAtHeight, version },\n      { effectiveAtHeight: -1, version: 0 }\n    )\n  return version\n}\n\nfunction axiosError (handler) {\n  return (error) => {\n    handler && typeof handler === 'function' && handler(error)\n    throw error\n  }\n}\n\n/**\n * {@link Swagger} based Node remote API Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node\n * @rtype Stamp\n * @param {Object} [options={}] - Options\n * @param {String} options.url - Base URL for Node\n * @param {String} options.internalUrl - Base URL for internal requests\n * @param {String} options.axiosConfig - Object with axios configuration. Example { config: {}, errorHandler: (err) => throw err }\n * @return {Object} Node client\n * @example Node({url: 'https://sdk-testnet.aepps.com'})\n */\nconst Node = stampit(AsyncInit, {\n  async init ({ name, url = this.url, internalUrl = this.internalUrl, axiosConfig: { config, errorHandler } = {} }) {\n    if (!url) throw new Error('\"url\" required')\n    url = url.replace(/\\/?$/, '')\n    internalUrl = internalUrl ? internalUrl.replace(/\\/?$/, '') : url\n    // Get swagger schema\n    const swag = await remoteSwag(url, config).catch(this.axiosError(errorHandler))\n    this.version = swag.info.version\n    return Object.assign(this, {\n      url,\n      internalUrl,\n      swag: swag,\n      urlFor: loader({ url, internalUrl })\n    })\n  },\n  methods: {\n    axiosError,\n    getNodeInfo () {\n      return {\n        url: this.url,\n        internalUrl: this.internalUrl,\n        nodeNetworkId: this.nodeNetworkId,\n        version: this.version,\n        consensusProtocolVersion: this.consensusProtocolVersion\n      }\n    },\n    getConsensusProtocolVersion\n  },\n  props: {\n    version: null,\n    consensusProtocolVersion: null,\n    nodeNetworkId: null\n  }\n}, Swagger, {\n  async init ({ forceCompatibility = false }) {\n    const { nodeRevision: revision, genesisKeyBlockHash: genesisHash, networkId, protocols } = await this.api.getStatus()\n    this.consensusProtocolVersion = await this.getConsensusProtocolVersion(protocols)\n    if (\n      !(this.version === '5.0.0-rc.1' || semverSatisfies(this.version.split('-')[0], NODE_GE_VERSION, NODE_LT_VERSION)) &&\n      // Todo implement 'rc' version comparision in semverSatisfies\n      !forceCompatibility\n    ) {\n      throw new Error(\n        `Unsupported node version ${this.version}. ` +\n        `Supported: >= ${NODE_GE_VERSION} < ${NODE_LT_VERSION}`\n      )\n    }\n\n    this.nodeNetworkId = networkId\n    return Object.assign(this, { revision, genesisHash })\n  }\n})\n\nconst NODE_GE_VERSION = '3.0.1'\nconst NODE_LT_VERSION = '5.0.0-rc.2'\n\nexport default Node\n","export const DEFAULT_NETWORK_ID = 'ae_mainnet'\n\nexport const getterForCurrentNode = (currentNode) => {\n  if (!currentNode || !currentNode.instance) throw new Error(`You can't use Node API. Node is not connected or not defined!`)\n\n  return currentNode.instance.api\n}\n\nexport const prepareNodeObject = (name, node) => ({\n  name,\n  instance: node,\n  url: node.url,\n  internalUrl: node.internalUrl,\n  networkId: node.nodeNetworkId,\n  version: node.version,\n  consensusProtocolVersion: node.consensusProtocolVersion\n})\n","/**\n * NodePool module\n * @module @aeternity/aepp-sdk/es/node-pool\n * @export NodePool\n * @example import NodePool from '@aeternity/aepp-sdk/es/node-pool'\n */\nimport Node from '../node'\nimport { DEFAULT_NETWORK_ID, getterForCurrentNode, prepareNodeObject } from './helpers'\nimport AsyncInit from '../utils/async-init'\n\n/**\n * Node Pool Stamp\n * This stamp allow you to make basic manipulation(add, remove, select) on list of nodes\n * @function\n * @alias module:@aeternity/aepp-sdk/es/node-pool\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.nodes] - Array with Node instances\n * @return {Object} NodePool instance\n */\nexport const NodePool = AsyncInit.compose({\n  async init ({ nodes = [], url = this.url, internalUrl = this.internalUrl, forceCompatibility = false } = {}) {\n    this.pool = new Map()\n    this.validateNodes(nodes)\n\n    nodes.forEach(node => {\n      const { name, instance } = node\n      this.pool.set(name, prepareNodeObject(name, instance))\n    })\n    if (nodes.length) this.selectNode(nodes[0].name)\n\n    // DEPRECATED. TODO Remove deprecated param\n    // Prevent BREAKING CHANGES. Support for init params `url`, `internalUrl`\n    if (url) {\n      this.addNode('default', await Node({ url, internalUrl, forceCompatibility }), true)\n    }\n  },\n  propertyDescriptors: {\n    api: {\n      enumerable: true,\n      configurable: false,\n      get () {\n        return getterForCurrentNode(this.selectedNode)\n      }\n    }\n  },\n  methods: {\n    /**\n     * Add Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String, nodeInstance: Object, select: Boolean) => Void\n     * @param {String} name - Node name\n     * @param {Object} nodeInstance - Node instance\n     * @param {Boolean} select - Select this node as current\n     * @return {Void}\n     * @example\n     * nodePool.addNode('testNode', awaitNode({ url, internalUrl }), true) // add and select new node with name 'testNode'\n     */\n    addNode (name, nodeInstance, select = false) {\n      if (this.pool.has(name)) throw new Error(`Node with name ${name} already exist`)\n\n      this.validateNodes([{ name, instance: nodeInstance }])\n\n      this.pool.set(name, prepareNodeObject(name, nodeInstance))\n      if (select || !this.selectedNode) {\n        this.selectNode(name)\n      }\n    },\n    /**\n     * Select Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype (name: String) => Void\n     * @param {String} name - Node name\n     * @return {Void}\n     * @example\n     * nodePool.selectNode('testNode')\n     */\n    selectNode (name) {\n      if (!this.pool.has(name)) throw new Error(`Node with name ${name} not in pool`)\n\n      this.selectedNode = this.pool.get(name)\n    },\n    /**\n     * Get NetworkId of current Node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => String\n     * @return {String}\n     * @example\n     * nodePool.getNetworkId()\n     */\n    getNetworkId () {\n      return this.networkId || this.selectedNode.networkId || DEFAULT_NETWORK_ID\n    },\n    /**\n     * Check if you have selected node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Boolean\n     * @return {Boolean}\n     * @example\n     * nodePool.isNodeConnected()\n     */\n    isNodeConnected () {\n      return !!this.selectedNode.instance\n    },\n    /**\n     * Get information about node\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object\n     * @return {Object}\n     * @example\n     * nodePool.getNodeInfo() // { name, version, networkId, protocol, ... }\n     */\n    getNodeInfo () {\n      if (!this.isNodeConnected()) throw new Error('Can not get node info. Node is not connected')\n      return {\n        name: this.selectedNode.name,\n        ...this.selectedNode.instance.getNodeInfo()\n      }\n    },\n    /**\n     * Get array of available nodes\n     * @function\n     * @alias module:@aeternity/aepp-sdk/es/node-pool\n     * @rtype () => Object[]\n     * @return {Object[]}\n     * @example\n     * nodePool.getNodesInPool()\n     */\n    getNodesInPool () {\n      return Array.from(this.pool.entries()).map(([name, node]) => ({\n        name,\n        ...node.instance.getNodeInfo()\n      }))\n    },\n    validateNodes (nodes) {\n      const nodeProps = ['Swagger', 'api', 'consensusProtocolVersion', 'genesisHash', 'methods']\n      nodes.forEach((node, index) => {\n        if (typeof node !== 'object') throw new Error('Node must be an object with \"name\" and \"instance\" props')\n        if (['name', 'instance'].find(k => !node[k])) throw new Error(`Node object on index ${index} must contain node \"name\" and \"ins\"`)\n        if (!node.instance || typeof node.instance !== 'object' || nodeProps.find(prop => !(prop in node.instance))) {\n          throw new Error('Invalid node instance object')\n        }\n      })\n    }\n  },\n  props: {\n    selectedNode: {}\n  }\n})\n\nexport default NodePool\n","import {\n  verify,\n  decodeBase58Check,\n  assertedType\n} from '../utils/crypto'\nimport { encode } from '../tx/builder/helpers'\n\nimport { BigNumber } from 'bignumber.js'\nimport {\n  BASE_VERIFICATION_SCHEMA, CONTRACT_VERIFICATION_SCHEMA, MIN_GAS_PRICE, OBJECT_ID_TX_TYPE,\n  OBJECT_TAG_SIGNED_TRANSACTION, PROTOCOL_VM_ABI,\n  SIGNATURE_VERIFICATION_SCHEMA, TX_TYPE\n} from './builder/schema'\nimport { calculateFee, unpackTx } from './builder'\nimport { NodePool } from '../node-pool'\n\n/**\n * Transaction validator\n * @module @aeternity/aepp-sdk/es/tx/validator\n * @export TransactionValidator\n * @example import TransactionValidator from '@aeternity/aepp-sdk/es/tx/validator'\n */\n\nconst VALIDATORS = {\n  // VALIDATE SIGNATURE\n  signature ({ rlpEncoded, signature, ownerPublicKey, networkId = 'ae_mainnet' }) {\n    const txWithNetworkId = Buffer.concat([Buffer.from(networkId), rlpEncoded])\n    return verify(txWithNetworkId, signature, decodeBase58Check(assertedType(ownerPublicKey, 'ak')))\n  },\n  // VALIDATE IF ENOUGH FEE\n  insufficientFee ({ minFee, fee }) {\n    return BigNumber(minFee).lte(BigNumber(fee))\n  },\n  // VALIDATE IF TTL VALID\n  expiredTTL ({ ttl, height }) {\n    return BigNumber(ttl).eq(0) || BigNumber(ttl).gte(BigNumber(height))\n  },\n  // Insufficient Balance for Amount plus Fee\n  insufficientBalanceForAmountFee ({ balance, amount = 0, fee }) {\n    return BigNumber(balance).gt(BigNumber(amount).plus(fee))\n  },\n  // Insufficient Balance for Amount\n  insufficientBalanceForAmount ({ balance, amount = 0 }) {\n    return BigNumber(balance).gt(BigNumber(amount))\n  },\n  // IF NONCE USED\n  nonceUsed ({ accountNonce, nonce }) {\n    return BigNumber(nonce).gt(BigNumber(accountNonce))\n  },\n  // IF NONCE TO HIGH\n  nonceHigh ({ accountNonce, nonce }) {\n    return !(BigNumber(nonce).gt(BigNumber(accountNonce).plus(1)))\n  },\n  minGasPrice ({ gasPrice }) {\n    return isNaN(gasPrice) || BigNumber(gasPrice).gte(BigNumber(MIN_GAS_PRICE))\n  },\n  // VM/ABI version validation based on consensus protocol version\n  vmAndAbiVersion ({ ctVersion, abiVersion, consensusProtocolVersion, txType }) {\n    // If not contract tx\n    if (!ctVersion) ctVersion = { abiVersion }\n    const supportedProtocol = PROTOCOL_VM_ABI[consensusProtocolVersion]\n    // If protocol not implemented\n    if (!supportedProtocol) return true\n    // If protocol for tx type not implemented\n    const txProtocol = supportedProtocol[txType]\n\n    return !Object.entries(ctVersion)\n      .reduce((acc, [key, value]) =>\n        [...acc, value === undefined ? true : txProtocol[key].includes(parseInt(value))],\n      []).includes(false)\n  }\n}\n\nconst resolveDataForBase = async (chain, { ownerPublicKey }) => {\n  let accountNonce = 0\n  let accountBalance = 0\n  try {\n    const { nonce, balance } = await chain.api.getAccountByPubkey(ownerPublicKey)\n    accountNonce = nonce\n    accountBalance = balance\n  } catch (e) { console.log('We can not get info about this publicKey') }\n  return {\n    height: (await chain.api.getCurrentKeyBlockHeight()).height,\n    balance: accountBalance,\n    accountNonce,\n    ownerPublicKey,\n    ...chain.getNodeInfo()\n  }\n}\n\n// Verification using SCHEMA\nconst verifySchema = (schema, data) => {\n  // Verify through schema\n  return schema.reduce(\n    (acc, [msg, validatorKey, { key, type, txKey }]) => {\n      if (!VALIDATORS[validatorKey](data)) acc.push({ msg: msg(data), txKey, type })\n      return acc\n    },\n    []\n  )\n}\n\n/**\n * Unpack and verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {String} txHash Base64Check transaction hash\n * @param {Object} [options={}] Options\n * @param {String} [options.networkId] networkId Use in signature verification\n * @return {Promise<Object>} Object with verification errors and warnings\n */\nasync function unpackAndVerify (txHash, { networkId } = {}) {\n  const { tx: unpackedTx, rlpEncoded, txType } = unpackTx(txHash)\n\n  if (+unpackedTx.tag === OBJECT_TAG_SIGNED_TRANSACTION) {\n    const { txType, tx } = unpackedTx.encodedTx\n    const signatures = unpackedTx.signatures.map(raw => ({ raw, hash: encode(raw, 'sg') }))\n    const rlpEncodedTx = unpackedTx.encodedTx.rlpEncoded\n\n    return {\n      validation: await this.verifyTx({ tx, signatures, rlpEncoded: rlpEncodedTx }, networkId),\n      tx,\n      signatures,\n      txType\n    }\n  }\n  return {\n    validation: await this.verifyTx({ tx: unpackedTx, rlpEncoded }, networkId),\n    tx: unpackedTx,\n    txType\n  }\n}\n\nconst getOwnerPublicKey = (tx) =>\n  tx[['senderId', 'accountId', 'ownerId', 'callerId', 'oracleId', 'fromId', 'initiator', 'gaId'].find(key => tx[key])].replace('ok_', 'ak_')\n\n/**\n * Verify transaction (verify nonce, ttl, fee, signature, account balance)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n *\n * @param {Object} [data={}] data TX data object\n * @param {String} [data.tx] tx Transaction hash\n * @param {Array} [data.signatures] signatures Transaction signature's\n * @param {Array} [data.rlpEncoded] rlpEncoded RLP encoded transaction\n * @param {String} networkId networkId Use in signature verification\n * @return {Promise<Array>} Object with verification errors and warnings\n */\nasync function verifyTx ({ tx, signatures, rlpEncoded }, networkId) {\n  networkId = networkId || this.getNetworkId() || 'ae_mainnet'\n  // Fetch data for verification\n  const ownerPublicKey = getOwnerPublicKey(tx)\n  const gas = tx.hasOwnProperty('gas') ? +tx.gas : 0\n  const txType = OBJECT_ID_TX_TYPE[+tx.tag]\n  const resolvedData = {\n    minFee: calculateFee(0, txType, { gas, params: tx, showWarning: false }),\n    ...(await resolveDataForBase(this, { ownerPublicKey })),\n    ...tx,\n    txType\n  }\n  const signatureVerification = signatures && signatures.length\n    ? verifySchema(SIGNATURE_VERIFICATION_SCHEMA, {\n      rlpEncoded,\n      signature: signatures[0].raw,\n      ownerPublicKey,\n      networkId\n    })\n    : []\n  const baseVerification = verifySchema(BASE_VERIFICATION_SCHEMA, resolvedData)\n\n  return [\n    ...baseVerification,\n    ...signatureVerification,\n    ...customVerification(txType, resolvedData)\n  ]\n}\n\n/**\n * Verification for speciific txType\n * @param txType\n * @param data\n * @return {Array}\n */\nfunction customVerification (txType, data) {\n  switch (txType) {\n    case TX_TYPE.contractCreate:\n    case TX_TYPE.contractCall:\n    case TX_TYPE.oracleRegister:\n      return verifySchema(CONTRACT_VERIFICATION_SCHEMA, data)\n    default:\n      return []\n  }\n}\n\n/**\n * Transaction Validator Stamp\n * This stamp give us possibility to unpack and validate some of transaction properties,\n * to make sure we can post it to the chain\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/validator\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.url] - Node url\n * @param {Object} [options.internalUrl] - Node internal url\n * @return {Object} Transaction Validator instance\n * @example TransactionValidator({url: 'https://sdk-testnet.aepps.com'})\n */\nconst TransactionValidator = NodePool.compose({\n  methods: {\n    verifyTx,\n    unpackAndVerify\n  }\n})\n\nexport default TransactionValidator\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\nimport * as R from 'ramda'\nimport Chain from './'\nimport Oracle from '../oracle/node'\nimport formatBalance from '../utils/amount-formatter'\nimport TransactionValidator from '../tx/validator'\nimport NodePool from '../node-pool'\n\n/**\n * ChainNode module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/chain}.\n * @module @aeternity/aepp-sdk/es/chain/node\n * @export ChainNode\n * @example import ChainNode from '@aeternity/aepp-sdk/es/chain/node'\n */\n\nasync function sendTransaction (tx, options = {}) {\n  const { waitMined, verify } = R.merge(this.Chain.defaults, options)\n  // Verify transaction before broadcast\n  if (this.verifyTxBeforeSend || verify) {\n    const { validation, tx: txObject, txType } = await this.unpackAndVerify(tx)\n    if (validation.length) {\n      throw Object.assign(Error('Transaction verification error'), {\n        code: 'TX_VERIFICATION_ERROR',\n        errorData: { validation, tx: txObject, txType },\n        txHash: tx\n      })\n    }\n  }\n\n  try {\n    const { txHash } = await this.api.postTransaction({ tx })\n    return waitMined ? { ...(await this.poll(txHash, options)), rawTx: tx } : { hash: txHash, rawTx: tx }\n  } catch (e) {\n    throw Object.assign(\n      (new Error(e.message)),\n      {\n        rawTx: tx,\n        verifyTx: () => this.unpackAndVerify(tx)\n      }\n    )\n  }\n}\n\nasync function getAccount (address, { height, hash } = {}) {\n  if (height) return this.api.getAccountByPubkeyAndHeight(address, height)\n  if (hash) return this.api.getAccountByPubkeyAndHash(address, hash)\n  return this.api.getAccountByPubkey(address)\n}\n\nasync function balance (address, { height, hash, format = false } = {}) {\n  const { balance } = await this.getAccount(address, { hash, height })\n\n  return format ? formatBalance(balance) : balance.toString()\n}\n\nasync function tx (hash, info = false) {\n  const tx = await this.api.getTransactionByHash(hash)\n  if (['ContractCreateTx', 'ContractCallTx'].includes(tx.tx.type) && info) {\n    try {\n      return { ...tx, ...await this.getTxInfo(hash) }\n    } catch (e) {\n      return tx\n    }\n  }\n  return tx\n}\n\nasync function height () {\n  return (await this.api.getCurrentKeyBlockHeight()).height\n}\n\nasync function pause (duration) {\n  await new Promise(resolve => setTimeout(resolve, duration))\n}\n\nasync function awaitHeight (h, { interval = 5000, attempts = 20 } = {}) {\n  const instance = this\n\n  async function probe (left) {\n    const current = await instance.height()\n    if (current >= h) {\n      return current\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms, current=${current}, h=${h}`)\n  }\n\n  return probe(attempts)\n}\n\nasync function topBlock () {\n  const top = await this.api.getTopBlock()\n  return top[R.head(R.keys(top))]\n}\n\nasync function poll (th, { blocks = 10, interval = 5000 } = {}) {\n  const instance = this\n  const max = await this.height() + blocks\n\n  async function probe () {\n    const tx = await instance.tx(th)\n    if (tx.blockHeight !== -1) {\n      return tx\n    }\n    if (await instance.height() < max) {\n      await pause(interval)\n      return probe()\n    }\n    throw new Error(`Giving up after ${blocks} blocks mined. TxHash ${th}`)\n  }\n\n  return probe()\n}\n\nasync function getTxInfo (hash) {\n  return this.api.getTransactionInfoByHash(hash).then(res => res.callInfo ? res.callInfo : res)\n}\n\nasync function mempool () {\n  return this.api.getPendingTransactions()\n}\n\nasync function getCurrentGeneration () {\n  return this.api.getCurrentGeneration()\n}\n\nasync function getGeneration (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getGenerationByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getGenerationByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockTransactions (hash) {\n  return (await this.api.getMicroBlockTransactionsByHash(hash)).transactions\n}\n\nasync function getKeyBlock (hashOrHeight) {\n  if (typeof hashOrHeight === 'string') return this.api.getKeyBlockByHash(hashOrHeight)\n  if (typeof hashOrHeight === 'number') return this.api.getKeyBlockByHeight(hashOrHeight)\n  throw new Error('Invalid param, param must be hash or height')\n}\n\nasync function getMicroBlockHeader (hash) {\n  return this.api.getMicroBlockHeaderByHash(hash)\n}\n\nasync function txDryRun (txs, accounts, top) {\n  return this.api.dryRunTxs({ txs, accounts, top })\n}\n\nasync function getContractByteCode (contractId) {\n  return this.api.getContractCode(contractId)\n}\n\nasync function getName (name) {\n  return this.api.getNameEntryByName(name)\n}\n\n/**\n * ChainNode Stamp\n *\n * This is implementation of {@link module:@aeternity/aepp-sdk/es/chain--Chain}\n * composed with {@link module:@aeternity/aepp-sdk/es/contract/node--ContractNodeAPI} and {@link module:@aeternity/aepp-sdk/es/oracle/node--OracleNodeAPI}\n * @function\n * @alias module:@aeternity/aepp-sdk/es/chain/node\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} ChainNode instance\n * @example ChainNode({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst ChainNode = Chain.compose(Oracle, TransactionValidator, NodePool, {\n  init ({ verifyTx = false }) {\n    this.verifyTxBeforeSend = verifyTx\n  },\n  methods: {\n    sendTransaction,\n    balance,\n    getAccount,\n    topBlock,\n    tx,\n    height,\n    awaitHeight,\n    poll,\n    getTxInfo,\n    mempool,\n    getCurrentGeneration,\n    getGeneration,\n    getMicroBlockHeader,\n    getMicroBlockTransactions,\n    getKeyBlock,\n    txDryRun,\n    getContractByteCode,\n    getName\n  }\n})\n\nexport default ChainNode\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Transaction module\n * @module @aeternity/aepp-sdk/es/tx/tx\n * @export Transaction\n * @example import Transaction from '@aeternity/aepp-sdk/es/tx/tx'\n */\n\nimport * as R from 'ramda'\n\nimport ChainNode from '../chain/node'\nimport Tx from './'\n\nimport { buildTx, calculateFee } from './builder'\nimport { MIN_GAS_PRICE, PROTOCOL_VM_ABI, TX_TYPE } from './builder/schema'\nimport { buildContractId, oracleQueryId } from './builder/helpers'\n\nasync function spendTx ({ senderId, recipientId, amount, payload = '' }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.spend, { senderId, ...R.head(arguments), payload })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee,\n      payload\n    }), TX_TYPE.spend)\n    : await this.api.postSpend(R.merge(R.head(arguments), {\n      amount: parseInt(amount),\n      recipientId,\n      senderId,\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      payload\n    }))\n\n  return tx\n}\n\nasync function namePreclaimTx ({ accountId, commitmentId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.namePreClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.namePreClaim)\n    : await this.api.postNamePreclaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameClaimTx ({ accountId, name, nameSalt }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameClaim, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameClaim)\n    : await this.api.postNameClaim(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameTransferTx ({ accountId, nameId, recipientId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameTransfer, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee }), TX_TYPE.nameTransfer)\n    : await this.api.postNameTransfer(R.merge(R.head(arguments), { recipientId, nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameUpdateTx ({ accountId, nameId, nameTtl, pointers, clientTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameUpdate, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameUpdate)\n    : await this.api.postNameUpdate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function nameRevokeTx ({ accountId, nameId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.nameRevoke, { senderId: accountId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee }), TX_TYPE.nameRevoke)\n    : await this.api.postNameRevoke(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee) }))\n\n  return tx\n}\n\nasync function contractCreateTx ({ ownerId, code, vmVersion, abiVersion, deposit, amount, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCreate, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return this.nativeMode\n    ? {\n      ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.contractCreate),\n      contractId: buildContractId(ownerId, nonce)\n    }\n    : this.api.postContractCreate(R.merge(R.head(arguments), { nonce, ttl, fee: parseInt(fee), gas: parseInt(gas), gasPrice, vmVersion: ctVersion.vmVersion, abiVersion: ctVersion.abiVersion }))\n}\n\nasync function contractCallTx ({ callerId, contractId, abiVersion, amount, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCall, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.contractCall, { senderId: callerId, ...R.head(arguments), gasPrice, abiVersion: ctVersion.abiVersion })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, abiVersion: ctVersion.abiVersion, gasPrice }), TX_TYPE.contractCall)\n    : await this.api.postContractCall(R.merge(R.head(arguments), {\n      nonce,\n      ttl,\n      fee: parseInt(fee),\n      gas: parseInt(gas),\n      gasPrice,\n      abiVersion: ctVersion.abiVersion\n    }))\n\n  return tx\n}\n\nasync function oracleRegisterTx ({ accountId, queryFormat, responseFormat, queryFee, oracleTtl, abiVersion }) {\n  const { abiVersion: abi } = this.getVmVersion(TX_TYPE.oracleRegister, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleRegister, { senderId: accountId, ...R.head(arguments), abiVersion: abi })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({\n      accountId,\n      queryFee,\n      abiVersion: abi,\n      fee,\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    }, TX_TYPE.oracleRegister)\n    : await this.api.postOracleRegister({\n      accountId,\n      queryFee,\n      abiVersion: abi,\n      fee: parseInt(fee),\n      oracleTtl,\n      nonce,\n      ttl,\n      queryFormat,\n      responseFormat\n    })\n\n  return tx\n}\n\nasync function oracleExtendTx ({ oracleId, callerId, oracleTtl }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleExtend, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, fee, oracleTtl, nonce, ttl }, TX_TYPE.oracleExtend)\n    : await this.api.postOracleExtend({ oracleId, fee: parseInt(fee), oracleTtl, nonce, ttl })\n\n  return tx\n}\n\nasync function oraclePostQueryTx ({ oracleId, responseTtl, query, queryTtl, queryFee, senderId }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleQuery, { senderId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, query, queryTtl, fee, queryFee, ttl, nonce, senderId }, TX_TYPE.oracleQuery)\n    : await this.api.postOracleQuery({\n      oracleId,\n      responseTtl,\n      query,\n      queryTtl,\n      fee: parseInt(fee),\n      queryFee,\n      ttl,\n      nonce,\n      senderId\n    })\n\n  return { tx, queryId: oracleQueryId(senderId, nonce, oracleId) }\n}\n\nasync function oracleRespondTx ({ oracleId, callerId, responseTtl, queryId, response }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.oracleResponse, { senderId: callerId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx({ oracleId, responseTtl, queryId, response, fee, ttl, nonce }, TX_TYPE.oracleResponse)\n    : await this.api.postOracleRespond({ oracleId, responseTtl, queryId, response, fee: parseInt(fee), ttl, nonce })\n  return tx\n}\n\nasync function channelCloseSoloTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelCloseSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelCloseSolo)\n    : await this.api.postChannelCloseSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSlashTx ({ channelId, fromId, payload, poi }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSlash, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSlash)\n    : await this.api.postChannelSlash(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      poi,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSettleTx ({ channelId, fromId, initiatorAmountFinal, responderAmountFinal }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSettle, { senderId: fromId, ...R.head(arguments) })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal,\n      responderAmountFinal,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSettle)\n    : await this.api.postChannelSettle(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      initiatorAmountFinal: parseInt(initiatorAmountFinal),\n      responderAmountFinal: parseInt(responderAmountFinal),\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\nasync function channelSnapshotSoloTx ({ channelId, fromId, payload }) {\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.channelSnapshotSolo, { senderId: fromId, ...R.head(arguments), payload })\n\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  const { tx } = this.nativeMode\n    ? buildTx(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee,\n      nonce\n    }), TX_TYPE.channelSnapshotSolo)\n    : await this.api.postChannelSnapshotSolo(R.merge(R.head(arguments), {\n      channelId,\n      fromId,\n      payload,\n      ttl,\n      fee: parseInt(fee),\n      nonce\n    }))\n\n  return tx\n}\n\n// eslint-disable-next-line no-unused-vars\nasync function gaAttachTx ({ ownerId, code, vmVersion, abiVersion, authFun, gas, gasPrice = MIN_GAS_PRICE, callData }) {\n  // Get VM_ABI version\n  const ctVersion = this.getVmVersion(TX_TYPE.contractCreate, R.head(arguments))\n  // Calculate fee, get absolute ttl (ttl + height), get account nonce\n  const { fee, ttl, nonce } = await this.prepareTxParams(TX_TYPE.gaAttach, { senderId: ownerId, ...R.head(arguments), ctVersion, gasPrice })\n  // Build transaction using sdk (if nativeMode) or build on `AETERNITY NODE` side\n  return {\n    ...buildTx(R.merge(R.head(arguments), { nonce, ttl, fee, ctVersion, gasPrice }), TX_TYPE.gaAttach),\n    contractId: buildContractId(ownerId, nonce)\n  }\n}\n\n/**\n * Validated vm/abi version or get default based on transaction type and NODE version\n *\n * @param {string} txType Type of transaction\n * @param {object} vmAbi Object with vm and abi version fields\n * @return {object} Object with vm/abi version ({ vmVersion: number, abiVersion: number })\n */\nfunction getVmVersion (txType, { vmVersion, abiVersion } = {}) {\n  const version = this.getNodeInfo().consensusProtocolVersion\n  const supportedProtocol = PROTOCOL_VM_ABI[version]\n  if (!supportedProtocol) throw new Error('Not supported consensus protocol version')\n  const protocolForTX = supportedProtocol[txType]\n  if (!protocolForTX) throw new Error('Not supported tx type')\n\n  const ctVersion = {\n    abiVersion: abiVersion !== undefined ? abiVersion : protocolForTX.abiVersion[0],\n    vmVersion: vmVersion !== undefined ? vmVersion : protocolForTX.vmVersion[0]\n  }\n  if (protocolForTX.vmVersion.length && !R.contains(ctVersion.vmVersion, protocolForTX.vmVersion)) throw new Error(`VM VERSION ${ctVersion.vmVersion} do not support by this node. Supported: [${protocolForTX.vmVersion}]`)\n  if (!R.contains(ctVersion.abiVersion, protocolForTX.abiVersion)) throw new Error(`ABI VERSION ${ctVersion.abiVersion} do not support by this node. Supported: [${protocolForTX.abiVersion}]`)\n\n  return ctVersion\n}\n\n/**\n * Compute the absolute ttl by adding the ttl to the current height of the chain\n *\n * @param {number} ttl\n * @param {boolean} relative ttl is absolute or relative(default: true(relative))\n * @return {number} Absolute Ttl\n */\nasync function calculateTtl (ttl = 0, relative = true) {\n  if (ttl === 0) return 0\n  if (ttl < 0) throw new Error('ttl must be greater than 0')\n\n  if (relative) {\n    const { height } = await this.api.getCurrentKeyBlock()\n    return +(height) + ttl\n  }\n  return ttl\n}\n\n/**\n * Get the next nonce to be used for a transaction for an account\n *\n * @param {string} accountId\n * @param {number} nonce\n * @return {number} Next Nonce\n */\nasync function getAccountNonce (accountId, nonce) {\n  if (nonce) return nonce\n  const { nonce: accountNonce } = await this.api.getAccountByPubkey(accountId).catch(() => ({ nonce: 0 }))\n  return accountNonce + 1\n}\n\n/**\n * Calculate fee, get absolute ttl (ttl + height), get account nonce\n *\n * @param {String} txType Type of transaction\n * @param {Object} params Object which contains all tx data\n * @return {Object} { ttl, nonce, fee } Object with account nonce, absolute ttl and transaction fee\n */\nasync function prepareTxParams (txType, { senderId, nonce: n, ttl: t, fee: f, gas, absoluteTtl }) {\n  const account = await this.getAccount(senderId).catch(e => ({ nonce: 0 }))\n  // Is GA account\n  if (account.contractId) {\n    n = 0\n  } else {\n    n = n || (account.nonce + 1)\n  }\n  const ttl = await (calculateTtl.bind(this)(t, !absoluteTtl))\n  const fee = calculateFee(f, txType, { showWarning: this.showWarning, gas, params: R.merge(R.last(arguments), { nonce: n, ttl }) })\n  return { fee, ttl, nonce: n }\n}\n\n/**\n * Transaction Stamp\n *\n * This is implementation of [Tx](api/tx.md) relays\n * the creation of transactions to {@link module:@aeternity/aepp-sdk/es/Node}.\n * This stamp provide ability to create native transaction's,\n * or transaction's using Node API.\n * As there is no built-in security between Node and client communication,\n * creating transaction using {@link module:@aeternity/aepp-sdk/es/Node} API\n * must never be used for production but can be very useful to verify other\n * implementations.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/tx/tx\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Boolean} [options.nativeMode=true] options.nativeMode - Use Native build of transaction's\n * @param {String} options.url - Node url\n * @param {String} options.internalUrl - Node internal url\n * @return {Object} Transaction instance\n * @example Transaction({url: 'https://sdk-testnet.aepps.com/'})\n */\nconst Transaction = ChainNode.compose(Tx, {\n  init ({ nativeMode = true, showWarning = false }) {\n    this.nativeMode = nativeMode\n    this.showWarning = showWarning\n  },\n  props: {\n    nativeMode: null,\n    showWarning: null\n  },\n  methods: {\n    spendTx,\n    namePreclaimTx,\n    nameClaimTx,\n    nameTransferTx,\n    nameUpdateTx,\n    nameRevokeTx,\n    contractCreateTx,\n    contractCallTx,\n    prepareTxParams,\n    oracleRegisterTx,\n    oracleExtendTx,\n    oraclePostQueryTx,\n    oracleRespondTx,\n    channelCloseSoloTx,\n    channelSlashTx,\n    channelSettleTx,\n    channelSnapshotSoloTx,\n    // Todo Enable GA\n    // gaAttachTx,\n    getAccountNonce,\n    getVmVersion\n  }\n})\n\nexport default Transaction\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Memory Account module\n * @module @aeternity/aepp-sdk/es/account/memory\n * @export MemoryAccount\n * @example import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory'\n */\n\nimport Account from './'\nimport * as Crypto from '../utils/crypto'\nimport { isHex } from '../utils/string'\nimport { decode } from '../tx/builder/helpers'\n\nconst secrets = new WeakMap()\n\nasync function sign (data) {\n  return Promise.resolve(Crypto.sign(data, secrets.get(this).secretKey))\n}\n\nasync function address (format = Crypto.ADDRESS_FORMAT.api) {\n  return Promise.resolve(Crypto.formatAddress(format, secrets.get(this).publicKey))\n}\n\nfunction setSecret (keyPair) {\n  secrets.set(this, {\n    secretKey: Buffer.isBuffer(keyPair.secretKey) ? keyPair.secretKey : Buffer.from(keyPair.secretKey, 'hex'),\n    publicKey: keyPair.publicKey\n  })\n}\n\nfunction validateKeyPair (keyPair) {\n  if (!keyPair || typeof keyPair !== 'object') throw new Error('KeyPair must be an object')\n  if (keyPair.pub && keyPair.priv) {\n    keyPair = { publicKey: keyPair.pub, secretKey: keyPair.priv }\n  }\n  if (!keyPair.secretKey || !keyPair.publicKey) throw new Error('KeyPair must must have \"secretKey\", \"publicKey\" properties')\n  if (typeof keyPair.publicKey !== 'string' || keyPair.publicKey.indexOf('ak_') === -1) throw new Error('Public Key must be a base58c string with \"ak_\" prefix')\n  if (\n    !Buffer.isBuffer(keyPair.secretKey) &&\n    (typeof keyPair.secretKey === 'string' && !isHex(keyPair.secretKey))\n  ) throw new Error('Secret key must be hex string or Buffer')\n\n  const pubBuffer = Buffer.from(decode(keyPair.publicKey, 'ak'))\n  if (!Crypto.isValidKeypair(Buffer.from(keyPair.secretKey, 'hex'), pubBuffer)) throw new Error('Invalid Key Pair')\n}\n\n/**\n * In-memory `Account` factory\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/memory\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} options.keypair - Key pair to use\n * @param {String} options.keypair.publicKey - Public key\n * @param {String} options.keypair.secretKey - Private key\n * @return {Account}\n */\nconst MemoryAccount = Account.compose({\n  init ({ keypair }) {\n    validateKeyPair(keypair)\n    if (keypair.hasOwnProperty('priv') && keypair.hasOwnProperty('pub')) {\n      keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n      console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n    }\n\n    this.setSecret(keypair)\n  },\n  methods: { sign, address, setSecret }\n})\n\nexport default MemoryAccount\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts Selector module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/accounts}.\n * @module @aeternity/aepp-sdk/es/account/selector\n * @export Account\n * @example import Selector from '@aeternity/aepp-sdk/es/account/selector'\n */\n\nimport Account from './'\nimport required from '@stamp/required'\nimport { assertedType } from '../utils/crypto'\n\nasync function sign (data, { onAccount } = {}) {\n  if (onAccount && !assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n  return this.signWith(onAccount || this.Selector.address, data)\n}\n\nasync function address ({ onAccount } = {}) {\n  if (onAccount) {\n    if (!assertedType(onAccount, 'ak', true)) throw new Error('Invalid account address, check \"onAccount\" value')\n    if (!this.accounts[onAccount]) throw Error(`Account for ${onAccount} not available`)\n    return Promise.resolve(onAccount)\n  }\n  if (this.Selector.address) return Promise.resolve(this.Selector.address)\n  throw new Error('You don\\'t have selected account')\n}\n\n/**\n * Select specific account\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @instance\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to select\n * @example selectAccount('ak_xxxxxxxx')\n */\nfunction selectAccount (address) {\n  if (!address || !assertedType(address, 'ak', true)) throw new Error(`Invalid account address`)\n  if (!this.accounts[address]) throw Error(`Account for ${address} not available`)\n  this.Selector.address = address\n}\n\n/**\n * Selector Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/account/selector\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Account} Account instance\n * @example Selector()\n */\nconst Selector = Account.compose({\n  async init ({ address }) {\n    if (!address) address = Object.keys(this.accounts)[0]\n    if (address && !assertedType(address, 'ak', true)) throw new Error(`Invalid account address`)\n    this.Selector.address = address\n  },\n  methods: { sign, address, selectAccount },\n  deepProps: {\n    Selector: {}\n  }\n}, required({\n  methods: { signWith: required }\n}))\n\nexport default Selector\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Accounts module\n * @module @aeternity/aepp-sdk/es/accounts\n * @export Accounts\n * @example import Accounts from '@aeternity/aepp-sdk/es/accounts'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from './utils/async-init'\nimport * as R from 'ramda'\nimport MemoryAccount from './account/memory'\nimport Selector from './account/selector'\nimport { envKeypair, generateKeyPair } from './utils/crypto'\n\n/**\n * Select specific account\n * @deprecated\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (keypair: {publicKey: String, secretKey: String}) => Void\n * @param {Object} keypair - Key pair to use\n * @param {String} keypair.publicKey - Public key\n * @param {String} keypair.secretKey - Private key\n * @return {Void}\n * @example setKeypair(keypair)\n */\nfunction setKeypair (keypair) {\n  const acc = this.accounts[this.Selector.address] || this._acc\n  if (keypair.hasOwnProperty('priv') && keypair.hasOwnProperty('pub')) {\n    keypair = { secretKey: keypair.priv, publicKey: keypair.pub }\n    console.warn('pub/priv naming for accounts has been deprecated, please use secretKey/publicKey')\n  }\n  acc.setSecret(keypair)\n  this.accounts[keypair.publicKey] = acc\n  delete this.accounts[this.Selector.address]\n  this.selectAccount(keypair.publicKey)\n}\n\n/**\n * Sign data blob with specific key\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (address: String, data: String) => data: Promise[String], throws: Error\n * @param {String} address - Public key of account to sign with\n * @param {String} data - Data blob to sign\n * @return {String} Signed data blob\n */\nasync function signWith (address, data) {\n  const account = this.accounts[address]\n\n  if (account === undefined) {\n    throw Error(`Account for ${address} not available`)\n  }\n\n  return account.sign(data)\n}\n\n/**\n * Add specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @category async\n * @rtype (account: Account, { select: Boolean }) => Void\n * @param {Object} account - Account instance\n * @param {Object} [options={}] - Options\n * @param {Boolean} [options.select] - Select account\n * @return {Void}\n * @example addAccount(account)\n */\nasync function addAccount (account, { select } = {}) {\n  const address = await account.address()\n  this.accounts[address] = account\n  if (select) this.selectAccount(address)\n}\n\n/**\n * Remove specific account\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype (address: String) => Void\n * @param {String} address - Address of account to remove\n * @return {Void}\n * @example removeAccount(address)\n */\nfunction removeAccount (address) {\n  if (this.accounts[address]) delete this.accounts[address]\n  if (this.Selector.address === address) this.Selector.address = undefined\n}\n\n/**\n * Get accounts addresses\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @function\n * @rtype () => String[]\n * @return {String[]}\n * @example addresses()\n */\nfunction addresses () {\n  return Object.keys(this.accounts)\n}\n\n/**\n * Accounts Stamp\n *\n * The purpose of the Accounts Stamp is to wrap up\n * {@link module:@aeternity/aepp-sdk/es/account--Account} objects and provide a\n * common interface to all of them. Accounts are a substantial part of\n * {@link module:@aeternity/aepp-sdk/es/ae/wallet--Wallet}s.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/accounts\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Array} [options.accounts] - Accounts array\n * @return {Object} Accounts instance\n * @example\n * const accounts = await Accounts({ accounts: [ MemmoryAccount({ keypair: 'keypair_object' }) ] })\n * await accounts.addAccount(account, { select: true }) // Add account and make it selected\n * accounts.removeAccount(address) // Remove account\n * accounts.selectAccount(address) // Select account\n * accounts.addresses() // Get available accounts\n */\nconst Accounts = stampit(AsyncInit, {\n  async init ({ accounts = [], keypair }) { // Deprecated. TODO Remove `keypair` param\n    this.accounts = R.fromPairs(await Promise.all(accounts.map(async a => [await a.address(), a])))\n    keypair = keypair || envKeypair(process.env, true)\n    if (keypair) {\n      await this.addAccount(await MemoryAccount({ keypair }), { select: !this.Selector.address })\n    }\n    // @Todo Remove after removing depricated `setKeypair` fn.\n    //  Prevent BREAKING CHANGES\n    //  Pre-init memoryAccount object to prevent async operation in `setKeypair` function\n    this._acc = await MemoryAccount({ keypair: generateKeyPair() })\n  },\n  props: {\n    accounts: {}\n  },\n  methods: { signWith, addAccount, removeAccount, setKeypair, addresses }\n}, Selector)\n\nexport default Accounts\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aens module - routines to interact with the æternity naming system\n *\n * The high-level description of the naming system is\n * https://github.com/aeternity/protocol/blob/master/AENS.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/aens\n * @export Aens\n * @example import Aens from '@aeternity/aepp-sdk/es/ae/aens'\n */\n\nimport * as R from 'ramda'\nimport { encodeBase58Check, salt } from '../utils/crypto'\nimport { commitmentHash } from '../tx/builder/helpers'\nimport Ae from './'\n\n/**\n * Transfer a domain to another account\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} nameId\n * @param {String} account\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function transfer (nameId, account, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameTransferTx = await this.nameTransferTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt),\n    recipientId: account\n  }))\n\n  return this.send(nameTransferTx, opt)\n}\n\n/**\n * Revoke a domain\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @category async\n * @param {String} nameId\n * @param {Object} [options={}]\n * @return {Promise<Object>}\n */\nasync function revoke (nameId, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const nameRevokeTx = await this.nameRevokeTx(R.merge(opt, {\n    nameId,\n    accountId: await this.address(opt)\n  }))\n\n  return this.send(nameRevokeTx, opt)\n}\n\n/**\n * What kind of a hash is this? If it begins with 'ak_' it is an\n * account key, if with 'ok_' it's an oracle key.\n *\n * @param s - the hash.\n * returns the type, or throws an exception if type not found.\n */\nfunction classify (s) {\n  const keys = {\n    ak: 'account_pubkey',\n    ok: 'oracle_pubkey'\n  }\n\n  if (!s.match(/^[a-z]{2}_.+/)) {\n    throw Error('Not a valid hash')\n  }\n\n  const klass = s.substr(0, 2)\n  if (klass in keys) {\n    return keys[klass]\n  } else {\n    throw Error(`Unknown class ${klass}`)\n  }\n}\n\n/**\n * Update an aens entry\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param nameId domain hash\n * @param target new target\n * @param options\n * @return {Object}\n */\nasync function update (nameId, target, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const nameUpdateTx = await this.nameUpdateTx(R.merge(opt, {\n    nameId: nameId,\n    accountId: await this.address(opt),\n    pointers: [R.fromPairs([['id', target], ['key', classify(target)]])]\n  }))\n\n  return this.send(nameUpdateTx, opt)\n}\n\n/**\n * Query the status of an AENS registration\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @return {Promise<Object>}\n */\nasync function query (name, opt = {}) {\n  const o = await this.getName(name)\n  const nameId = o.id\n\n  return Object.freeze(Object.assign(o, {\n    pointers: o.pointers || {},\n    update: async (target, options) => {\n      return {\n        ...(await this.aensUpdate(nameId, target, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    transfer: async (account, options) => {\n      return {\n        ...(await this.aensTransfer(nameId, account, R.merge(opt, options))),\n        ...(await this.aensQuery(name))\n      }\n    },\n    revoke: async (options) => this.aensRevoke(nameId, R.merge(opt, options))\n  }))\n}\n\n/**\n * Claim a previously preclaimed registration. This can only be done after the\n * preclaim step\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {String} name\n * @param {String} salt\n * @param {Record} [options={}]\n * @return {Promise<Object>} the result of the claim\n */\nasync function claim (name, salt, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const claimTx = await this.nameClaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    nameSalt: salt,\n    name: `nm_${encodeBase58Check(Buffer.from(name))}`\n  }))\n\n  const result = await this.send(claimTx, opt)\n\n  return {\n    ...result,\n    ...opt.waitMined && await this.aensQuery(name, opt)\n  }\n}\n\n/**\n * Preclaim a name. Sends a hash of the name and a random salt to the node\n * @instance\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @param {string} name\n * @param {Record} [options={}]\n * @return {Promise<Object>}\n */\nasync function preclaim (name, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const _salt = salt()\n  const height = await this.height()\n  const hash = await commitmentHash(name, _salt)\n\n  const preclaimTx = await this.namePreclaimTx(R.merge(opt, {\n    accountId: await this.address(opt),\n    commitmentId: hash\n  }))\n\n  const result = await this.send(preclaimTx, opt)\n\n  return Object.freeze({\n    ...result,\n    height,\n    claim: options => this.aensClaim(name, _salt, { ...options, onAccount: opt.onAccount }),\n    salt: _salt,\n    commitmentId: hash\n  })\n}\n\n/**\n * Aens Stamp\n *\n * Aens provides name-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aens\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aens instance\n */\nconst Aens = Ae.compose({\n  methods: {\n    aensQuery: query,\n    aensPreclaim: preclaim,\n    aensClaim: claim,\n    aensUpdate: update,\n    aensTransfer: transfer,\n    aensRevoke: revoke\n  },\n  deepProps: { Ae: { defaults: {\n    clientTtl: 1,\n    nameTtl: 50000 // aec_governance:name_claim_max_expiration() => 50000\n  } } }\n})\n\nexport default Aens\n","import axios from 'axios'\nimport JsonBig from './json-big'\nimport * as R from 'ramda'\nimport stampit from '@stamp/it'\n\nasync function get (url, options) {\n  return processResponse(\n    axios.get(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function post (url, body, options) {\n  return processResponse(\n    axios.post(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function put (url, body, options) {\n  return processResponse(\n    axios.put(`${this.baseUrl}${url}`, body, R.merge(this.httpConfig, options))\n  )\n}\n\nasync function _delete (url, options) {\n  return processResponse(\n    axios.delete(`${this.baseUrl}${url}`, R.merge(this.httpConfig, options))\n  )\n}\n\nfunction changeBaseUrl (newUrl) {\n  this.baseUrl = newUrl\n}\n\nconst processResponse = async (res) => {\n  try {\n    return (await res).data\n  } catch (e) {\n    if (!e.response) throw e\n    throw Object.assign(\n      Error(`Http request for ${e.config.url} failed with status code ${e.response.status}. Status: ${e.response.statusText}. \\nError data: ${JSON.stringify(e.response.data)}`),\n      { data: e.response.data }\n    )\n  }\n}\n\nconst Http = stampit({\n  init ({ baseUrl }) {\n    this.baseUrl = baseUrl\n  },\n  methods: {\n    changeBaseUrl,\n    get,\n    post,\n    put,\n    'delete': _delete\n  },\n  props: {\n    httpConfig: {\n      headers: { 'Content-Type': 'application/json' },\n      transformResponse: [(data) => {\n        try {\n          return JsonBig.parse(data)\n        } catch (e) {\n          return data\n        }\n      }]\n    }\n  }\n})\n\nexport default Http\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract Base module\n * @module @aeternity/aepp-sdk/es/contract\n * @export Contract\n * @example import ContractBase from '@aeternity/aepp-sdk/es/contract'\n */\n\nimport stampit from '@stamp/it'\nimport { required } from '@stamp/required'\n\n/**\n * Basic Contract Stamp\n *\n * This stamp include api call's related to contract functionality.\n * Attempting to create instances from the Stamp without overwriting all\n * abstract methods using composition will result in an exception.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n */\nconst ContractBase = stampit({\n  deepConf: {\n    Contract: {\n      methods: [\n        'contractEncodeCallDataAPI',\n        'contractDecodeDataAPI',\n        'compileContractAPI',\n        'contractDecodeCallDataBySourceAPI',\n        'contractDecodeCallDataByCodeAPI',\n        'contractGetACI',\n        'setCompilerUrl',\n        'getCompilerVersion',\n        'contractDecodeCallResultAPI'\n      ]\n    }\n  }\n}, required({\n  methods: {\n    contractEncodeCallDataAPI: required,\n    contractDecodeDataAPI: required,\n    compileContractAPI: required,\n    contractGetACI: required,\n    setCompilerUrl: required,\n    getCompilerVersion: required,\n    contractDecodeCallResultAPI: required\n  }\n}))\n\n/**\n * Encode contract data\n * @function contractEncodeCallDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, name: String, args: Array) => callData: Promise[String]\n * @param {String} source - Contract source code\n * @param {String} name - Function name\n * @param {Array} args - Function argument's\n * @return {String} - Contract encoded data\n */\n\n/**\n * Decode data\n * @function contractDecodeDataAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (type: String, data: String) => decodedResult: Promise[String]\n * @param {String} type - Contract call result type\n * @param {String} data - Encoded contract call result\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode contract call result data\n * @function contractDecodeCallResultAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, fn: String, callValue: String, callResult: String) => decodedResult: Promise[String]\n * @param {String} source - Contract source\n * @param {String} fn - Fn name\n * @param {String} callValue - result data (cb_das...)\n * @param {String} callResult - contract call result status('ok', 'revert', ...)\n * @return {String} - Decoded contract call result\n */\n\n/**\n * Decode call data by source\n * @function contractDecodeCallDataBySourceAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (source: String, function: String, callData: String) => decodedResult: Promise[String]\n * @param {String} source - contract source\n * @param {String} function - function name\n * @param {String} callData - Encoded contract call data\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Decode call data by bytecode\n * @function contractDecodeCallDataByCodeAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, callData: String) => decodedResult: Promise[String]\n * @param {String} code - contract byte code\n * @param {String} callData - Encoded contract call data\n * @return {String} - Decoded contract call data\n */\n\n/**\n * Compile contract\n * @function compileContractAPI\n * @instance\n * @abstract\n * @category async\n * @rtype (code: String, options?: Object) => compiledContract: Object\n * @param {String} code - Contract source code\n * @param {Object} [options={}] - Options\n * @return {Object} Object which contain bytecode of contract\n */\n\n/**\n * Set compiler url\n * @function setCompilerUrl\n * @instance\n * @abstract\n * @category async\n * @rtype (url: String) => void\n * @param {String} url - Compiler url\n * @return {void}\n */\n\n/**\n * Get Compiler Version\n * @function getCompilerVersion\n * @instance\n * @abstract\n * @category async\n * @rtype () => String\n * @return {String} Compiler version\n */\n\nexport default ContractBase\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractCompilerAPI module\n *\n * This is the complement to {@link module:@aeternity/aepp-sdk/es/contract}.\n * @module @aeternity/aepp-sdk/es/contract/compiler\n * @export ContractCompilerAPI\n * @example import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler'\n */\n\nimport Http from '../utils/http'\nimport ContractBase from './index'\nimport semverSatisfies from '../utils/semver-satisfies'\nimport AsyncInit from '../utils/async-init'\n\nasync function getCompilerVersion (options = {}) {\n  return this.http\n    .get('/version', options)\n    .then(({ version }) => version)\n}\n\nasync function contractEncodeCallDataAPI (source, name, args = [], options = {}) {\n  this.isInit()\n  return this.http\n    .post('/encode-calldata', { source, 'function': name, arguments: args }, options)\n    .then(({ calldata }) => calldata)\n}\n\nasync function contractDecodeCallDataByCodeAPI (bytecode, calldata, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/bytecode', { bytecode, calldata }, options)\n}\n\nasync function contractDecodeCallDataBySourceAPI (source, fn, callData, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-calldata/source', { 'function': fn, source, calldata: callData }, options)\n}\n\nasync function contractDecodeCallResultAPI (source, fn, callValue, callResult, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-call-result', { 'function': fn, source, 'call-result': callResult, 'call-value': callValue }, options)\n}\n\nasync function contractDecodeDataAPI (type, data, options = {}) {\n  this.isInit()\n  return this.http\n    .post('/decode-data', { data, 'sophia-type': type }, options)\n    .then(({ data }) => data)\n}\n\nasync function compileContractAPI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/compile', { code, options }, options)\n    .then(({ bytecode }) => bytecode)\n}\n\nasync function contractGetACI (code, options = {}) {\n  this.isInit()\n  return this.http.post('/aci', { code, options }, options)\n}\n\nasync function setCompilerUrl (url, { forceCompatibility } = {}) {\n  this.http.changeBaseUrl(url)\n  this.compilerVersion = null\n  await this.checkCompatibility({ forceCompatibility })\n}\n\nasync function checkCompatibility ({ force = false, forceCompatibility = false } = {}) {\n  this.compilerVersion = await this.getCompilerVersion().catch(e => null)\n  if (!this.compilerVersion && !force) throw new Error('Compiler do not respond')\n  if (!forceCompatibility && this.compilerVersion && !semverSatisfies(this.compilerVersion.split('-')[0], COMPILER_GE_VERSION, COMPILER_LT_VERSION)) {\n    const version = this.compilerVersion\n    this.compilerVersion = null\n    throw new Error(`Unsupported compiler version ${version}. ` +\n      `Supported: >= ${COMPILER_GE_VERSION} < ${COMPILER_LT_VERSION}`)\n  }\n}\n\nfunction isInit () {\n  if (this.compilerVersion === null) throw Error('Compiler not defined')\n  return true\n}\n\n/**\n * Contract Compiler Stamp\n *\n * This stamp include api call's related to contract compiler functionality.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/compiler\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} [options.compilerUrl] compilerUrl - Url for compiler API\n * @return {Object} Contract compiler instance\n * @example ContractCompilerAPI({ compilerUrl: 'COMPILER_URL' })\n */\nconst ContractCompilerAPI = AsyncInit.compose(ContractBase, {\n  async init ({ compilerUrl = this.compilerUrl, forceCompatibility = false }) {\n    this.http = Http({ baseUrl: compilerUrl })\n    await this.checkCompatibility({ force: true, forceCompatibility })\n  },\n  methods: {\n    contractEncodeCallDataAPI,\n    contractDecodeDataAPI,\n    compileContractAPI,\n    contractGetACI,\n    contractDecodeCallDataByCodeAPI,\n    contractDecodeCallDataBySourceAPI,\n    contractDecodeCallResultAPI,\n    setCompilerUrl,\n    getCompilerVersion,\n    isInit,\n    checkCompatibility\n  },\n  props: {\n    compilerVersion: null\n  }\n})\n\nconst COMPILER_GE_VERSION = '3.1.0'\nconst COMPILER_LT_VERSION = '4.0.0'\n\nexport default ContractCompilerAPI\n","/* eslint-disable no-unused-vars */\nimport Joi from 'joi-browser'\n\nexport const SOPHIA_TYPES = [\n  'int',\n  'string',\n  'tuple',\n  'address',\n  'bool',\n  'list',\n  'map',\n  'record',\n  'option',\n  'oracle',\n  'oracleQuery',\n  'hash',\n  'signature',\n  'bytes',\n  'variant'\n].reduce((acc, type) => ({ ...acc, [type]: type }), {})\n\nexport function injectVars (t, aciType) {\n  const [[baseType, generic]] = Object.entries(aciType.typedef)\n  const [[_, varianValue]] = Object.entries(t)\n  switch (baseType) {\n    case SOPHIA_TYPES.variant:\n      return {\n        [baseType]: generic.map(el => {\n          const [tag, gen] = Object.entries(el)[0]\n          return {\n            [tag]: gen.map(type => {\n              const index = aciType.vars.map(e => e.name).indexOf(type)\n              return index === -1\n                ? type\n                : varianValue[index]\n            })\n          }\n        })\n      }\n  }\n}\n\n/**\n * Ling Type Defs\n * @param t\n * @param bindings\n * @return {Object}\n */\nexport function linkTypeDefs (t, bindings) {\n  const [_, typeDef] = typeof t === 'object' ? Object.keys(t)[0].split('.') : t.split('.')\n  const aciType = [\n    ...bindings.typedef,\n    { name: 'state', typedef: bindings.state, vars: [] }\n  ].find(({ name }) => name === typeDef)\n  if (aciType.vars.length) {\n    aciType.typedef = injectVars(t, aciType)\n  }\n\n  return aciType.typedef\n}\n\n/**\n * Parse sophia type\n * @param type\n * @param returnType\n * @return {Object}\n */\nexport function readType (type, { bindings } = {}) {\n  let [t] = Array.isArray(type) ? type : [type]\n\n  // Link State and typeDef\n  if (\n    (typeof t === 'string' && t.indexOf(bindings.contractName) !== -1) ||\n    (typeof t === 'object' && Object.keys(t)[0] && Object.keys(t)[0].indexOf(bindings.contractName) !== -1)\n  ) {\n    t = linkTypeDefs(t, bindings)\n  }\n\n  // Map, Tuple, List, Record, Bytes\n  if (typeof t === 'object') {\n    const [[baseType, generic]] = Object.entries(t)\n    return { t: baseType, generic }\n  }\n  // Base types\n  if (typeof t === 'string') return { t }\n}\n\n// FUNCTION ARGUMENTS TRANSFORMATION ↓↓↓\n\n/**\n * Transform JS type to Sophia-type\n * @param type\n * @param value\n * @param bindings\n * @return {string}\n */\nexport async function transform (type, value, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.string:\n      return `\"${value}\"`\n    case SOPHIA_TYPES.list:\n      return `[${await Promise.all(value.map(async el => transform(generic, el, { bindings })))}]`\n    case SOPHIA_TYPES.tuple:\n      return `(${await Promise.all(value.map(async (el, i) => transform(generic[i], el, {\n        bindings\n      })))})`\n    case SOPHIA_TYPES.option:\n      const optionV = await value.catch(e => undefined)\n      return optionV === undefined ? 'None' : `Some(${await transform(generic, optionV, {\n        bindings\n      })})`\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return `#${typeof value === 'string' ? value : Buffer.from(value).toString('hex')}`\n    case SOPHIA_TYPES.record:\n      return `{${await generic.reduce(\n        async (acc, { name, type }, i) => {\n          acc = await acc\n          acc += `${i !== 0 ? ',' : ''}${name} = ${await transform(type, value[name], {\n            bindings\n          })}`\n          return acc\n        },\n        ''\n      )}}`\n    case SOPHIA_TYPES.map:\n      return transformMap(value, generic, { bindings })\n    case SOPHIA_TYPES.variant:\n      return transformVariant(value, generic, { bindings })\n  }\n\n  return `${value}`\n}\n\nasync function transformVariant (value, generic, { bindings }) {\n  const [[variant, variantArgs]] = typeof value === 'string' ? [[value, []]] : Object.entries(value)\n  const [[v, type]] = Object.entries(generic.find(o => Object.keys(o)[0].toLowerCase() === variant.toLowerCase()))\n  return `${v}${!type.length\n    ? ''\n    : `(${await Promise.all(variantArgs.slice(0, type.length).map(async (el, i) => transform(type[i], el, {\n      bindings\n    })))})`\n  }`\n}\n\nexport async function transformMap (value, generic, { bindings }) {\n  if (value instanceof Map) {\n    value = Array.from(value.entries())\n  }\n  if (!Array.isArray(value) && value instanceof Object) {\n    value = Object.entries(value)\n  }\n\n  return `{${await value\n    .reduce(\n      async (acc, [key, value], i) => {\n        acc = await acc\n        if (i !== 0) acc += ','\n        acc += `[${await transform(generic[0], key, {\n          bindings\n        })}] = ${await transform(generic[1], value, { bindings })}`\n        return acc\n      },\n      ``\n    )\n  }}`\n}\n\n// FUNCTION RETURN VALUE TRANSFORMATION ↓↓↓\n\n/**\n * Transform decoded data to JS type\n * @param aci\n * @param result\n * @param transformDecodedData\n * @return {*}\n */\nexport function transformDecodedData (aci, result, { skipTransformDecoded = false, addressPrefix = 'ak', bindings } = {}) {\n  if (skipTransformDecoded) return result\n  const { t, generic } = readType(aci, { bindings })\n\n  switch (t) {\n    case SOPHIA_TYPES.bool:\n      return !!result\n    case SOPHIA_TYPES.address:\n      return result === 0\n        ? 0\n        : result\n    case SOPHIA_TYPES.hash:\n    case SOPHIA_TYPES.bytes:\n    case SOPHIA_TYPES.signature:\n      return result.split('#')[1]\n    case SOPHIA_TYPES.map:\n      const [keyT, valueT] = generic\n      return result\n        .reduce(\n          (acc, [key, val]) => {\n            key = transformDecodedData(keyT, key, { bindings })\n            val = transformDecodedData(valueT, val, { bindings })\n            acc.push([key, val])\n            return acc\n          },\n          []\n        )\n    case SOPHIA_TYPES.option:\n      if (result === 'None') return undefined\n      const [[variantType, [value]]] = Object.entries(result)\n      return variantType === 'Some' ? transformDecodedData(generic, value, { bindings }) : undefined\n    case SOPHIA_TYPES.list:\n      return result.map((value) => transformDecodedData(generic, value, { bindings }))\n    case SOPHIA_TYPES.tuple:\n      return result.map((value, i) => { return transformDecodedData(generic[i], value, { bindings }) })\n    case SOPHIA_TYPES.record:\n      const genericMap = generic.reduce((acc, val) => ({ ...acc, [val.name]: { type: val.type } }), {})\n      return Object.entries(result).reduce(\n        (acc, [name, value]) =>\n          ({\n            ...acc,\n            [name]: transformDecodedData(genericMap[name].type, value, { bindings })\n          }),\n        {}\n      )\n  }\n  return result\n}\n\n// FUNCTION ARGUMENTS VALIDATION ↓↓↓\n\n/**\n * Prepare Joi validation schema for sophia types\n * @param type\n * @param bindings\n * @return {Object} JoiSchema\n */\nexport function prepareSchema (type, { bindings } = {}) {\n  let { t, generic } = readType(type, { bindings })\n\n  if (!Object.keys(SOPHIA_TYPES).includes(t)) t = SOPHIA_TYPES.address // Handle Contract address transformation\n  switch (t) {\n    case SOPHIA_TYPES.int:\n      return Joi.number().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.variant:\n      return Joi.alternatives().try([\n        Joi.string().valid(\n          ...generic.reduce((acc, el) => {\n            const [[t, g]] = Object.entries(el)\n            if (!g || !g.length) acc.push(t)\n            return acc\n          }, [])\n        ),\n        Joi.object(generic\n          .reduce(\n            (acc, el) => {\n              const variant = Object.keys(el)[0]\n              return { ...acc, [variant]: Joi.array() }\n            },\n            {})\n        ).or(...generic.map(e => Object.keys(e)[0]))\n      ])\n    case SOPHIA_TYPES.string:\n      return Joi.string().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.address:\n      return Joi.string().regex(/^(ak_|ct_|ok_|oq_)/).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bool:\n      return Joi.boolean().error(getJoiErrorMsg)\n    case SOPHIA_TYPES.list:\n      return Joi.array().items(prepareSchema(generic, { bindings })).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.tuple:\n      return Joi.array().ordered(generic.map(type => prepareSchema(type, { bindings }).required())).label('Tuple argument').error(getJoiErrorMsg)\n    case SOPHIA_TYPES.record:\n      return Joi.object(\n        generic.reduce((acc, { name, type }) => ({ ...acc, [name]: prepareSchema(type, { bindings }) }), {})\n      ).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.hash:\n      return JoiBinary.binary().bufferCheck(32).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.bytes:\n      return JoiBinary.binary().bufferCheck(generic).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.signature:\n      return JoiBinary.binary().bufferCheck(64).error(getJoiErrorMsg)\n    case SOPHIA_TYPES.option:\n      return Joi.object().type(Promise).error(getJoiErrorMsg)\n    // @Todo Need to transform Map to Array of arrays before validating it\n    // case SOPHIA_TYPES.map:\n    //   return Joi.array().items(Joi.array().ordered(generic.map(type => prepareSchema(type))))\n    default:\n      return Joi.any()\n  }\n}\n\n/**\n * Parse Joi validation error message\n * @param errors\n * @return {Object} JoiError\n */\nexport function getJoiErrorMsg (errors) {\n  return errors.map(err => {\n    const { path, type, context } = err\n    let value = context.hasOwnProperty('value') ? context.value : context.label\n    value = typeof value === 'object' ? JSON.stringify(value).slice(1).slice(0, -1) : value\n    switch (type) {\n      case 'string.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a string` })\n      case 'number.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a number` })\n      case 'boolean.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a boolean` })\n      case 'array.base':\n        return ({ ...err, message: `Value \"${value}\" at path: [${path}] not a array` })\n      case 'object.base':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a object` })\n      case 'object.type':\n        return ({ ...err, message: `Value '${value}' at path: [${path}] not a ${context.type}` })\n      case 'binary.bufferCheck':\n        return ({\n          ...err,\n          message: `Value '${Buffer.from(value).toString('hex')}' at path: [${path}] not a ${context.size} bytes`\n        })\n      default:\n        return err\n    }\n  })\n}\n\n/**\n * Custom Joi Validator for binary type\n */\nconst JoiBinary = Joi.extend((joi) => ({\n  name: 'binary',\n  base: joi.any(),\n  pre (value, state, options) {\n    if (options.convert && typeof value === 'string') {\n      try {\n        return Buffer.from(value, 'hex')\n      } catch (e) { return undefined }\n    }\n\n    return Buffer.from(value)\n  },\n  rules: [\n    {\n      name: 'bufferCheck',\n      params: {\n        size: joi.number().required()\n      },\n      validate (params, value, state, options) {\n        value = value === 'string' ? Buffer.from(value, 'hex') : Buffer.from(value)\n        if (!Buffer.isBuffer(value)) {\n          return this.createError('binary.base', { value }, state, options)\n        }\n        if (value.length !== params.size) {\n          return this.createError('binary.bufferCheck', { value, size: params.size }, state, options)\n        }\n\n        return value\n      }\n    }\n  ]\n}))\n\n/**\n * Validation contract function arguments\n * @param aci\n * @param params\n */\nexport function validateArguments (aci, params) {\n  const validationSchema = Joi.array().ordered(\n    aci.arguments\n      .map(({ type }, i) => prepareSchema(type, { bindings: aci.bindings }).label(`[${params[i]}]`))\n  ).label('Argument')\n  const { error } = Joi.validate(params, validationSchema, { abortEarly: false })\n  if (error) {\n    throw error\n  }\n}\n","import * as R from 'ramda'\n\n/**\n * Get function schema from contract ACI object\n * @param {Object} aci Contract ACI object\n * @param {String} name Function name\n * @return {Object} function ACI\n */\nexport function getFunctionACI (aci, name) {\n  const fn = aci.functions.find(f => f.name === name)\n  if (!fn && name !== 'init') throw new Error(`Function ${name} doesn't exist in contract`)\n\n  return {\n    ...fn,\n    bindings: {\n      state: aci.state,\n      typedef: aci.type_defs,\n      contractName: aci.name\n    }\n  }\n}\n\n/**\n * Build contract methods base on ACI\n * @return {Object} Contract instance methods\n */\nexport const buildContractMethods = (instance) => () => ({\n  ...instance.aci\n    ? instance\n      .aci\n      .functions\n      .reduce(\n        (acc, { name, arguments: aciArgs, stateful }) => ({\n          ...acc,\n          [name]: Object.assign(\n            function () {\n              const { opt, args } = parseArguments(aciArgs)(arguments)\n              if (name === 'init') return instance.deploy(args, opt)\n              return instance.call(name, args, { callStatic: !stateful, ...opt })\n            },\n            {\n              get () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                return instance.call(name, args, { ...opt, callStatic: true })\n              },\n              send () {\n                const { opt, args } = parseArguments(aciArgs)(arguments)\n                if (name === 'init') return instance.deploy(args, opt)\n                return instance.call(name, args, { ...opt, callStatic: false })\n              }\n            }\n          )\n        }),\n        {}\n      )\n    : {},\n  ...instance.aci ? {\n    init: Object.assign(\n      function () {\n        const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n        const { opt, args } = parseArguments(aciArgs)(arguments)\n        return instance.deploy(args, opt)\n      },\n      {\n        get () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: true })\n        },\n        send () {\n          const { arguments: aciArgs } = getFunctionACI(instance.aci, 'init')\n          const { opt, args } = parseArguments(aciArgs)(arguments)\n          return instance.deploy(args, { ...opt, callStatic: false })\n        }\n      }\n    )\n  } : {}\n})\n\nconst parseArguments = (aciArgs = []) => (args) => ({\n  opt: args.length > aciArgs.length ? R.last(args) : {},\n  args: Object.values(args).slice(0, aciArgs.length)\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * ContractACI module\n *\n * @module @aeternity/aepp-sdk/es/contract/aci\n * @export ContractACI\n * @example import ContractACI from '@aeternity/aepp-sdk/es/contract/aci'\n */\n\nimport * as R from 'ramda'\n\nimport { validateArguments, transform, transformDecodedData } from './transformation'\nimport { buildContractMethods, getFunctionACI } from './helpers'\nimport AsyncInit from '../../utils/async-init'\n\n/**\n * Validated contract call arguments using contract ACI\n * @function validateCallParams\n * @rtype (aci: Object, params: Array) => Object\n * @param {Object} aci Contract ACI\n * @param {Array} params Contract call arguments\n * @return Promise{Array} Object with validation errors\n */\nasync function prepareArgsForEncode (aci, params) {\n  if (!aci || !aci.arguments) return params\n  // Validation\n  if (aci.arguments.length > params.length) {\n    throw new Error(`Function \"${aci.name}\" require ${aci.arguments.length} arguments of types [${aci.arguments.map(a => JSON.stringify(a.type))}] but get [${params.map(JSON.stringify)}]`)\n  }\n\n  validateArguments(aci, params)\n  const bindings = aci.bindings\n  // Cast argument from JS to Sophia type\n  return Promise.all(aci.arguments.map(async ({ type }, i) => transform(type, params[i], {\n    bindings\n  })))\n}\n\n/**\n * Generate contract ACI object with predefined js methods for contract usage - can be used for creating a reference to already deployed contracts\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @param {String} source Contract source code\n * @param {Object} [options] Options object\n * @param {Object} [options.aci] Contract ACI\n * @param {Object} [options.contractAddress] Contract address\n * @param {Object} [options.opt] Contract options\n * @return {ContractInstance} JS Contract API\n * @example\n * const contractIns = await client.getContractInstance(sourceCode)\n * await contractIns.deploy([321]) or await contractIns.methods.init(321)\n * const callResult = await contractIns.call('setState', [123]) or await contractIns.methods.setState.send(123, options)\n * const staticCallResult = await contractIns.call('setState', [123], { callStatic: true }) or await contractIns.methods.setState.get(123, options)\n * Also you can call contract like: await contractIns.methods.setState(123, options)\n * Then sdk decide to make on-chain or static call(dry-run API) transaction based on function is stateful or not\n */\nasync function getContractInstance (source, { aci, contractAddress, opt } = {}) {\n  aci = aci || await this.contractGetACI(source)\n  const defaultOptions = {\n    skipArgsConvert: false,\n    skipTransformDecoded: false,\n    callStatic: false,\n    deposit: 0,\n    gasPrice: 1000000000, // min gasPrice 1e9\n    amount: 0,\n    gas: 1600000 - 21000,\n    top: null, // using for contract call static\n    waitMined: true,\n    verify: false\n  }\n  const instance = {\n    interface: R.defaultTo(null, R.prop('interface', aci)),\n    aci: R.defaultTo(null, R.path(['encoded_aci', 'contract'], aci)),\n    source,\n    compiled: null,\n    deployInfo: { address: contractAddress },\n    options: R.merge(defaultOptions, opt),\n    compilerVersion: this.compilerVersion,\n    setOptions (opt) {\n      this.options = R.merge(this.options, opt)\n    }\n  }\n\n  /**\n   * Compile contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype () => ContractInstance: Object\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.compile = compile({ client: this, instance })\n  /**\n   * Deploy contract\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false }) => ContractInstance: Object\n   * @param {Array} init Contract init function arguments array\n   * @param {Object} [options={}] options Options object\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @return {ContractInstance} Contract ACI object with predefined js methods for contract usage\n   */\n  instance.deploy = deploy({ client: this, instance })\n  /**\n   * Call contract function\n   * @alias module:@aeternity/aepp-sdk/es/contract/aci\n   * @rtype (init: Array, options: Object = { skipArgsConvert: false, skipTransformDecoded: false, callStatic: false }) => CallResult: Object\n   * @param {String} fn Function name\n   * @param {Array} params Array of function arguments\n   * @param {Object} [options={}] Array of function arguments\n   * @param {Boolean} [options.skipArgsConvert=false] Skip Validation and Transforming arguments before prepare call-data\n   * @param {Boolean} [options.skipTransformDecoded=false] Skip Transform decoded data to JS type\n   * @param {Boolean} [options.callStatic=false] Static function call\n   * @return {Object} CallResult\n   */\n  instance.call = call({ client: this, instance })\n\n  /**\n   * Generate proto function based on contract function using Contract ACI schema\n   * All function can be called like:\n   * 'await contract.methods.testFunction()' -> then sdk will decide to use dry-run or send tx on-chain base on if function stateful or not.\n   * Also you can manually do that:\n   * `await contract.methods.testFunction.get()` -> use call-static(dry-run)\n   * `await contract.methods.testFunction.send()` -> send tx on-chain\n   */\n  instance.methods = buildContractMethods(instance)()\n  return instance\n}\n\nconst call = ({ client, instance }) => async (fn, params = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, fn)\n  const source = opt.source || instance.source\n\n  if (!fn) throw new Error('Function name is required')\n  if (!instance.deployInfo.address) throw new Error('You need to deploy contract before calling!')\n\n  params = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, params) : params\n  const result = opt.callStatic\n    ? await client.contractCallStatic(source, instance.deployInfo.address, fn, params, {\n      top: opt.top,\n      options: opt\n    })\n    : await client.contractCall(source, instance.deployInfo.address, fn, params, opt)\n  return {\n    ...result,\n    decodedResult: await transformDecodedData(\n      fnACI.returns,\n      await result.decode(),\n      { ...opt, compilerVersion: instance.compilerVersion, bindings: fnACI.bindings }\n    )\n  }\n}\n\nconst deploy = ({ client, instance }) => async (init = [], options = {}) => {\n  const opt = R.merge(instance.options, options)\n  const fnACI = getFunctionACI(instance.aci, 'init')\n  const source = opt.source || instance.source\n\n  if (!instance.compiled) await instance.compile()\n  init = !opt.skipArgsConvert ? await prepareArgsForEncode(fnACI, init) : init\n\n  if (opt.callStatic) {\n    return client.contractCallStatic(source, null, 'init', init, {\n      top: opt.top,\n      options: opt,\n      bytecode: instance.compiled\n    })\n  } else {\n    const { owner, transaction, address, createdAt, result, rawTx } = await client.contractDeploy(instance.compiled, opt.source || instance.source, init, opt)\n    instance.deployInfo = { owner, transaction, address, createdAt, result, rawTx }\n    return instance.deployInfo\n  }\n}\n\nconst compile = ({ client, instance }) => async () => {\n  const { bytecode } = await client.contractCompile(instance.source)\n  instance.compiled = bytecode\n  return instance.compiled\n}\n\n/**\n * Contract ACI Stamp\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/contract/aci\n * @rtype Stamp\n * @return {Object} Contract compiler instance\n * @example ContractACI()\n */\nexport default AsyncInit.compose({\n  methods: {\n    getContractInstance\n  }\n})\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Contract module - routines to interact with the æternity contract\n *\n * High level documentation of the contracts are available at\n * https://github.com/aeternity/protocol/tree/master/contracts and\n *\n * @module @aeternity/aepp-sdk/es/ae/contract\n * @export Contract\n * @example import Contract from '@aeternity/aepp-sdk/es/ae/contract' (Using tree-shaking)\n * @example import { Contract } from '@aeternity/aepp-sdk' (Using bundle)\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { isBase64 } from '../utils/crypto'\nimport ContractCompilerAPI from '../contract/compiler'\nimport ContractBase from '../contract'\nimport ContractACI from '../contract/aci'\nimport BigNumber from 'bignumber.js'\nimport NodePool from '../node-pool'\n\n/**\n * Handle contract call error\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {Object} result call result object\n * @throws Error Decoded error\n * @return {Promise<void>}\n */\nasync function handleCallError (result) {\n  const error = Buffer.from(result.returnValue).toString()\n  if (isBase64(error.slice(3))) {\n    const decodedError = Buffer.from(error.slice(3), 'base64').toString()\n    throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n  }\n\n  const decodedError = await this.contractDecodeDataAPI('string', error)\n  throw Object.assign(Error(`Invocation failed: ${error}. Decoded: ${decodedError}`), R.merge(result, { error, decodedError }))\n}\n/**\n * Encode call data for contract call\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call\n * @return {Promise<String>}\n */\nasync function contractEncodeCall (source, name, args) {\n  return this.contractEncodeCallDataAPI(source, name, args)\n}\n\n/**\n * Decode contract call result data\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source - source code\n * @param {String } fn - function name\n * @param {String} callValue - result call data\n * @param {String} callResult - result status\n * @return {Promise<String>} Result object\n * @example\n * const decodedData = await client.contractDecodeData(SourceCode ,'functionName', 'cb_asdasdasd...', 'ok|revert')lt\n * @param options\n */\nasync function contractDecodeData (source, fn, callValue, callResult, options) {\n  return this.contractDecodeCallResultAPI(source, fn, callValue, callResult, options)\n}\n\n/**\n * Static contract call(using dry-run)\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args  Argument's for call function\n * @param {Object} options [options={}]  Options\n * @param {String} top [options.top] Block hash on which you want to call contract\n * @param bytecode\n * @param {String} options [options.options]  Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCallStatic(source, address, fnName, args = [], { top, options = {} })\n * {\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCallStatic (source, address, name, args = [], { top, options = {}, bytecode } = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = opt.onAccount\n    ? await this.address(opt)\n    : await this.address().catch(e => opt.dryRunAccount.pub)\n\n  // Prepare call-data\n  const callData = await this.contractEncodeCall(source, name, args)\n\n  // Get block hash by height\n  if (top && !isNaN(top)) {\n    top = (await this.getKeyBlock(top)).hash\n  }\n  // Prepare nonce\n  const nonce = top ? (await this.getAccount(callerId, { hash: top })).nonce + 1 : undefined\n\n  if (name === 'init') {\n    // Prepare deploy transaction\n    const { tx } = await this.contractCreateTx(R.merge(opt, {\n      callData,\n      code: bytecode,\n      ownerId: callerId,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  } else {\n    // Prepare `call` transaction\n    const tx = await this.contractCallTx(R.merge(opt, {\n      callerId,\n      contractId: address,\n      callData,\n      nonce\n    }))\n    return this.dryRunContractTx(tx, callerId, source, name, { ...opt, top })\n  }\n}\n\nasync function dryRunContractTx (tx, callerId, source, name, opt = {}) {\n  const { top } = opt\n  // Dry-run\n  const dryRunAmount = BigNumber(opt.dryRunAccount.amount).gt(BigNumber(opt.amount || 0)) ? opt.dryRunAccount.amount : opt.amount\n  const dryRunAccount = {\n    amount: dryRunAmount,\n    pubKey: callerId\n  }\n  const [{ result: status, callObj, reason }] = (await this.txDryRun([tx], [dryRunAccount], top)).results\n\n  // check response\n  if (status !== 'ok') throw new Error('Dry run error, ' + reason)\n  const { returnType, returnValue } = callObj\n  if (returnType !== 'ok') {\n    await this.handleCallError(callObj)\n  }\n  return {\n    result: callObj,\n    decode: () => this.contractDecodeData(source, name, returnValue, returnType, opt)\n  }\n}\n\n/**\n * Call contract function\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract source code\n * @param {String} address Contract address\n * @param {String} name Name of function to call\n * @param {Array} args Argument's for call function\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const callResult = await client.contractCall(source, address, fnName, args = [], options)\n * {\n *   hash: TX_HASH,\n *   result: TX_DATA,\n *   decode: (type) => Decode call result\n * }\n */\nasync function contractCall (source, address, name, args = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n\n  const tx = await this.contractCallTx(R.merge(opt, {\n    callerId: await this.address(opt),\n    contractId: address,\n    callData: await this.contractEncodeCall(source, name, args)\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return {\n      hash,\n      rawTx,\n      result,\n      decode: () => this.contractDecodeData(source, name, result.returnValue, result.returnType)\n    }\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Deploy contract to the node\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} code Compiled contract\n * @param {String} source Contract source code\n * @param {Array} initState Arguments of contract constructor(init) function\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const deployed = await client.contractDeploy(bytecode, source, init = [], options)\n * {\n *   owner: OWNER_PUB_KEY,\n *   transaction: TX_HASH,\n *   address: CONTRACT_ADDRESS,\n *   createdAt: Date,\n *   result: DEPLOY_TX_DATA,\n *   call: (fnName, args = [], options) => Call contract function,\n *   callStatic: (fnName, args = [], options) => Static all contract function\n * }\n */\nasync function contractDeploy (code, source, initState = [], options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callData = await this.contractEncodeCall(source, 'init', initState)\n  const ownerId = await this.address(opt)\n\n  const { tx, contractId } = await this.contractCreateTx(R.merge(opt, {\n    callData,\n    code,\n    ownerId\n  }))\n\n  const { hash, rawTx } = await this.send(tx, opt)\n  const result = await this.getTxInfo(hash)\n\n  if (result.returnType === 'ok') {\n    return Object.freeze({\n      result,\n      owner: ownerId,\n      transaction: hash,\n      rawTx,\n      address: contractId,\n      call: async (name, args = [], options) => this.contractCall(source, contractId, name, args, R.merge(opt, options)),\n      callStatic: async (name, args = [], options = {}) => this.contractCallStatic(source, contractId, name, args, { ...options, options: { onAccount: opt.onAccount, ...options.options } }),\n      createdAt: new Date()\n    })\n  } else {\n    await this.handleCallError(result)\n  }\n}\n\n/**\n * Compile contract source code\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @category async\n * @param {String} source Contract sourece code\n * @param {Object} options Transaction options (fee, ttl, gas, amount, deposit)\n * @return {Promise<Object>} Result object\n * @example\n * const compiled = await client.contractCompile(SOURCE_CODE)\n * {\n *   bytecode: CONTRACT_BYTE_CODE,\n *   deploy: (init = [], options = {}) => Deploy Contract,\n *   encodeCall: (fnName, args = []) => Prepare callData\n * }\n */\nasync function contractCompile (source, options = {}) {\n  const bytecode = await this.compileContractAPI(source, options)\n  return Object.freeze(Object.assign({\n    encodeCall: async (name, args) => this.contractEncodeCall(source, name, args),\n    deploy: async (init, options = {}) => this.contractDeploy(bytecode, source, init, options),\n    deployStatic: async (init, options = {}) => this.contractCallStatic(source, null, 'init', init, { bytecode, top: options.top, options })\n  }, { bytecode }))\n}\n\n/**\n * Contract Stamp\n *\n * Provide contract implementation\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/contract\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Contract instance\n * @example\n * import Transaction from '@aeternity/aepp-sdk/es/tx/tx\n * import MemoryAccount from '@aeternity/aepp-sdk/es/account/memory\n * import ChainNode from '@aeternity/aepp-sdk/es/chain/node\n * import ContractCompilerAPI from '@aeternity/aepp-sdk/es/contract/compiler\n * // or using bundle\n * import {\n *   Transaction,\n *   MemoryAccount,\n *   ChainNode,\n *   ContractCompilerAPI\n * } from '@aeternity/aepp-sdk\n *\n * const ContractWithAE = await Contract\n *    .compose(Transaction, MemoryAccount, ChainNode) // AE implementation\n *    .compose(ContractCompilerAPI) // ContractBase implementation\n * const client = await ContractWithAe({ url, internalUrl, compilerUrl, keypair, ... })\n *\n */\nexport const ContractAPI = Ae.compose(ContractBase, ContractACI, {\n  methods: {\n    contractCompile,\n    contractCallStatic,\n    contractDeploy,\n    contractCall,\n    contractEncodeCall,\n    contractDecodeData,\n    dryRunContractTx,\n    handleCallError\n  },\n  deepProps: {\n    Ae: {\n      defaults: {\n        deposit: 0,\n        gasPrice: 1000000000, // min gasPrice 1e9\n        amount: 0,\n        gas: 1600000 - 21000,\n        options: '',\n        dryRunAccount: { pub: 'ak_11111111111111111111111111111111273Yts', amount: '100000000000000000000000000000000000' }\n      }\n    }\n  }\n})\n\nexport const Contract = ContractAPI.compose(NodePool)\nexport const ContractWithCompiler = Contract.compose(ContractCompilerAPI)\nexport default ContractWithCompiler\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport stampit from '@stamp/it'\nimport * as R from 'ramda'\nimport uuid from 'uuid/v4'\n\nfunction createSession () {\n  const id = uuid()\n  this.rpcSessions[id] = { id }\n  return id\n}\n\nfunction hello () {\n  return Promise.resolve(this.createSession())\n}\n\nasync function receive ({ data, origin, source }) {\n  if (typeof data !== 'object' || data.jsonrpc !== '2.0') return\n\n  const { id, method, params, session } = data\n\n  function error () {\n    return Promise.reject(Error(`Error: No such method ${method}`))\n  }\n\n  R.call(\n    (this.rpcMethods[method] || error).bind(this),\n    { params, session: this.rpcSessions[session], origin }\n  ).then(result => {\n    const resolve = typeof result === 'object' && Object.prototype.toString.call(result) === '[object Object]'\n      ? Object.entries(result)\n        .filter(([key, value]) => typeof value !== 'function')\n        .reduce((p, [key, value]) => ({ ...p, [key]: value }), {})\n      : result\n    source.postMessage({ jsonrpc: '2.0', id, result: { resolve } }, '*')\n  }).catch(error => {\n    source.postMessage({ jsonrpc: '2.0', id, result: { reject: error.message } }, '*')\n  })\n}\n\nconst RpcServer = stampit({\n  init ({ self = window }) {\n    const handler = this.receive.bind(this)\n    self.addEventListener('message', handler, false)\n    this.destroyServer = () =>\n      self.removeEventListener('message', handler, false)\n  },\n  methods: {\n    receive,\n    createSession\n  },\n  props: {\n    rpcSessions: {}\n  },\n  deepProps: {\n    rpcMethods: { hello }\n  }\n})\n\nexport default RpcServer\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Wallet module\n * @module @aeternity/aepp-sdk/es/ae/wallet\n * @export Wallet\n * @example import Wallet from '@aeternity/aepp-sdk/es/ae/wallet'\n */\n\nimport Ae from './'\nimport Account from '../account'\nimport ContractBase from '../contract'\nimport Accounts from '../accounts'\nimport Chain from '../chain/node'\nimport Rpc from '../rpc/server'\nimport * as R from 'ramda'\nimport Tx from '../tx/tx'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\n// Todo Enable GA\n// import GeneralizeAccount from '../contract/ga'\n\nconst contains = R.flip(R.contains)\nconst isTxMethod = contains(Tx.compose.deepConfiguration.Ae.methods)\nconst isChainMethod = contains(Chain.compose.deepConfiguration.Ae.methods)\nconst isAccountMethod = contains(Account.compose.deepConfiguration.Ae.methods)\nconst isContractMethod = contains(ContractBase.compose.deepConfiguration.Contract.methods)\nconst handlers = [\n  { pred: isTxMethod, handler: 'onTx', error: 'Creating transaction [{}] rejected' },\n  { pred: isChainMethod, handler: 'onChain', error: 'Chain operation [{}] rejected' },\n  { pred: isAccountMethod, handler: 'onAccount', error: 'Account operation [{}] rejected' },\n  { pred: isContractMethod, handler: 'onContract', error: 'Contract operation [{}] rejected' }\n]\n\n/**\n * Confirm client connection attempt and associate new session with currently\n * selected account preset\n * @instance\n * @category async\n * @return {Promise<String>} Session ID\n */\nasync function hello () {\n  const id = await Rpc.compose.deepProperties.rpcMethods.hello.call(this)\n  this.rpcSessions[id].address = await this.address()\n  return Promise.resolve(id)\n}\n\nasync function rpc (method, params, session) {\n  const { handler, error } = R.find(({ pred }) => pred(method), handlers)\n\n  if (handler === undefined) {\n    return Promise.reject(Error(`Unknown method ${method}`))\n  } else if (await this[handler](method, params, session)) {\n    return this[method].apply(this, params)\n  } else {\n    return Promise.reject(Error(error.replace(/{}/, method)))\n  }\n}\n\nfunction onTx () {\n  console.log('Implement onTx!')\n  return Promise.resolve(false)\n}\n\nfunction onChain () {\n  console.log('Implement onChain!')\n  return Promise.resolve(false)\n}\n\nfunction onAccount () {\n  console.log('Implement onAccount!')\n  return Promise.resolve(false)\n}\n\nfunction onContract () {\n  console.log('Implement onContract!')\n  return Promise.resolve(false)\n}\n\nasync function rpcSign ({ params, session }) {\n  if (await this.onAccount('sign', params, session)) {\n    return this.signWith(session.address, params[0])\n  } else {\n    return Promise.reject(Error('Signing rejected'))\n  }\n}\n\nasync function rpcAddress ({ params, session }) {\n  if (await this.onAccount('address', params, session)) {\n    return Promise.resolve(session.address)\n  } else {\n    return Promise.reject(Error('Address rejected'))\n  }\n}\n\n/**\n * Wallet Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/wallet\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {String} options.url - Node instance to connect to\n * @param {Account[]} [options.accounts] - Accounts to initialize with\n * @param {String} [options.account] - Public key of account to preselect\n * @param {Function} [options.onTx] - Tx method protector function\n * @param {Function} [options.onChain] - Chain method protector function\n * @param {Function} [options.onAccount] - Account method protector function\n * @param {Function} [options.onContract] - Contract method protector function\n * @return {Object} Wallet instance\n * @example Wallet({\n  url: 'https://sdk-testnet.aepps.com/',\n  accounts: [MemoryAccount({keypair})],\n  address: keypair.publicKey,\n  onTx: confirm,\n  onChain: confirm,\n  onAccount: confirm\n  onContract: confirm\n})\n */\nconst Wallet = Ae.compose(Accounts, Chain, NodePool, Tx, Contract, Rpc, {\n  init ({ onTx = this.onTx, onChain = this.onChain, onAccount = this.onAccount, onContract = this.onContract }, { stamp }) {\n    this.onTx = onTx\n    this.onChain = onChain\n    this.onAccount = onAccount\n    this.onContract = onContract\n\n    // Combine `AE` methods with `Contract` and `AENS`\n    const methods = [\n      ...stamp.compose.deepConfiguration.Ae.methods,\n      ...stamp.compose.deepConfiguration.Contract.methods\n    ]\n    this.rpcMethods = Object.assign(R.fromPairs(methods.map(m => [m, ({ params, session }) => this.rpc(m, params, session)])), this.rpcMethods)\n  },\n  methods: { rpc, onTx, onChain, onAccount, onContract },\n  deepProps: {\n    rpcMethods: {\n      sign: rpcSign,\n      address: rpcAddress,\n      hello\n    }\n  }\n})\n\nexport default Wallet\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * RPC client module\n * @module @aeternity/aepp-sdk/es/rpc/client\n * @export RpcClient\n * @example import RpcClient from '@aeternity/aepp-sdk/es/rpc/client'\n */\n\nimport stampit from '@stamp/it'\nimport AsyncInit from '../utils/async-init'\nimport * as R from 'ramda'\n\nfunction post (method) {\n  return function (...params) {\n    return this.post(method, params)\n  }\n}\n\n/**\n * RPC client Stamp\n * @function\n * @alias module:@aeternity/aepp-sdk/es/rpc/client\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @param {Object} [options.parent=window.parent] - IFrame parent window\n * @param {Object} [options.self=window] - IFrame window\n * @return {Object} RPC client\n * @example RpcClient()\n */\nconst RpcClient = stampit(AsyncInit, {\n  async init ({ parent = window.parent, self = window }, { stamp }) {\n    if (parent === self) {\n      throw new Error('rpc client: Can\\'t send messages to itself')\n    }\n\n    let sequence = 0\n    const callbacks = {}\n\n    function receive ({ data }) {\n      if (typeof data !== 'object' || data.type === 'webpackOk') {\n        return\n      }\n\n      const { result: { resolve, reject }, id } = data\n\n      if (callbacks[id]) {\n        if (resolve) {\n          callbacks[id].resolve(resolve)\n        } else if (reject) {\n          callbacks[id].reject(reject)\n        }\n        delete callbacks[id]\n      }\n    }\n\n    this.post = (method, params) => {\n      const ret = new Promise((resolve, reject) => {\n        callbacks[sequence] = { resolve, reject }\n      })\n\n      parent.postMessage({ jsonrpc: '2.0', id: sequence, method, params, session: this.session }, '*')\n      sequence++\n\n      return ret\n    }\n\n    const handler = receive\n    self.addEventListener('message', handler, false)\n    this.destroyClient = () =>\n      self.removeEventListener('message', handler, false)\n\n    this.session = await this.post('hello')\n  },\n  props: {\n    handler: null\n  },\n  methods: {},\n  composers ({ stamp, composables }) {\n    // Combine Ae and Contract methods\n    const methods = [\n      ...(R.path(['compose', 'deepConfiguration', 'Ae', 'methods'], stamp) || []),\n      ...(R.path(['compose', 'deepConfiguration', 'Contract', 'methods'], stamp) || [])\n    ]\n    const rpcMethods = R.fromPairs(methods.map(m => [m, post(m)]))\n    if (stamp.compose.methods) {\n      // remove signTransaction and getNetworkId from AEPP instance, let's go it through RPC\n      ['signTransaction', 'getNetworkId'].forEach(m => delete stamp.compose.methods[m])\n    }\n    stamp.compose.methods = Object.assign(rpcMethods, stamp.compose.methods)\n  }\n})\n\nexport default RpcClient\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Oracle module - routines to interact with the æternity oracle system\n *\n * The high-level description of the oracle system is\n * https://github.com/aeternity/protocol/blob/master/ORACLE.md in the protocol\n * repository.\n * @module @aeternity/aepp-sdk/es/ae/oracle\n * @export Oracle\n * @example import Oracle from '@aeternity/aepp-sdk/es/ae/oracle'\n */\n\nimport Ae from './'\nimport * as R from 'ramda'\nimport { decodeBase64Check } from '../utils/crypto'\n\n/**\n * Constructor for Oracle Object (helper object for using Oracle)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @return {Promise<Object>} Oracle object\n */\nasync function getOracleObject (oracleId) {\n  const oracle = await this.getOracle(oracleId)\n  const { oracleQueries: queries } = await this.getOracleQueries(oracleId)\n  return {\n    ...oracle,\n    queries,\n    postQuery: (query, options) => this.postQueryToOracle(oracleId, query, options),\n    respondToQuery: (queryId, response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    extendOracle: (oracleTtl, options) => this.extendOracleTtl(oracleId, oracleTtl, options),\n    getQuery: async (queryId) => {\n      return getQueryObject.bind(this)(oracleId, queryId)\n    }\n  }\n}\n\n/**\n * Constructor for OracleQuery Object (helper object for using OracleQuery)\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @return {Promise<Object>} OracleQuery object\n */\nasync function getQueryObject (oracleId, queryId) {\n  return {\n    ...(await this.getOracleQuery(oracleId, queryId)),\n    respond: (response, options) => this.respondToQuery(oracleId, queryId, response, options),\n    pollForResponse: ({ attempts, interval }) => this.pollForQueryResponse(oracleId, queryId, { attempts, interval }),\n    decode: (data) => decodeBase64Check(data.slice(3))\n  }\n}\n\n/**\n * Poll for oracle query response\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle Query id\n * @param {Object} [options] Options object\n * @param {Object} [options.attempts] Poll attempt's(default: 20)\n * @param {Object} [options.interval] Poll interval(default: 5000)\n * @return {Promise<Object>} OracleQuery object\n */\nexport async function pollForQueryResponse (oracleId, queryId, { attempts = 20, interval = 5000 } = {}) {\n  const emptyResponse = 'or_Xfbg4g=='\n  async function pause (duration) {\n    await new Promise(resolve => setTimeout(resolve, duration))\n  }\n  async function probe (left) {\n    const query = await this.getOracleQuery(oracleId, queryId)\n    if (query.response !== emptyResponse) {\n      return { response: query.response, decode: () => decodeBase64Check(query.response.slice(3)) }\n    }\n    if (left > 0) {\n      await pause(interval)\n      return probe.bind(this)(left - 1)\n    }\n    throw Error(`Giving up after ${attempts * interval}ms`)\n  }\n  return probe.bind(this)(attempts)\n}\n\n/**\n * Register oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} queryFormat Format of query\n * @param {String} responseFormat Format of query response\n * @param {Object} [options={}] Options\n * @param {String|Number} [options.queryFee] queryFee Oracle query Fee\n * @param {Object} [options.oracleTtl] oracleTtl OracleTtl object {type: 'delta|block', value: 'number'}\n * @param {Number} [options.abiVersion] abiVersion Always 0 (do not use virtual machine)\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function registerOracle (queryFormat, responseFormat, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options) // Preset VmVersion for oracle\n  const accountId = await this.address(opt)\n\n  const oracleRegisterTx = await this.oracleRegisterTx(R.merge(opt, {\n    accountId,\n    queryFormat,\n    responseFormat\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await getOracleObject.bind(this)(`ok_${accountId.slice(3)}`))\n  }\n}\n\n/**\n * Post query to oracle\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} query Oracle query object\n * @param {Object} [options={}]\n * @param {String|Number} [options.queryTtl] queryTtl Oracle query time to leave\n * @param {String|Number} [options.responseTtl] queryFee Oracle query response time to leave\n * @param {String|Number} [options.queryFee] queryFee Oracle query fee\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Query object\n */\nasync function postQueryToOracle (oracleId, query, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const senderId = await this.address(opt)\n\n  const { tx: oracleRegisterTx, queryId } = await this.oraclePostQueryTx(R.merge(opt, {\n    oracleId,\n    senderId,\n    query\n  }))\n  return {\n    ...(await this.send(oracleRegisterTx, opt)),\n    ...(await (await getOracleObject.bind(this)(oracleId)).getQuery(queryId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} oracleTtl Oracle time to leave for extend\n * @param {Object} [options={}]\n * @param {Number} [options.fee] fee Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function extendOracleTtl (oracleId, oracleTtl, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleExtendTx = await this.oracleExtendTx(R.merge(opt, {\n    oracleId,\n    callerId,\n    oracleTtl\n  }))\n  return {\n    ...(await this.send(oracleExtendTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Extend oracle ttl\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @instance\n * @function\n * @category async\n * @param {String} oracleId Oracle public key\n * @param {String} queryId Oracle query id\n * @param {String} response Oracle query response\n * @param {Object} [options={}]\n * @param {Number} [options.responseTtl] responseTtl Query response time to leave\n * @param {Number} [options.fee] Transaction fee\n * @param {Number} [options.ttl] Transaction time to leave\n * @return {Promise<Object>} Oracle object\n */\nasync function respondToQuery (oracleId, queryId, response, options = {}) {\n  const opt = R.merge(this.Ae.defaults, options)\n  const callerId = await this.address(opt)\n\n  const oracleRespondTx = await this.oracleRespondTx(R.merge(opt, {\n    oracleId,\n    queryId,\n    callerId,\n    response\n  }))\n  return {\n    ...(await this.send(oracleRespondTx, opt)),\n    ...(await getOracleObject.bind(this)(oracleId))\n  }\n}\n\n/**\n * Oracle Stamp\n *\n * Oracle provides oracle-system related methods atop\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/oracle\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Oracle instance\n */\nconst Oracle = Ae.compose({\n  methods: {\n    registerOracle,\n    respondToQuery,\n    extendOracleTtl,\n    postQueryToOracle,\n    pollForQueryResponse,\n    getOracleObject,\n    getQueryObject\n  },\n  deepProps: { Ae: { defaults: {\n    queryFee: 30000,\n    oracleTtl: { type: 'delta', value: 500 },\n    queryTtl: { type: 'delta', value: 10 },\n    responseTtl: { type: 'delta', value: 10 }\n  } } }\n})\n\nexport default Oracle\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Aepp module\n * @module @aeternity/aepp-sdk/es/ae/aepp\n * @export Aepp\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/aepp'\n */\n\nimport Ae from './'\nimport Aens from './aens'\nimport Rpc from '../rpc/client'\nimport { ContractAPI } from './contract'\nimport Oracle from './oracle'\n// Todo Enable GA\n// import GeneralizeAccount from '../contract/ga'\n\n/**\n * Aepp Stamp\n *\n * Aepp provides Ae base functionality with Contract and Aens.\n * This stamp can be used only with Wallet, all Aepp method's going through RPC to Wallet.\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/aepp\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Aepp instance\n */\nconst Aepp = Ae.compose(ContractAPI, Aens, Oracle, Rpc)\n\nexport default Aepp\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'\nimport { EventEmitter } from 'events'\nimport * as R from 'ramda'\nimport JSONBig from '../utils/json-big'\nimport { pascalToSnake } from '../utils/string'\nimport { awaitingConnection } from './handlers'\n\n// Send ping message every 10 seconds\nconst PING_TIMEOUT_MS = 10000\n// Close connection if pong message is not received within 5 seconds\nconst PONG_TIMEOUT_MS = 5000\n\nconst options = new WeakMap()\nconst status = new WeakMap()\nconst state = new WeakMap()\nconst fsm = new WeakMap()\nconst websockets = new WeakMap()\nconst eventEmitters = new WeakMap()\nconst messageQueue = new WeakMap()\nconst messageQueueLocked = new WeakMap()\nconst actionQueue = new WeakMap()\nconst actionQueueLocked = new WeakMap()\nconst sequence = new WeakMap()\nconst channelId = new WeakMap()\nconst rpcCallbacks = new WeakMap()\nconst pingTimeoutId = new WeakMap()\nconst pongTimeoutId = new WeakMap()\n\nfunction channelURL (url, params) {\n  const paramString = R.join('&', R.values(R.mapObjIndexed((value, key) =>\n    `${pascalToSnake(key)}=${encodeURIComponent(value)}`, params)))\n\n  return `${url}?${paramString}`\n}\n\nfunction emit (channel, ...args) {\n  eventEmitters.get(channel).emit(...args)\n}\n\nfunction enterState (channel, nextState) {\n  if (!nextState) {\n    throw new Error('State Channels FSM entered unknown state')\n  }\n  fsm.set(channel, nextState)\n  if (nextState.handler.enter) {\n    nextState.handler.enter(channel)\n  }\n  dequeueAction(channel)\n}\n\nfunction changeStatus (channel, newStatus) {\n  const prevStatus = status.get(channel)\n  if (newStatus !== prevStatus) {\n    status.set(channel, newStatus)\n    emit(channel, 'statusChanged', newStatus)\n  }\n}\n\nfunction changeState (channel, newState) {\n  state.set(channel, newState)\n  emit(channel, 'stateChanged', newState)\n}\n\nfunction send (channel, message) {\n  websockets.get(channel).send(JSONBig.stringify(message))\n}\n\nfunction enqueueAction (channel, guard, action) {\n  actionQueue.set(channel, [\n    ...actionQueue.get(channel) || [],\n    { guard, action }\n  ])\n  dequeueAction(channel)\n}\n\nasync function dequeueAction (channel) {\n  const locked = actionQueueLocked.get(channel)\n  const queue = actionQueue.get(channel) || []\n  if (locked || !queue.length) {\n    return\n  }\n  const state = fsm.get(channel)\n  const index = queue.findIndex(item => item.guard(channel, state))\n  if (index === -1) {\n    return\n  }\n  actionQueue.set(channel, queue.filter((_, i) => index !== i))\n  actionQueueLocked.set(channel, true)\n  const nextState = await Promise.resolve(queue[index].action(channel, state))\n  actionQueueLocked.set(channel, false)\n  enterState(channel, nextState)\n}\n\nasync function handleMessage (channel, message) {\n  const { handler, state } = fsm.get(channel)\n  enterState(channel, await Promise.resolve(handler(channel, message, state)))\n}\n\nasync function dequeueMessage (channel) {\n  const queue = messageQueue.get(channel)\n  if (messageQueueLocked.get(channel) || !queue.length) {\n    return\n  }\n  const [message, ...remaining] = queue\n  messageQueue.set(channel, remaining || [])\n  messageQueueLocked.set(channel, true)\n  await handleMessage(channel, message)\n  messageQueueLocked.set(channel, false)\n  dequeueMessage(channel)\n}\n\nfunction ping (channel) {\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n  pingTimeoutId.set(channel, setTimeout(() => {\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.system',\n      params: {\n        action: 'ping'\n      }\n    })\n    pongTimeoutId.set(channel, setTimeout(() => {\n      disconnect(channel)\n      emit(channel, 'error', Error('Server pong timed out'))\n    }, PONG_TIMEOUT_MS))\n  }, PING_TIMEOUT_MS))\n}\n\nfunction onMessage (channel, data) {\n  const message = JSONBig.parse(data)\n  if (message.id) {\n    const callback = rpcCallbacks.get(channel).get(message.id)\n    try {\n      callback(message)\n    } finally {\n      rpcCallbacks.get(channel).delete(message.id)\n    }\n  } else if (message.method === 'channels.message') {\n    emit(channel, 'message', message.params.data.message)\n  } else if (message.method === 'channels.system.pong') {\n    if (\n      (message.params.channel_id === channelId.get(channel)) ||\n      // Skip channelId check if channelId is not known yet\n      (channelId.get(channel) == null)\n    ) {\n      ping(channel)\n    }\n  } else {\n    messageQueue.set(channel, [...(messageQueue.get(channel) || []), message])\n    dequeueMessage(channel)\n  }\n}\n\nfunction wrapCallErrorMessage (message) {\n  const [{ message: details } = {}] = message.error.data || []\n  if (details) {\n    return Error(`${message.error.message}: ${details}`)\n  }\n  return Error(message.error.message)\n}\n\nfunction call (channel, method, params) {\n  return new Promise((resolve, reject) => {\n    const id = sequence.set(channel, sequence.get(channel) + 1).get(channel)\n    rpcCallbacks.get(channel).set(id, (message) => {\n      if (message.result) return resolve(message.result)\n      if (message.error) return reject(wrapCallErrorMessage(message))\n    })\n    send(channel, { jsonrpc: '2.0', method, id, params })\n  })\n}\n\nfunction disconnect (channel) {\n  websockets.get(channel).close()\n  clearTimeout(pingTimeoutId.get(channel))\n  clearTimeout(pongTimeoutId.get(channel))\n}\n\nfunction WebSocket (url, callbacks) {\n  function fireOnce (target, key, fn) {\n    const once = R.once(fn)\n    const original = target[key]\n    target[key] = (...args) => {\n      once(...args)\n      if (typeof original === 'function') {\n        original(...args)\n      }\n    }\n  }\n\n  return new Promise((resolve, reject) => {\n    const ws = new W3CWebSocket(url)\n    // eslint-disable-next-line no-return-assign\n    Object.entries(callbacks).forEach(([key, callback]) => ws[key] = callback)\n    fireOnce(ws, 'onopen', () => resolve(ws))\n    fireOnce(ws, 'onerror', (err) => reject(err))\n  })\n}\n\nasync function initialize (channel, channelOptions) {\n  const optionsKeys = ['sign', 'url']\n  const params = R.pickBy((_, key) => !optionsKeys.includes(key), channelOptions)\n  const { url } = channelOptions\n  const wsUrl = channelURL(url, { ...params, protocol: 'json-rpc' })\n\n  options.set(channel, channelOptions)\n  fsm.set(channel, { handler: awaitingConnection })\n  eventEmitters.set(channel, new EventEmitter())\n  sequence.set(channel, 0)\n  rpcCallbacks.set(channel, new Map())\n  const ws = await WebSocket(wsUrl, {\n    onopen: () => {\n      changeStatus(channel, 'connected')\n      ping(channel)\n    },\n    onclose: () => {\n      changeStatus(channel, 'disconnected')\n      clearTimeout(pingTimeoutId.get(channel))\n      clearTimeout(pongTimeoutId.get(channel))\n    },\n    onmessage: ({ data }) => onMessage(channel, data)\n  })\n  websockets.set(channel, ws)\n}\n\nexport {\n  initialize,\n  options,\n  status,\n  state,\n  eventEmitters,\n  emit,\n  changeStatus,\n  changeState,\n  send,\n  enqueueAction,\n  channelId,\n  call,\n  disconnect\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport { generateKeyPair, encodeContractAddress, encodeBase64Check } from '../utils/crypto'\nimport {\n  options,\n  changeStatus,\n  changeState,\n  send,\n  emit,\n  channelId,\n  disconnect\n} from './internal'\nimport { unpackTx, buildTx } from '../tx/builder'\n\nfunction encodeRlpTx (rlpBinary) {\n  return `tx_${encodeBase64Check(rlpBinary)}`\n}\n\nasync function appendSignature (tx, signFn) {\n  const { signatures, encodedTx } = unpackTx(tx).tx\n  const result = await signFn(encodeRlpTx(encodedTx.rlpEncoded))\n  if (result) {\n    const { tx: signedTx, txType } = unpackTx(result)\n    return encodeRlpTx(buildTx({\n      signatures: signatures.concat(signedTx.signatures),\n      encodedTx: signedTx.encodedTx.rlpEncoded\n    }, txType).rlpEncoded)\n  }\n}\n\nfunction handleUnexpectedMessage (channel, message, state) {\n  if (state.reject) {\n    state.reject(Object.assign(\n      Error(`Unexpected message received:\\n\\n${JSON.stringify(message)}`),\n      { wsMessage: message }\n    ))\n  }\n  return { handler: channelOpen }\n}\n\nexport function awaitingConnection (channel, message, state) {\n  if (message.method === 'channels.info') {\n    if (['channel_accept', 'funding_created'].includes(message.params.data.event)) {\n      changeStatus(channel, {\n        channel_accept: 'accepted',\n        funding_created: 'halfSigned'\n      }[message.params.data.event])\n      return { handler: awaitingChannelCreateTx }\n    }\n    if (message.params.data.event === 'channel_reestablished') {\n      return { handler: awaitingOpenConfirmation }\n    }\n    return { handler: awaitingConnection }\n  }\n  if (message.method === 'channels.error') {\n    emit(channel, 'error', new Error(message.payload.message))\n    return { handler: channelClosed }\n  }\n}\n\nexport async function awaitingChannelCreateTx (channel, message, state) {\n  const tag = {\n    initiator: 'initiator_sign',\n    responder: 'responder_sign'\n  }[options.get(channel).role]\n  if (message.method === `channels.sign.${tag}`) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n      return { handler: awaitingOnChainTx }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => options.get(channel).sign(tag, tx))\n    send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (\n      message.params.data.info === 'funding_signed' &&\n      options.get(channel).role === 'initiator'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n    if (\n      message.params.data.info === 'funding_created' &&\n      options.get(channel).role === 'responder'\n    ) {\n      return { handler: awaitingBlockInclusion }\n    }\n  }\n  if (\n    message.method === 'channels.info' &&\n    message.params.data.event === 'funding_signed' &&\n    options.get(channel).role === 'initiator'\n  ) {\n    changeStatus(channel, 'signed')\n    return { handler: awaitingOnChainTx }\n  }\n}\n\nexport function awaitingBlockInclusion (channel, message, state) {\n  if (message.method === 'channels.info') {\n    const handler = {\n      funding_created: awaitingBlockInclusion,\n      own_funding_locked: awaitingBlockInclusion,\n      funding_locked: awaitingOpenConfirmation\n    }[message.params.data.event]\n    if (handler) {\n      return { handler }\n    }\n  }\n  if (message.method === 'channels.on_chain_tx') {\n    emit(channel, 'onChainTx', message.params.data.tx, {\n      info: message.params.data.info,\n      type: message.params.data.type\n    })\n    return { handler: awaitingBlockInclusion }\n  }\n}\n\nexport function awaitingOpenConfirmation (channel, message, state) {\n  if (message.method === 'channels.info' && message.params.data.event === 'open') {\n    channelId.set(channel, message.params.channel_id)\n    return { handler: awaitingInitialState }\n  }\n}\n\nexport function awaitingInitialState (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    return { handler: channelOpen }\n  }\n}\n\nexport async function channelOpen (channel, message, state) {\n  switch (message.method) {\n    case 'channels.info':\n      switch (message.params.data.event) {\n        case 'update':\n        case 'withdraw_created':\n        case 'deposit_created':\n          return { handler: awaitingTxSignRequest }\n        case 'own_withdraw_locked':\n        case 'withdraw_locked':\n        case 'own_deposit_locked':\n        case 'deposit_locked':\n          emit(channel, message.params.data.event)\n          return { handler: channelOpen }\n        case 'close_mutual':\n          return { handler: channelOpen }\n        case 'closing':\n          changeStatus(channel, 'closing')\n          return { handler: channelOpen }\n        case 'closed_confirmed':\n          changeStatus(channel, 'closed')\n          return { handler: channelClosed }\n        case 'died':\n          changeStatus(channel, 'died')\n          return { handler: channelClosed }\n      }\n      break\n    case 'channels.on_chain_tx':\n      emit(channel, 'onChainTx', message.params.data.tx, {\n        info: message.params.data.info,\n        type: message.params.data.type\n      })\n      return { handler: channelOpen }\n    case 'channels.leave':\n      // TODO: emit event\n      return { handler: channelOpen }\n    case 'channels.update':\n      changeState(channel, message.params.data.state)\n      return { handler: channelOpen }\n    case 'channels.sign.shutdown_sign_ack':\n      return awaitingTxSignRequest(channel, message, state)\n  }\n}\nchannelOpen.enter = (channel) => {\n  changeStatus(channel, 'open')\n}\n\nexport async function awaitingOffChainTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingOffChainUpdate, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingOffChainUpdate, state }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    const { data = [] } = message.error\n    if (data.find(i => i.code === 1001)) {\n      state.reject(new Error('Insufficient balance'))\n    } else if (data.find(i => i.code === 1002)) {\n      state.reject(new Error('Amount cannot be negative'))\n    } else {\n      state.reject(new Error(message.error.message))\n    }\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingOffChainUpdate (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  if (message.error) {\n    state.reject(new Error(message.error.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingTxSignRequest (channel, message, state) {\n  // eslint-disable-next-line no-useless-escape\n  const [, tag] = message.method.match(/^channels\\.sign\\.([^\\.]+)$/) || []\n  if (tag) {\n    if (message.params.data.tx) {\n      const signedTx = await options.get(channel).sign(tag, message.params.data.tx, {\n        updates: message.params.data.updates\n      })\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    } else {\n      const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n        options.get(channel).sign(tag, tx, { updates: message.params.data.updates })\n      )\n      if (signedTx) {\n        send(channel, { jsonrpc: '2.0', method: `channels.${tag}`, params: { signed_tx: signedTx } })\n        return { handler: channelOpen }\n      }\n    }\n    // soft-reject via competing update\n    send(channel, {\n      jsonrpc: '2.0',\n      method: 'channels.update.new',\n      params: {\n        from: generateKeyPair().publicKey,\n        to: generateKeyPair().publicKey,\n        amount: 1\n      }\n    })\n    return { handler: awaitingUpdateConflict }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingUpdateConflict (channel, message, state) {\n  if (message.error) {\n    return { handler: awaitingUpdateConflict }\n  }\n  if (message.method === 'channels.conflict') {\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingShutdownTx (channel, message, state) {\n  if (message.method === 'channels.sign.shutdown_sign') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { tx: signedTx } })\n      return { handler: awaitingShutdownOnChainTx, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.shutdown_sign', params: { signed_tx: signedTx } })\n    return { handler: awaitingShutdownOnChainTx, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingShutdownOnChainTx (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    state.resolve(message.params.data.tx)\n    return { handler: channelClosed }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingLeave (channel, message, state) {\n  if (message.method === 'channels.leave') {\n    state.resolve({ channelId: message.params.channel_id, signedTx: message.params.data.state })\n    disconnect(channel)\n    return { handler: channelClosed }\n  }\n  if (message.method === 'channels.error') {\n    state.reject(new Error(message.data.message))\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingWithdrawTx (channel, message, state) {\n  if (message.method === 'channels.sign.withdraw_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { tx: signedTx } })\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.withdraw_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingWithdrawCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingWithdrawCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_withdraw_locked', 'withdraw_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_withdraw_locked: state.onOwnWithdrawLocked,\n        withdraw_locked: state.onWithdrawLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingWithdrawCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingDepositTx (channel, message, state) {\n  if (message.method === 'channels.sign.deposit_tx') {\n    const { sign } = state\n    if (message.params.data.tx) {\n      const signedTx = await sign(message.params.data.tx, { updates: message.params.data.updates })\n      send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { tx: signedTx } })\n      return { handler: awaitingDepositCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx =>\n      sign(tx, { updates: message.params.data.updates })\n    )\n    send(channel, { jsonrpc: '2.0', method: 'channels.deposit_tx', params: { signed_tx: signedTx } })\n    return { handler: awaitingDepositCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingDepositCompletion (channel, message, state) {\n  if (message.method === 'channels.on_chain_tx') {\n    if (state.onOnChainTx) {\n      state.onOnChainTx(message.params.data.tx)\n    }\n    return { handler: awaitingDepositCompletion, state }\n  }\n  if (message.method === 'channels.info') {\n    if (['own_deposit_locked', 'deposit_locked'].includes(message.params.data.event)) {\n      const callback = {\n        own_deposit_locked: state.onOwnDepositLocked,\n        deposit_locked: state.onDepositLocked\n      }[message.params.data.event]\n      if (callback) {\n        callback()\n      }\n      return { handler: awaitingDepositCompletion, state }\n    }\n  }\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingNewContractTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingNewContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingNewContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingNewContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    const { round } = unpackTx(message.params.data.state).tx.encodedTx.tx\n    // eslint-disable-next-line standard/computed-property-even-spacing\n    const owner = options.get(channel)[{\n      initiator: 'initiatorId',\n      responder: 'responderId'\n    }[options.get(channel).role]]\n    changeState(channel, message.params.data.state)\n    state.resolve({\n      accepted: true,\n      address: encodeContractAddress(owner, round),\n      signedTx: message.params.data.state\n    })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport async function awaitingCallContractUpdateTx (channel, message, state) {\n  if (message.method === 'channels.sign.update') {\n    if (message.params.data.tx) {\n      const signedTx = await state.sign(message.params.data.tx)\n      send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { tx: signedTx } })\n      return { handler: awaitingCallContractCompletion, state }\n    }\n    const signedTx = await appendSignature(message.params.data.signed_tx, tx => state.sign(tx))\n    send(channel, { jsonrpc: '2.0', method: 'channels.update', params: { signed_tx: signedTx } })\n    return { handler: awaitingCallContractCompletion, state }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallContractCompletion (channel, message, state) {\n  if (message.method === 'channels.update') {\n    changeState(channel, message.params.data.state)\n    state.resolve({ accepted: true, signedTx: message.params.data.state })\n    return { handler: channelOpen }\n  }\n  if (message.method === 'channels.conflict') {\n    state.resolve({ accepted: false })\n    return { handler: channelOpen }\n  }\n  return handleUnexpectedMessage(channel, message, state)\n}\n\nexport function awaitingCallsPruned (channels, message, state) {\n  if (message.method === 'channels.calls_pruned.reply') {\n    state.resolve()\n    return { handler: channelOpen }\n  }\n  state.reject(new Error('Unexpected message received'))\n  return { handler: channelClosed }\n}\n\nexport function channelClosed (channel, message, state) {\n  return { handler: channelClosed }\n}\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Channel module\n * @module @aeternity/aepp-sdk/es/channel/index\n * @export Channel\n * @example import Channel from '@aeternity/aepp-sdk/es/channel/index'\n */\n\nimport AsyncInit from '../utils/async-init'\nimport { snakeToPascal } from '../utils/string'\nimport * as handlers from './handlers'\nimport {\n  eventEmitters,\n  status as channelStatus,\n  initialize,\n  enqueueAction,\n  send,\n  channelId,\n  call,\n  disconnect as channelDisconnect\n} from './internal'\nimport * as R from 'ramda'\n\nfunction snakeToPascalObjKeys (obj) {\n  return Object.entries(obj).reduce((result, [key, val]) => ({\n    ...result,\n    [snakeToPascal(key)]: val\n  }), {})\n}\n\n/**\n * Register event listener function\n *\n * Possible events:\n *\n *   - \"error\"\n *   - \"onChainTx\"\n *   - \"ownWithdrawLocked\"\n *   - \"withdrawLocked\"\n *   - \"ownDepositLocked\"\n *   - \"depositLocked\"\n *\n * @param {String} event - Event name\n * @param {Function} callback - Callback function\n */\nfunction on (event, callback) {\n  eventEmitters.get(this).on(event, callback)\n}\n\n/**\n * Close the connection\n */\nfunction disconnect () {\n  return channelDisconnect(this)\n}\n\n/**\n * Get current status\n *\n * @return {String}\n */\nfunction status () {\n  return channelStatus.get(this)\n}\n\n/**\n * Get current state\n *\n * @return {Promise<Object>}\n */\nasync function state () {\n  return snakeToPascalObjKeys(await call(this, 'channels.get.offchain_state', {}))\n}\n\n/**\n * Get channel id\n *\n * @return {String}\n */\nfunction id () {\n  return channelId.get(this)\n}\n\n/**\n * Trigger a transfer update\n *\n * The transfer update is moving tokens from one channel account to another.\n * The update is a change to be applied on top of the latest state.\n *\n * Sender and receiver are the channel parties. Both the initiator and responder\n * can take those roles. Any public key outside of the channel is considered invalid.\n *\n * @param {String} from - Sender's public address\n * @param {String} to - Receiver's public address\n * @param {Number} amount - Transaction amount\n * @param {Function} sign - Function which verifies and signs offchain transaction\n * @return {Promise<Object>}\n * @example channel.update(\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   10,\n *   async (tx) => await account.signTransaction(tx)\n * ).then(({ accepted, signedTx }) =>\n *   if (accepted) {\n *     console.log('Update has been accepted')\n *   }\n * )\n */\nfunction update (from, to, amount, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new',\n          params: { from, to, amount }\n        })\n        return {\n          handler: handlers.awaitingOffChainTx,\n          state: {\n            resolve,\n            reject,\n            sign\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Get proof of inclusion\n *\n * If a certain address of an account or a contract is not found\n * in the state tree - the response is an error.\n *\n * @param {Object} addresses\n * @param {Array<String>} [addresses.accounts] - List of account addresses to include in poi\n * @param {Array<String>} [addresses.contracts] - List of contract addresses to include in poi\n * @return {Promise<String>}\n * @example channel.poi({\n *   accounts: [\n *     'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *     'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   ],\n *   contracts: ['ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA']\n * }).then(poi => console.log(poi))\n */\nasync function poi ({ accounts, contracts }) {\n  return (await call(this, 'channels.get.poi', { accounts, contracts })).poi\n}\n\n/**\n * Get balances\n *\n * The accounts paramcontains a list of addresses to fetch balances of.\n * Those can be either account balances or a contract ones, encoded as an account addresses.\n *\n * If a certain account address had not being found in the state tree - it is simply\n * skipped in the response.\n *\n * @param {Array<String>} accounts - List of addresses to fetch balances from\n * @return {Promise<Object>}\n * @example channel.balances([\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E'\n *   'ct_2dCUAWYZdrWfACz3a2faJeKVTVrfDYxCQHCqAt5zM15f3u2UfA'\n * ]).then(balances =>\n *   console.log(balances['ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'])\n * )\n */\nasync function balances (accounts) {\n  return R.reduce((acc, item) => ({\n    ...acc,\n    [item.account]: item.balance\n  }), {}, await call(this, 'channels.get.balances', { accounts }))\n}\n\n/**\n * Leave channel\n *\n * It is possible to leave a channel and then later reestablish the channel\n * off-chain state and continue operation. When a leave method is called,\n * the channel fsm passes it on to the peer fsm, reports the current mutually\n * signed state and then terminates.\n *\n * The channel can be reestablished by instantiating another Channel instance\n * with two extra params: existingChannelId and offchainTx (returned from leave\n * method as channelId and signedTx respectively).\n *\n * @return {Promise<Object>}\n * @example channel.leave().then(({ channelId, signedTx }) => {\n *   console.log(channelId)\n *   console.log(signedTx)\n * })\n */\nfunction leave () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.leave', params: {} })\n        return {\n          handler: handlers.awaitingLeave,\n          state: { resolve, reject }\n        }\n      })\n  })\n}\n\n/**\n * Trigger mutual close\n *\n * At any moment after the channel is opened, a closing procedure can be triggered.\n * This can be done by either of the parties. The process is similar to the off-chain updates.\n *\n * @param {Function} sign - Function which verifies and signs mutual close transaction\n * @return {Promise<String>}\n * @example channel.shutdown(\n *   async (tx) => await account.signTransaction(tx)\n * ).then(tx => console.log('on_chain_tx', tx))\n */\nfunction shutdown (sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.shutdown', params: {} })\n        return {\n          handler: handlers.awaitingShutdownTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Withdraw tokens from the channel\n *\n * After the channel had been opened any of the participants can initiate a withdrawal.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_withdraw_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a withdrawal. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The withdrawal amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the withdraw transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnWithdrawLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onWithdrawLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to withdraw\n * @param {Function} sign - Function which verifies and signs withdraw transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when withdraw transaction has been posted on chain\n * @param {Function} [callbacks.onOwnWithdrawLocked]\n * @param {Function} [callbacks.onWithdrawLocked]\n * @return {Promise<Object>}\n * @example channel.withdraw(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Withdrawal has been accepted')\n *   } else {\n *     console.log('Withdrawal has been rejected')\n *   }\n * })\n */\nfunction withdraw (amount, sign, { onOnChainTx, onOwnWithdrawLocked, onWithdrawLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.withdraw', params: { amount } })\n        return {\n          handler: handlers.awaitingWithdrawTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnWithdrawLocked,\n            onWithdrawLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Deposit tokens into the channel\n *\n * After the channel had been opened any of the participants can initiate a deposit.\n * The process closely resembles the update. The most notable difference is that the\n * transaction has been co-signed: it is channel_deposit_tx and after the procedure\n * is finished - it is being posted on-chain.\n *\n * Any of the participants can initiate a deposit. The only requirements are:\n *\n *   - Channel is already opened\n *   - No off-chain update/deposit/withdrawal is currently being performed\n *   - Channel is not being closed or in a solo closing state\n *   - The deposit amount must be equal to or greater than zero, and cannot exceed\n *     the available balance on the channel (minus the channel_reserve)\n *\n * After the other party had signed the deposit transaction, the transaction is posted\n * on-chain and onOnChainTx callback is called with on-chain transaction as first argument.\n * After computing transaction hash it can be tracked on the chain: entering the mempool,\n * block inclusion and a number of confirmations.\n *\n * After the minimum_depth block confirmations onOwnDepositLocked callback is called\n * (without any arguments).\n *\n * When the other party had confirmed that the block height needed is reached\n * onDepositLocked callback is called (without any arguments).\n *\n * @param {Number} amount - Amount of tokens to deposit\n * @param {Function} sign - Function which verifies and signs deposit transaction\n * @param {Object} [callbacks]\n * @param {Function} [callbacks.onOnChainTx] - Called when deposit transaction has been posted on chain\n * @param {Function} [callbacks.onOwnDepositLocked]\n * @param {Function} [callbacks.onDepositLocked]\n * @return {Promise<Object>}\n * @example channel.deposit(\n *   100,\n *   async (tx) => await account.signTransaction(tx),\n *   { onOnChainTx: (tx) => console.log('on_chain_tx', tx) }\n * ).then(({ accepted, state }) => {\n *   if (accepted) {\n *     console.log('Deposit has been accepted')\n *     console.log('The new state is:', state)\n *   } else {\n *     console.log('Deposit has been rejected')\n *   }\n * })\n */\nfunction deposit (amount, sign, { onOnChainTx, onOwnDepositLocked, onDepositLocked } = {}) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, { jsonrpc: '2.0', method: 'channels.deposit', params: { amount } })\n        return {\n          handler: handlers.awaitingDepositTx,\n          state: {\n            sign,\n            resolve,\n            reject,\n            onOnChainTx,\n            onOwnDepositLocked,\n            onDepositLocked\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger create contract update\n *\n * The create contract update is creating a contract inside the channel's internal state tree.\n * The update is a change to be applied on top of the latest state.\n *\n * That would create a contract with the poster being the owner of it. Poster commits initially\n * a deposit amount of tokens to the new contract.\n *\n * @param {Object} options\n * @param {String} options.code - Api encoded compiled AEVM byte code\n * @param {String} options.callData - Api encoded compiled AEVM call data for the code\n * @param {Number} options.deposit - Initial amount the owner of the contract commits to it\n * @param {Number} options.vmVersion - Version of the AEVM\n * @param {Number} options.abiVersion - Version of the ABI\n * @param {Function} sign - Function which verifies and signs create contract transaction\n * @return {Promise<Object>}\n * @example channel.createContract({\n *   code: 'cb_HKtpipK4aCgYb17wZ...',\n *   callData: 'cb_1111111111111111...',\n *   deposit: 10,\n *   vmVersion: 3,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx, address }) => {\n *   if (accepted) {\n *     console.log('New contract has been created')\n *     console.log('Contract address:', address)\n *   } else {\n *     console.log('New contract has been rejected')\n *   }\n * })\n */\nfunction createContract ({ code, callData, deposit, vmVersion, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.new_contract',\n          params: {\n            code,\n            call_data: callData,\n            deposit,\n            vm_version: vmVersion,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingNewContractTx,\n          state: {\n            sign,\n            resolve,\n            reject\n          }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Trigger call a contract update\n *\n * The call contract update is calling a preexisting contract inside the channel's\n * internal state tree. The update is a change to be applied on top of the latest state.\n *\n * That would call a contract with the poster being the caller of it. Poster commits\n * an amount of tokens to the contract.\n *\n * The call would also create a call object inside the channel state tree. It contains\n * the result of the contract call.\n *\n * It is worth mentioning that the gas is not consumed, because this is an off-chain\n * contract call. It would be consumed if it were a on-chain one. This could happen\n * if a call with a similar computation amount is to be forced on-chain.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @param {Function} sign - Function which verifies and signs contract call transaction\n * @return {Promise<Object>}\n * @example channel.callContract({\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   callData: 'cb_1111111111111111...',\n *   amount: 0,\n *   abiVersion: 1\n * }).then(({ accepted, signedTx }) => {\n *   if (accepted) {\n *     console.log('Contract called succesfully')\n *   } else {\n *     console.log('Contract call has been rejected')\n *   }\n * })\n */\nfunction callContract ({ amount, callData, contract, abiVersion }, sign) {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.update.call_contract',\n          params: {\n            amount,\n            call_data: callData,\n            contract_id: contract,\n            abi_version: abiVersion\n          }\n        })\n        return {\n          handler: handlers.awaitingCallContractUpdateTx,\n          state: { resolve, reject, sign }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Call contract using dry-run\n *\n * In order to get the result of a potential contract call, one might need to\n * dry-run a contract call. It takes the exact same arguments as a call would\n * and returns the call object.\n *\n * The call is executed in the channel's state but it does not impact the state\n * whatsoever. It uses as an environment the latest channel's state and the current\n * top of the blockchain as seen by the node.\n *\n * @param {Object} options\n * @param {String} [options.amount] - Amount the caller of the contract commits to it\n * @param {String} [options.callData] - ABI encoded compiled AEVM call data for the code\n * @param {Number} [options.contract] - Address of the contract to call\n * @param {Number} [options.abiVersion] - Version of the ABI\n * @return {Promise<Object>}\n * @example channel.callContractStatic({\n  *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n  *   callData: 'cb_1111111111111111...',\n  *   amount: 0,\n  *   abiVersion: 1\n  * }).then(({ returnValue, gasUsed }) => {\n  *   console.log('Returned value:', returnValue)\n  *   console.log('Gas used:', gasUsed)\n  * })\n  */\nasync function callContractStatic ({ amount, callData, contract, abiVersion }) {\n  return snakeToPascalObjKeys(await call(this, 'channels.dry_run.call_contract', {\n    amount,\n    call_data: callData,\n    contract_id: contract,\n    abi_version: abiVersion\n  }))\n}\n\n/**\n * Get contract call result\n *\n * The combination of a caller, contract and a round of execution determines the\n * contract call. Providing an incorrect set of those results in an error response.\n *\n * @param {Object} options\n * @param {String} [options.caller] - Address of contract caller\n * @param {String} [options.contract] - Address of the contract\n * @param {Number} [options.round] - Round when contract was called\n * @return {Promise<Object>}\n * @example channel.getContractCall({\n *   caller: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   contract: 'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa',\n *   round: 3\n * }).then(({ returnType, returnValue }) => {\n *   if (returnType === 'ok') console.log(returnValue)\n * })\n */\nasync function getContractCall ({ caller, contract, round }) {\n  return snakeToPascalObjKeys(\n    await call(this, 'channels.get.contract_call', {\n      caller_id: caller,\n      contract_id: contract,\n      round\n    })\n  )\n}\n\n/**\n * Get contract latest state\n *\n * @param {String} contract - Address of the contract\n * @return {Promise<Object>}\n * @example channel.getContractState(\n *   'ct_9sRA9AVE4BYTAkh5RNfJYmwQe1NZ4MErasQLXZkFWG43TPBqa'\n * ).then(({ contract }) => {\n *   console.log('deposit:', contract.deposit)\n * })\n */\nasync function getContractState (contract) {\n  const result = await call(this, 'channels.get.contract', { pubkey: contract })\n  return snakeToPascalObjKeys({\n    ...result,\n    contract: snakeToPascalObjKeys(result.contract)\n  })\n}\n\n/**\n * Clean up all locally stored contract calls\n *\n * Contract calls are kept locally in order for the participant to be able to look them up.\n * They consume memory and in order for the participant to free it - one can prune all messages.\n * This cleans up all locally stored contract calls and those will no longer be available for\n * fetching and inspection.\n *\n * @return {Promise}\n */\nfunction cleanContractCalls () {\n  return new Promise((resolve, reject) => {\n    enqueueAction(\n      this,\n      (channel, state) => state.handler === handlers.channelOpen,\n      (channel, state) => {\n        send(channel, {\n          jsonrpc: '2.0',\n          method: 'channels.clean_contract_calls',\n          params: {}\n        })\n        return {\n          handler: handlers.awaitingCallsPruned,\n          state: { resolve, reject }\n        }\n      }\n    )\n  })\n}\n\n/**\n * Send generic message\n *\n * If message is an object it will be serialized into JSON string\n * before sending.\n *\n * If there is ongoing update that has not yet been finished the message\n * will be sent after that update is finalized.\n *\n * @param {String|Object} message\n * @param {String} recipient - Address of the recipient\n * @example channel.sendMessage(\n *   'hello world',\n *   'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH'\n * )\n */\nfunction sendMessage (message, recipient) {\n  let info = message\n  if (typeof message === 'object') {\n    info = JSON.stringify(message)\n  }\n  send(this, { jsonrpc: '2.0', method: 'channels.message', params: { info, to: recipient } })\n}\n\n/**\n * Channel\n *\n * @function\n * @alias module:@aeternity/aepp-sdk/es/channel/index\n * @rtype Channel\n * @param {Object} options - Channel params\n * @param {String} options.url - Channel url (for example: \"ws://localhost:3001\")\n * @param {String} options.role - Participant role (\"initiator\" or \"responder\")\n * @param {String} options.initiatorId - Initiator's public key\n * @param {String} options.responderId - Responder's public key\n * @param {Number} options.pushAmount - Initial deposit in favour of the responder by the initiator\n * @param {Number} options.initiatorAmount - Amount of tokens the initiator has committed to the channel\n * @param {Number} options.responderAmount - Amount of tokens the responder has committed to the channel\n * @param {Number} options.channelReserve - The minimum amount both peers need to maintain\n * @param {Number} [options.ttl] - Minimum block height to include the channel_create_tx\n * @param {String} options.host - Host of the responder's node\n * @param {Number} options.port - The port of the responders node\n * @param {Number} options.lockPeriod - Amount of blocks for disputing a solo close\n * @param {Number} [options.existingChannelId] - Existing channel id (required if reestablishing a channel)\n * @param {Number} [options.offchainTx] - Offchain transaction (required if reestablishing a channel)\n * @param {Number} [options.timeoutIdle] - The time waiting for a new event to be initiated (default: 600000)\n * @param {Number} [options.timeoutFundingCreate] - The time waiting for the initiator to produce the create channel transaction after the noise session had been established (default: 120000)\n * @param {Number} [options.timeoutFundingSign] - The time frame the other client has to sign an off-chain update after our client had initiated and signed it. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 120000)\n * @param {Number} [options.timeoutFundingLock] - The time frame the other client has to confirm an on-chain transaction reaching maturity (passing minimum depth) after the local node has detected this. This applies only for double signed on-chain intended updates: channel create transaction, deposit, withdrawal and etc. (default: 360000)\n * @param {Number} [options.timeoutSign] - The time frame the client has to return a signed off-chain update or to decline it. This applies for all off-chain updates (default: 500000)\n * @param {Number} [options.timeoutAccept] - The time frame the other client has to react to an event. This applies for all off-chain updates that are not meant to land on-chain, as well as some special cases: opening a noise connection, mutual closing acknowledgement and reestablishing an existing channel (default: 120000)\n * @param {Number} [options.timeoutInitialized] - the time frame the responder has to accept an incoming noise session. Applicable only for initiator (default: timeout_accept's value)\n * @param {Number} [options.timeoutAwaitingOpen] - The time frame the initiator has to start an outgoing noise session to the responder's node. Applicable only for responder (default: timeout_idle's value)\n * @param {Function} options.sign - Function which verifies and signs transactions\n * @return {Promise<Object>} Channel instance\n * @example Channel({\n *   url: 'ws://localhost:3001',\n *   role: 'initiator'\n *   initiatorId: 'ak_Y1NRjHuoc3CGMYMvCmdHSBpJsMDR6Ra2t5zjhRcbtMeXXLpLH',\n *   responderId: 'ak_V6an1xhec1xVaAhLuak7QoEbi6t7w5hEtYWp9bMKaJ19i6A9E',\n *   initiatorAmount: 1e18,\n *   responderAmount: 1e18,\n *   pushAmount: 0,\n *   channelReserve: 0,\n *   ttl: 1000,\n *   host: 'localhost',\n *   port: 3002,\n *   lockPeriod: 10,\n *   async sign (tag, tx) => await account.signTransaction(tx)\n * })\n */\nconst Channel = AsyncInit.compose({\n  async init (options) {\n    initialize(this, options)\n  },\n  methods: {\n    on,\n    status,\n    state,\n    id,\n    update,\n    poi,\n    balances,\n    leave,\n    shutdown,\n    sendMessage,\n    withdraw,\n    deposit,\n    createContract,\n    callContract,\n    callContractStatic,\n    getContractCall,\n    getContractState,\n    disconnect,\n    cleanContractCalls\n  }\n})\n\nexport default Channel\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\n/**\n * Universal module\n * @module @aeternity/aepp-sdk/es/ae/universal\n * @export Universal\n * @example import Ae from '@aeternity/aepp-sdk/es/ae/universal'\n */\n\nimport Ae from './'\nimport Chain from '../chain/node'\nimport Aens from './aens'\nimport Transaction from '../tx/tx'\nimport Oracle from './oracle'\n// Todo Enable GA\n// import GeneralizeAccount from '../contract/ga'\nimport Accounts from '../accounts'\nimport Contract from './contract'\nimport NodePool from '../node-pool'\n\n/**\n * Universal Stamp\n *\n * Universal provides Ae base functionality with Contract and Aens\n * {@link module:@aeternity/aepp-sdk/es/ae--Ae} clients.\n * @function\n * @alias module:@aeternity/aepp-sdk/es/ae/universal\n * @rtype Stamp\n * @param {Object} [options={}] - Initializer object\n * @return {Object} Universal instance\n */\nexport const Universal = Ae.compose(Accounts, Chain, NodePool, Transaction, Aens, Contract, Oracle, {\n  init () {},\n  props: { process: {} }\n})\nexport const UniversalWithAccounts = Universal\nexport default Universal\n","/*\n * ISC License (ISC)\n * Copyright (c) 2018 aeternity developers\n *\n *  Permission to use, copy, modify, and/or distribute this software for any\n *  purpose with or without fee is hereby granted, provided that the above\n *  copyright notice and this permission notice appear in all copies.\n *\n *  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\n *  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\n *  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\n *  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\n *  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\n *  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\n *  PERFORMANCE OF THIS SOFTWARE.\n */\n\nimport * as Crypto from './utils/crypto'\nimport * as Bytes from './utils/bytes'\nimport * as TxBuilder from './tx/builder'\nimport * as TxBuilderHelper from './tx/builder/helpers'\nimport HdWallet from './utils/hd-wallet'\n\nimport Ae from './ae'\nimport Chain from './chain'\nimport ChainNode from './chain/node'\nimport Node from './node'\nimport NodePool from './node-pool'\nimport Tx from './tx'\nimport Transaction from './tx/tx'\nimport TransactionValidator from './tx/validator'\nimport Account from './account'\nimport Accounts from './accounts'\nimport MemoryAccount from './account/memory'\nimport Aens from './ae/aens'\nimport Contract from './ae/contract'\n// Todo Enable GA\n// import GeneralizeAccount from './contract/ga'\nimport ContractCompilerAPI from './contract/compiler'\nimport Wallet from './ae/wallet'\nimport Aepp from './ae/aepp'\nimport Oracle from './ae/oracle'\nimport OracleNodeAPI from './oracle/node'\nimport Selector from './account/selector'\nimport Channel from './channel'\nimport Universal from './ae/universal'\nimport ContractACI from './contract/aci'\n\nexport {\n  Account,\n  Accounts,\n  Ae,\n  Aens,\n  Aepp,\n  Bytes,\n  Contract,\n  ContractCompilerAPI,\n  ContractACI,\n  ChainNode,\n  Channel,\n  Crypto,\n  Chain,\n  // Todo Enable GA\n  // GeneralizeAccount,\n  HdWallet,\n  MemoryAccount,\n  Node,\n  NodePool,\n  Oracle,\n  OracleNodeAPI,\n  Selector,\n  Transaction,\n  TransactionValidator,\n  Tx,\n  TxBuilder,\n  TxBuilderHelper,\n  Universal,\n  Wallet\n}\n"],"sourceRoot":""}